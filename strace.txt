restart_syscall(<... resuming interrupted call ...>) = 0 <4.813306>
getcwd("/home/hvacproz/public_html/acesys", 4096) = 34 <0.000019>
lstat("/home", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000017>
lstat("/home/hvacproz", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz/public_html", {st_mode=S_IFDIR|0750, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000011>
lstat("/home/hvacproz/public_html/acesys/cake", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz/public_html/acesys/cake/basics.php", {st_mode=S_IFREG|0644, st_size=27582, ...}) = 0 <0.000010>
stat("/home/hvacproz/public_html/acesys/cake/basics.php", {st_mode=S_IFREG|0644, st_size=27582, ...}) = 0 <0.000009>
getcwd("/home/hvacproz/public_html/acesys", 4096) = 34 <0.000009>
open("/home/hvacproz/public_html/acesys/cake/basics.php", O_RDONLY) = 3 <0.000013>
fstat(3, {st_mode=S_IFREG|0644, st_size=27582, ...}) = 0 <0.000008>
open("/home/hvacproz/public_html/acesys/cake/basics.php", O_RDONLY) = 4 <0.000009>
fstat(4, {st_mode=S_IFREG|0644, st_size=27582, ...}) = 0 <0.000008>
mmap(NULL, 27582, PROT_READ, MAP_SHARED, 4, 0) = 0x7fe0abc41000 <0.000014>
munmap(0x7fe0abc41000, 27582)           = 0 <0.000022>
close(4)                                = 0 <0.000010>
fcntl(3, F_GETFL)                       = 0x8000 (flags O_RDONLY|O_LARGEFILE) <0.000010>
fstat(3, {st_mode=S_IFREG|0644, st_size=27582, ...}) = 0 <0.000009>
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe0abc47000 <0.000011>
lseek(3, 0, SEEK_CUR)                   = 0 <0.000009>
lseek(3, 0, SEEK_SET)                   = 0 <0.000008>
read(3, "<?php\n/* SVN FILE: $Id: basics.php 5421 2007-07-09 04:58:57Z phpnut $ */\n/**\n * Basic Cake functionality.\n *\n * Core functions for including other source files, loading models and so forth.\n *\n * PHP versions 4 and 5\n *\n * CakePHP(tm) :  Rapid Development Framework <http://www.cakephp.org/>\n * Copyright 2005-2007, Cake Software Foundation, Inc.\n *\t\t\t\t\t\t\t\t1785 E. Sahara Avenue, Suite 490-204\n *\t\t\t\t\t\t\t\tLas Vegas, Nevada 89104\n *\n * Licensed under The MIT License\n * Redistributions of files must retain the above copyright notice.\n *\n * @filesource\n * @copyright\t\tCopyright 2005-2007, Cake Software Foundation, Inc.\n * @link\t\t\t\thttp://www.cakefoundation.org/projects/info/cakephp CakePHP(tm) Project\n * @package\t\t\tcake\n * @subpackage\t\tcake.cake\n * @since\t\t\tCakePHP(tm) v 0.2.9\n * @version\t\t\t$Revision: 5421 $\n * @modifiedby\t\t$LastChangedBy: phpnut $\n * @lastmodified\t$Date: 2007-07-08 23:58:57 -0500 (Sun, 08 Jul 2007) $\n * @license\t\t\thttp://www.opensource.org/licenses/mit-license.php The MIT License\n */\n/**\n * Basic defines for timing functions.\n */\n\tdefine('SECOND', 1);\n\tdefine('MINUTE', 60 * SECOND);\n\tdefine('HOUR', 60 * MINUTE);\n\tdefine('DAY', 24 * HOUR);\n\tdefine('WEEK', 7 * DAY);\n\tdefine('MONTH', 30 * DAY);\n\tdefine('YEAR', 365 * DAY);\n/**\n * Patch for PHP < 4.3\n */\n\tif (!function_exists(\"ob_get_clean\")) {\n\t\tfunction ob_get_clean() {\n\t\t\t$ob_contents = ob_get_contents();\n\t\t\tob_end_clean();\n\t\t\treturn $ob_contents;\n\t\t}\n\t}\n/**\n * Patch for PHP < 4.3\n */\n\tif (version_compare(phpversion(), '5.0') < 0) {\n\t\teval ('\n\t\tfunction clone($object) {\n\t\treturn $object;\n\t\t}');\n\t}\n/**\n * Computes the difference of arrays using keys for comparison\n *\n * @param array\n * @param array\n * @return array\n */\n\tif (!function_exists('array_diff_key')) {\n\t\tfunction array_diff_key() {\n\t\t\t$valuesDiff = array();\n\n\t\t\tif (func_num_args() < 2) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tforeach (func_get_args() as $param) {\n\t\t\t\tif (!is_array($param)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$args = func_get_args();\n\t\t\tforeach ($args[0] as $valueKey => $valueData) {\n\t\t\t\tfor ($"..., 4096) = 4096 <0.000012>
lseek(3, 4096, SEEK_SET)                = 4096 <0.000008>
read(3, " . DS . 'models' . DS;\n\n\t\tforeach (listClasses($pluginModelDir)as $modelFileName) {\n\t\t\tlist($name) = explode('.', $modelFileName);\n\t\t\t$className = Inflector::camelize($name);\n\n\t\t\tif (!class_exists($className)) {\n\t\t\t\trequire($pluginModelDir . $modelFileName);\n\n\t\t\t\tif (phpversion() < 5 && function_exists(\"overload\")) {\n\t\t\t\t\toverload($className);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n/**\n * Loads custom view class.\n *\n */\n\tfunction loadView($viewClass) {\n\t\tif (!class_exists($viewClass . 'View')) {\n\t\t\t$paths = Configure::getInstance();\n\t\t\t$file = Inflector::underscore($viewClass) . '.php';\n\n\t\t\tforeach ($paths->viewPaths as $path) {\n\t\t\t\tif (file_exists($path . $file)) {\n\t\t\t\t\treturn require($path . $file);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($viewFile = fileExistsInPath(LIBS . 'view' . DS . $file)) {\n\t\t\t\tif (file_exists($viewFile)) {\n\t\t\t\t\trequire($viewFile);\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n/**\n * Loads a model by CamelCase name.\n */\n\tfunction loadModel($name = null) {\n\t\tif (!class_exists('Model')) {\n\t\t\trequire LIBS . 'model' . DS . 'model.php';\n\t\t}\n\t\tif (!class_exists('AppModel')) {\n\t\t\tif (file_exists(APP . 'app_model.php')) {\n\t\t\t\trequire(APP . 'app_model.php');\n\t\t\t} else {\n\t\t\t\trequire(CAKE . 'app_model.php');\n\t\t\t}\n\t\t\tif (phpversion() < 5 && function_exists(\"overload\")) {\n\t\t\t\toverload('AppModel');\n\t\t\t}\n\t\t}\n\n\t\tif (!is_null($name) && !class_exists($name)) {\n\t\t\t$className = $name;\n\t\t\t$name = Inflector::underscore($name);\n\t\t\t$paths = Configure::getInstance();\n\n\t\t\tforeach ($paths->modelPaths as $path) {\n\t\t\t\tif (file_exists($path . $name . '.php')) {\n\t\t\t\t\trequire($path . $name . '.php');\n\t\t\t\t\tif (phpversion() < 5 && function_exists(\"overload\")) {\n\t\t\t\t\t\toverload($className);\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n/**\n * Loads all controllers.\n */\n\tfunction loadControllers() {\n\t\t$paths = Configure::getInstance();\n\t\tif (!class_exists('AppController')) {\n\t\t\tif (file_exists(APP . 'app_controller.php')) {\n\t\t\t\trequire(APP . 'app_controller.php');\n\t\t\t} else {\n\t\t\t\trequire(CAKE . 'app_con"..., 4096) = 4096 <0.000010>
read(3, " . DS . 'controllers' . DS . $plugin . '_controller.php')) {\n\t\t\t\t\trequire(APP . 'plugins' . DS . $plugin . DS . 'controllers' . DS . $plugin . '_controller.php');\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!class_exists($controller . 'Controller')) {\n\t\t\t$controller = Inflector::underscore($controller);\n\t\t\t$file = APP . 'plugins' . DS . $plugin . DS . 'controllers' . DS . $controller . '_controller.php';\n\n\t\t\tif (file_exists($file)) {\n\t\t\t\trequire($file);\n\t\t\t\treturn true;\n\t\t\t}  elseif (!class_exists(Inflector::camelize($plugin . '_controller'))) {\n\t\t\t\tif (file_exists(APP . 'plugins' . DS . $plugin . DS . 'controllers' . DS . $plugin . '_controller.php')) {\n\t\t\t\t\trequire(APP . 'plugins' . DS . $plugin . DS . 'controllers' . DS . $plugin . '_controller.php');\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n/**\n * Loads a helper\n *\n * @param  string  $name Name of helper\n * @return boolean Success\n */\n\tfunction loadHelper($name) {\n\t\t$paths = Configure::getInstance();\n\n\t\tif ($name === null) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (!class_exists($name . 'Helper')) {\n\t\t\t$name=Inflector::underscore($name);\n\n\t\t\tforeach ($paths->helperPaths as $path) {\n\t\t\t\tif (file_exists($path . $name . '.php')) {\n\t\t\t\t\trequire($path . $name . '.php');\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($helper_fn = fileExistsInPath(LIBS . 'view' . DS . 'helpers' . DS . $name . '.php')) {\n\t\t\t\tif (file_exists($helper_fn)) {\n\t\t\t\t\trequire($helper_fn);\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n/**\n * Loads a plugin's helper\n *\n * @param  string  $plugin Name of plugin\n * @param  string  $helper Name of helper to load\n * @return boolean Success\n */\n\tfunction loadPluginHelper($plugin, $helper) {\n\t\tif (!class_exists($helper . 'Helper')) {\n\t\t\t$helper = Inflector::underscore($helper);\n\t\t\t$file = APP . 'plugins' . DS . $plugin . DS . 'views' . DS . 'helpers' . DS . $helper . '.php';\n\t\t\tif (file_exists($file)) {\n\t\t\t\trequire($file);\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t"..., 8192) = 8192 <0.000010>
read(3, "g $str String to lowercase\n */\n\tfunction low($str) {\n\t\treturn strtolower($str);\n\t}\n/**\n * Convenience method for strtoupper().\n *\n * @param string $str String to uppercase\n */\n\tfunction up($str) {\n\t\treturn strtoupper($str);\n\t}\n/**\n * Convenience method for str_replace().\n *\n * @param string $search String to be replaced\n * @param string $replace String to insert\n * @param string $subject String to search\n */\n\tfunction r($search, $replace, $subject) {\n\t\treturn str_replace($search, $replace, $subject);\n\t}\n/**\n * Print_r convenience function, which prints out <PRE> tags around\n * the output of given array. Similar to debug().\n *\n * @see\tdebug()\n * @param array\t$var\n */\n\tfunction pr($var) {\n\t\tif (Configure::read() > 0) {\n\t\t\techo \"<pre>\";\n\t\t\tprint_r($var);\n\t\t\techo \"</pre>\";\n\t\t}\n\t}\n/**\n * Display parameter\n *\n * @param  mixed  $p Parameter as string or array\n * @return string\n */\n\tfunction params($p) {\n\t\tif (!is_array($p) || count($p) == 0) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\tif (is_array($p[0]) && count($p) == 1) {\n\t\t\t\treturn $p[0];\n\t\t\t} else {\n\t\t\t\treturn $p;\n\t\t\t}\n\t\t}\n\t}\n/**\n * Merge a group of arrays\n *\n * @param array First array\n * @param array Second array\n * @param array Third array\n * @param array Etc...\n * @return array All array parameters merged into one\n */\n\tfunction am() {\n\t\t$r = array();\n\t\tforeach (func_get_args()as $a) {\n\t\t\tif (!is_array($a)) {\n\t\t\t\t$a = array($a);\n\t\t\t}\n\t\t\t$r = array_merge($r, $a);\n\t\t}\n\t\treturn $r;\n\t}\n/**\n * Returns the REQUEST_URI from the server environment, or, failing that,\n * constructs a new one, using the PHP_SELF constant and other variables.\n *\n * @return string URI\n */\n\tfunction setUri() {\n\t\tif (env('HTTP_X_REWRITE_URL')) {\n\t\t\t$uri = env('HTTP_X_REWRITE_URL');\n\t\t} elseif (env('REQUEST_URI')) {\n\t\t\t$uri = env('REQUEST_URI');\n\t\t} else {\n\t\t\tif (env('argv')) {\n\t\t\t\t$uri = env('argv');\n\n\t\t\t\tif (defined('SERVER_IIS')) {\n\t\t\t\t\t$uri = BASE_URL . $uri[0];\n\t\t\t\t} else {\n\t\t\t\t\t$uri = env('PHP_SELF') . '/' . $uri[0];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$uri = env('PHP_SELF') . '/' . env('QUERY_STRING');\n\t\t\t}\n\t\t}\n\t"..., 8192) = 8192 <0.000010>
read(3, " fully till 2.0\n */\n\tfunction __($msg, $return = null) {\n\t\tif (is_null($return)) {\n\t\t\techo($msg);\n\t\t} else {\n\t\t\treturn $msg;\n\t\t}\n\t}\n/**\n * Counts the dimensions of an array\n *\n * @param array $array\n * @return int The number of dimensions in $array\n */\n\tfunction countdim($array) {\n\t\tif (is_array(reset($array))) {\n\t\t\t$return = countdim(reset($array)) + 1;\n\t\t} else {\n\t\t\t$return = 1;\n\t\t}\n\t\treturn $return;\n\t}\n/**\n * Shortcut to Log::write.\n */\n\tfunction LogError($message) {\n\t\tif (!class_exists('CakeLog')) {\n\t\t\tuses('cake_log');\n\t\t}\n\t\t$bad = array(\"\\n\", \"\\r\", \"\\t\");\n\t\t$good = ' ';\n\t\tCakeLog::write('error', str_replace($bad, $good, $message));\n\t}\n/**\n * Searches include path for files\n *\n * @param string $file\n * @return Full path to file if exists, otherwise false\n */\n\tfunction fileExistsInPath($file) {\n\t\t$paths = explode(PATH_SEPARATOR, ini_get('include_path'));\n\t\tforeach ($paths as $path) {\n\t\t\t$fullPath = $path . DIRECTORY_SEPARATOR . $file;\n\n\t\t\tif (file_exists($fullPath)) {\n\t\t\t\treturn $fullPath;\n\t\t\t} elseif (file_exists($file)) {\n\t\t\t\treturn $file;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n/**\n * Convert forward slashes to underscores and removes first and last underscores in a string\n *\n * @param string\n * @return string with underscore remove from start and end of string\n */\n\tfunction convertSlash($string) {\n\t\t$string = trim($string,\"/\");\n\t\t$string = preg_replace('/\\/\\//', '/', $string);\n\t\t$string = str_replace('/', '_', $string);\n\t\treturn $string;\n\t}\n\n/**\n * chmod recursively on a directory\n *\n * @param string $path\n * @param int $mode\n * @return boolean\n */\n\tfunction chmodr($path, $mode = 0755) {\n\t\tif (!is_dir($path)) {\n\t\t\treturn chmod($path, $mode);\n\t\t}\n\t\t$dir = opendir($path);\n\n\t\twhile ($file = readdir($dir)) {\n\t\t\tif ($file != '.' && $file != '..') {\n\t\t\t\t$fullpath = $path . '/' . $file;\n\n\t\t\t\tif (!is_dir($fullpath)) {\n\t\t\t\t\tif (!chmod($fullpath, $mode)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (!chmodr($fullpath, $mode)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tclosedir($dir);\n\n\t\tif (chmod($path, $mode)) {\n\t\t\tre"..., 8192) = 3006 <0.000009>
read(3, "", 4096)                       = 0 <0.015600>
read(3, "", 8192)                       = 0 <0.000011>
read(3, "", 8192)                       = 0 <0.000019>
brk(0x1be1000)                          = 0x1be1000 <0.000014>
close(3)                                = 0 <0.000014>
munmap(0x7fe0abc47000, 4096)            = 0 <0.000018>
getcwd("/home/hvacproz/public_html/acesys", 4096) = 34 <0.000011>
lstat("/home", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000011>
lstat("/home/hvacproz", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000011>
lstat("/home/hvacproz/public_html", {st_mode=S_IFDIR|0750, st_size=4096, ...}) = 0 <0.000015>
lstat("/home/hvacproz/public_html/acesys", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/config", 0x7ffdb566e9a0) = -1 ENOENT (No such file or directory) <0.000010>
lstat("/usr", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000010>
lstat("/usr/local", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/usr/local/php52", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/usr/local/php52/pear", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000010>
lstat("/usr/local/php52/pear/config", 0x7ffdb566e9a0) = -1 ENOENT (No such file or directory) <0.000010>
lstat("/home", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz/public_html", {st_mode=S_IFDIR|0750, st_size=4096, ...}) = 0 <0.000011>
lstat("/home/hvacproz/public_html/acesys", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000011>
lstat("/home/hvacproz/public_html/acesys/config", 0x7ffdb566e9a0) = -1 ENOENT (No such file or directory) <0.000013>
lstat("/home", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000011>
lstat("/home/hvacproz", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html", {st_mode=S_IFDIR|0750, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/app", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz/public_html/acesys/app/config", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/app/config/core.php", {st_mode=S_IFREG|0644, st_size=4809, ...}) = 0 <0.000010>
stat("/home/hvacproz/public_html/acesys/app/config/core.php", {st_mode=S_IFREG|0644, st_size=4809, ...}) = 0 <0.000010>
getcwd("/home/hvacproz/public_html/acesys", 4096) = 34 <0.000009>
lstat("/home", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000012>
lstat("/home/hvacproz/public_html", {st_mode=S_IFDIR|0750, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/config", 0x7ffdb566f8c0) = -1 ENOENT (No such file or directory) <0.000009>
open("/home/hvacproz/public_html/acesys/config/core.php", O_RDONLY) = -1 ENOENT (No such file or directory) <0.000010>
lstat("/usr", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/usr/local", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/usr/local/php52", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/usr/local/php52/pear", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000010>
lstat("/usr/local/php52/pear/config", 0x7ffdb566f8c0) = -1 ENOENT (No such file or directory) <0.000009>
open("/usr/local/php52/pear/config/core.php", O_RDONLY) = -1 ENOENT (No such file or directory) <0.000009>
lstat("/home", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000012>
lstat("/home/hvacproz", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html", {st_mode=S_IFDIR|0750, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/config", 0x7ffdb566f8c0) = -1 ENOENT (No such file or directory) <0.000009>
open("/home/hvacproz/public_html/acesys/config/core.php", O_RDONLY) = -1 ENOENT (No such file or directory) <0.000010>
open("/home/hvacproz/public_html/acesys/app/config/core.php", O_RDONLY) = 3 <0.000011>
fstat(3, {st_mode=S_IFREG|0644, st_size=4809, ...}) = 0 <0.000008>
open("/home/hvacproz/public_html/acesys/app/config/core.php", O_RDONLY) = 4 <0.000010>
fstat(4, {st_mode=S_IFREG|0644, st_size=4809, ...}) = 0 <0.000008>
mmap(NULL, 4809, PROT_READ, MAP_SHARED, 4, 0) = 0x7fe0abc46000 <0.000011>
munmap(0x7fe0abc46000, 4809)            = 0 <0.000012>
close(4)                                = 0 <0.000009>
fcntl(3, F_GETFL)                       = 0x8000 (flags O_RDONLY|O_LARGEFILE) <0.000008>
fstat(3, {st_mode=S_IFREG|0644, st_size=4809, ...}) = 0 <0.000009>
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe0abc47000 <0.000011>
lseek(3, 0, SEEK_CUR)                   = 0 <0.000008>
lseek(3, 0, SEEK_SET)                   = 0 <0.000008>
read(3, "<?php\n\n/* SVN FILE: $Id: core.php 4409 2007-02-02 13:20:59Z phpnut $ */\n\n/**\n\n * This is core configuration file.\n\n *\n\n * Use it to configure core behaviour ofCake.\n\n *\n\n * PHP versions 4 and 5\n\n *\n\n * CakePHP(tm) :  Rapid Development Framework <http://www.cakephp.org/>\n\n * Copyright 2005-2007, Cake Software Foundation, Inc.\n\n *\t\t\t\t\t\t\t\t1785 E. Sahara Avenue, Suite 490-204\n\n *\t\t\t\t\t\t\t\tLas Vegas, Nevada 89104\n\n *\n\n * Licensed under The MIT License\n\n * Redistributions of files must retain the above copyright notice.\n\n *\n\n * @filesource\n\n * @copyright\t\tCopyright 2005-2007, Cake Software Foundation, Inc.\n\n * @link\t\t\t\thttp://www.cakefoundation.org/projects/info/cakephp CakePHP(tm) Project\n\n * @package\t\t\tcake\n\n * @subpackage\t\tcake.app.config\n\n * @since\t\t\tCakePHP(tm) v 0.2.9\n\n * @version\t\t\t$Revision: 4409 $\n\n * @modifiedby\t\t$LastChangedBy: phpnut $\n\n * @lastmodified\t$Date: 2007-02-02 07:20:59 -0600 (Fri, 02 Feb 2007) $\n\n * @license\t\t\thttp://www.opensource.org/licenses/mit-license.php The MIT License\n\n */\n\n/**\n\n * If you do not have mod rewrite on your system\n\n * or if you prefer to use CakePHP pretty urls.\n\n * uncomment the line below.\n\n * Note: If you do have mod rewrite but prefer the\n\n * CakePHP pretty urls, you also have to remove the\n\n * .htaccess files\n\n * release/.htaccess\n\n * release/app/.htaccess\n\n * release/app/webroot/.htaccess\n\n */\n\n\tdefine ('BASE_URL', env('SCRIPT_NAME'));\n\n\tdefine ('ROOT_URL', str_replace('/index.php', '', BASE_URL));\n\n/**\n\n * Set debug level here:\n\n * - 0: production\n\n * - 1: development\n\n * - 2: full debug with sql\n\n * - 3: full debug with sql and dump of the current object\n\n *\n\n * In production, the \"flash messages\" redirect after a time interval.\n\n * With the other debug levels you get to click the \"flash message\" to continue.\n\n *\n\n */\n\n\tdefine('DEBUG', 0);\n\n/**\n\n * Turn of caching checking wide.\n\n * You must still use the controller var cacheAction inside you controller class.\n\n * You can either set it controller wide, or in each controller method.\n\n * use var $cacheAction = true; or in"..., 4096) = 4096 <0.000012>
lseek(3, 4096, SEEK_SET)                = 4096 <0.000009>
read(3, "espace, repeating tags etc.)\n\n * This requires a/var/cache directory to be writable by the web server (caching).\n\n * To use, prefix the CSS link URL with '/ccss/' instead of '/css/' or use Controller::cssTag().\n\n */\n\n\tdefine('COMPRESS_CSS', false);\n\n/**\n\n * If set to true, helpers would output data instead of returning it.\n\n */\n\n\tdefine('AUTO_OUTPUT', false);\n\n/**\n\n * If set to false, session would not automatically be started.\n\n */\n\n\tdefine('AUTO_SESSION', true);\n\n/**\n\n * Set the max size of file to use md5() .\n\n */\n\n\tdefine('MAX_MD5SIZE', (5 * 1024) * 1024);\n\n/**\n\n * To use Access Control Lists with Cake...\n\n */\n\n\tdefine('ACL_CLASSNAME', 'DB_ACL');\n\n\tdefine('ACL_FILENAME', 'dbacl' . DS . 'db_acl');\n\n?>", 4096) = 713 <0.000009>
read(3, "", 4096)                       = 0 <0.000008>
read(3, "", 8192)                       = 0 <0.000009>
read(3, "", 8192)                       = 0 <0.000009>
close(3)                                = 0 <0.000009>
munmap(0x7fe0abc47000, 4096)            = 0 <0.000014>
getcwd("/home/hvacproz/public_html/acesys", 4096) = 34 <0.000009>
lstat("/home", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html", {st_mode=S_IFDIR|0750, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz/public_html/acesys/cake/config", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000020>
lstat("/home/hvacproz/public_html/acesys/cake/config/paths.php", {st_mode=S_IFREG|0644, st_size=4498, ...}) = 0 <0.000011>
stat("/home/hvacproz/public_html/acesys/cake/config/paths.php", {st_mode=S_IFREG|0644, st_size=4498, ...}) = 0 <0.000009>
getcwd("/home/hvacproz/public_html/acesys", 4096) = 34 <0.000008>
open("/home/hvacproz/public_html/acesys/cake/config/paths.php", O_RDONLY) = 3 <0.000011>
fstat(3, {st_mode=S_IFREG|0644, st_size=4498, ...}) = 0 <0.000008>
open("/home/hvacproz/public_html/acesys/cake/config/paths.php", O_RDONLY) = 4 <0.000010>
fstat(4, {st_mode=S_IFREG|0644, st_size=4498, ...}) = 0 <0.000009>
mmap(NULL, 4498, PROT_READ, MAP_SHARED, 4, 0) = 0x7fe0abc46000 <0.000010>
munmap(0x7fe0abc46000, 4498)            = 0 <0.000011>
close(4)                                = 0 <0.000009>
fcntl(3, F_GETFL)                       = 0x8000 (flags O_RDONLY|O_LARGEFILE) <0.000009>
fstat(3, {st_mode=S_IFREG|0644, st_size=4498, ...}) = 0 <0.000008>
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe0abc47000 <0.000010>
lseek(3, 0, SEEK_CUR)                   = 0 <0.000008>
lseek(3, 0, SEEK_SET)                   = 0 <0.000009>
read(3, "<?php\n/* SVN FILE: $Id: paths.php 5317 2007-06-20 08:28:35Z phpnut $ */\n/**\n * Short description for file.\n *\n * In this file you set paths to different directories used by Cake.\n *\n * PHP versions 4 and 5\n *\n * CakePHP(tm) :  Rapid Development Framework <http://www.cakephp.org/>\n * Copyright 2005-2007, Cake Software Foundation, Inc.\n *\t\t\t\t\t\t\t\t1785 E. Sahara Avenue, Suite 490-204\n *\t\t\t\t\t\t\t\tLas Vegas, Nevada 89104\n *\n * Licensed under The MIT License\n * Redistributions of files must retain the above copyright notice.\n *\n * @filesource\n * @copyright\t\tCopyright 2005-2007, Cake Software Foundation, Inc.\n * @link\t\t\t\thttp://www.cakefoundation.org/projects/info/cakephp CakePHP(tm) Project\n * @package\t\t\tcake\n * @subpackage\t\tcake.cake.app.config\n * @since\t\t\tCakePHP(tm) v 0.2.9\n * @version\t\t\t$Revision: 5317 $\n * @modifiedby\t\t$LastChangedBy: phpnut $\n * @lastmodified\t$Date: 2007-06-20 03:28:35 -0500 (Wed, 20 Jun 2007) $\n * @license\t\t\thttp://www.opensource.org/licenses/mit-license.php The MIT License\n */\n/**\n * If the index.php file is used instead of an .htaccess file\n * or if the user can not set the web root to use the public\n * directory we will define ROOT there, otherwise we set it\n * here.\n */\n\tif (!defined('ROOT')) {\n\t\tdefine ('ROOT', '../');\n\t}\n\tif (!defined('WEBROOT_DIR')) {\n\t\tdefine ('WEBROOT_DIR', 'webroot');\n\t}\n/**\n * Path to the application's directory.\n */\n\tdefine ('CAKE', CORE_PATH.'cake'.DS);\n/**\n * Path to the application's directory.\n */\n\tdefine ('APP', ROOT.DS.APP_DIR.DS);\n/**\n * Path to the application's models directory.\n */\n\tdefine ('MODELS', APP.'models'.DS);\n/**\n * Path to the application's controllers directory.\n */\n\tdefine ('CONTROLLERS', APP.'controllers'.DS);\n/**\n * Path to the application's controllers directory.\n */\n\tdefine ('COMPONENTS', CONTROLLERS.'components'.DS);\n/**\n * Path to the application's views directory.\n */\n\tdefine ('VIEWS', APP.'views'.DS);\n/**\n * Path to the application's helpers directory.\n */\n\tdefine ('HELPERS', VIEWS.'helpers'.DS);\n/**\n * Path to the application's view's layo"..., 4096) = 4096 <0.000012>
lseek(3, 4096, SEEK_SET)                = 4096 <0.000008>
read(3, "('HTTPS')) {\n\t\t$s ='s';\n\t}\n\n\t$httpHost = env('HTTP_HOST');\n\n\tif (isset($httpHost)) {\n\t\tdefine('FULL_BASE_URL', 'http'.$s.'://'.$httpHost);\n\t}\n\tunset($httpHost, $s);\n/**\n * Web path to the public images directory.\n */\n\tdefine ('IMAGES_URL', 'img/');\n/**\n * Web path to the CSS files directory.\n */\n\tdefine ('CSS_URL', 'css/');\n/**\n * Web path to the js files directory.\n */\n\tdefine ('JS_URL', 'js/');\n?>", 4096) = 402 <0.000009>
read(3, "", 4096)                       = 0 <0.000008>
read(3, "", 8192)                       = 0 <0.000008>
read(3, "", 8192)                       = 0 <0.000009>
close(3)                                = 0 <0.000009>
munmap(0x7fe0abc47000, 4096)            = 0 <0.000012>
getcwd("/home/hvacproz/public_html/acesys", 4096) = 34 <0.000009>
lstat("/home", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html", {st_mode=S_IFDIR|0750, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000008>
lstat("/home/hvacproz/public_html/acesys/app", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/app/webroot", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000011>
lstat("/home/hvacproz/public_html/acesys/app/webroot/index.php", {st_mode=S_IFREG|0644, st_size=3047, ...}) = 0 <0.000010>
stat("/home/hvacproz/public_html/acesys/app/webroot/index.php", {st_mode=S_IFREG|0644, st_size=3047, ...}) = 0 <0.000009>
getcwd("/home/hvacproz/public_html/acesys", 4096) = 34 <0.000009>
open("/home/hvacproz/public_html/acesys/app/webroot/index.php", O_RDONLY) = 3 <0.000013>
fstat(3, {st_mode=S_IFREG|0644, st_size=3047, ...}) = 0 <0.000008>
open("/home/hvacproz/public_html/acesys/app/webroot/index.php", O_RDONLY) = 4 <0.000010>
fstat(4, {st_mode=S_IFREG|0644, st_size=3047, ...}) = 0 <0.000008>
mmap(NULL, 3047, PROT_READ, MAP_SHARED, 4, 0) = 0x7fe0abc47000 <0.000011>
munmap(0x7fe0abc47000, 3047)            = 0 <0.000011>
close(4)                                = 0 <0.000009>
fcntl(3, F_GETFL)                       = 0x8000 (flags O_RDONLY|O_LARGEFILE) <0.000011>
fstat(3, {st_mode=S_IFREG|0644, st_size=3047, ...}) = 0 <0.000013>
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe0abc47000 <0.000010>
lseek(3, 0, SEEK_CUR)                   = 0 <0.000010>
lseek(3, 0, SEEK_SET)                   = 0 <0.000012>
read(3, "<?php\n/* SVN FILE: $Id: index.php 4450 2007-02-05 05:18:05Z phpnut $ */\n/**\n * Short description for file.\n *\n * Long description for file\n *\n * PHP versions 4 and 5\n *\n * CakePHP(tm) :  Rapid Development Framework <http://www.cakephp.org/>\n * Copyright 2005-2007, Cake Software Foundation, Inc.\n *\t\t\t\t\t\t\t\t1785 E. Sahara Avenue, Suite 490-204\n *\t\t\t\t\t\t\t\tLas Vegas, Nevada 89104\n *\n * Licensed under The MIT License\n * Redistributions of files must retain the above copyright notice.\n *\n * @filesource\n * @copyright\t\tCopyright 2005-2007, Cake Software Foundation, Inc.\n * @link\t\t\t\thttp://www.cakefoundation.org/projects/info/cakephp CakePHP(tm) Project\n * @package\t\t\tcake\n * @subpackage\t\tcake.app.webroot\n * @since\t\t\tCakePHP(tm) v 0.2.9\n * @version\t\t\t$Revision: 4450 $\n * @modifiedby\t\t$LastChangedBy: phpnut $\n * @lastmodified\t$Date: 2007-02-04 23:18:05 -0600 (Sun, 04 Feb 2007) $\n * @license\t\t\thttp://www.opensource.org/licenses/mit-license.php The MIT License\n */\n/**\n * Do not change\n */\n\tif (!defined('DS')) {\n\t\tdefine('DS', DIRECTORY_SEPARATOR);\n\t}\n/**\n * These defines should only be edited if you have cake installed in\n * a directory layout other than the way it is distributed.\n * Each define has a commented line of code that explains what you would change.\n *\n */\n\tif (!defined('ROOT')) {\n\t\t//define('ROOT', 'FULL PATH TO DIRECTORY WHERE APP DIRECTORY IS LOCATED DO NOT ADD A TRAILING DIRECTORY SEPARATOR';\n\t\t//You should also use the DS define to seperate your directories\n\t\tdefine('ROOT', dirname(dirname(dirname(__FILE__))));\n\t}\n\tif (!defined('APP_DIR')) {\n\t\t//define('APP_DIR', 'DIRECTORY NAME OF APPLICATION';\n\t\tdefine('APP_DIR', basename(dirname(dirname(__FILE__))));\n\t}\n/**\n * This only needs to be changed if the cake installed libs are located\n * outside of the distributed directory structure.\n */\n\tif (!defined('CAKE_CORE_INCLUDE_PATH')) {\n\t\t//define ('CAKE_CORE_INCLUDE_PATH', FULL PATH TO DIRECTORY WHERE CAKE CORE IS INSTALLED DO NOT ADD A TRAILING DIRECTORY SEPARATOR';\n\t\t//You should also use the DS define to seperate your"..., 4096) = 3047 <0.000015>
lseek(3, 3047, SEEK_SET)                = 3047 <0.000013>
read(3, "", 4096)                       = 0 <0.000013>
read(3, "", 8192)                       = 0 <0.000013>
read(3, "", 8192)                       = 0 <0.000010>
close(3)                                = 0 <0.000014>
munmap(0x7fe0abc47000, 4096)            = 0 <0.000013>
getcwd("/home/hvacproz/public_html/acesys", 4096) = 34 <0.000009>
lstat("/home", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html", {st_mode=S_IFDIR|0750, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz/public_html/acesys/cake", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake/bootstrap.php", {st_mode=S_IFREG|0644, st_size=2957, ...}) = 0 <0.000009>
stat("/home/hvacproz/public_html/acesys/cake/bootstrap.php", {st_mode=S_IFREG|0644, st_size=2957, ...}) = 0 <0.000009>
getcwd("/home/hvacproz/public_html/acesys", 4096) = 34 <0.000009>
open("/home/hvacproz/public_html/acesys/cake/bootstrap.php", O_RDONLY) = 3 <0.000010>
fstat(3, {st_mode=S_IFREG|0644, st_size=2957, ...}) = 0 <0.000009>
open("/home/hvacproz/public_html/acesys/cake/bootstrap.php", O_RDONLY) = 4 <0.000010>
fstat(4, {st_mode=S_IFREG|0644, st_size=2957, ...}) = 0 <0.000009>
mmap(NULL, 2957, PROT_READ, MAP_SHARED, 4, 0) = 0x7fe0abc47000 <0.000010>
munmap(0x7fe0abc47000, 2957)            = 0 <0.000011>
close(4)                                = 0 <0.000009>
fcntl(3, F_GETFL)                       = 0x8000 (flags O_RDONLY|O_LARGEFILE) <0.000008>
fstat(3, {st_mode=S_IFREG|0644, st_size=2957, ...}) = 0 <0.000008>
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe0abc47000 <0.000010>
lseek(3, 0, SEEK_CUR)                   = 0 <0.000008>
lseek(3, 0, SEEK_SET)                   = 0 <0.000008>
read(3, "<?php\n/* SVN FILE: $Id: bootstrap.php 5317 2007-06-20 08:28:35Z phpnut $ */\n/**\n * Basic Cake functionality.\n *\n * Core functions for including other source files, loading models and so forth.\n *\n * PHP versions 4 and 5\n *\n * CakePHP(tm) :  Rapid Development Framework <http://www.cakephp.org/>\n * Copyright 2005-2007, Cake Software Foundation, Inc.\n *\t\t\t\t\t\t\t\t1785 E. Sahara Avenue, Suite 490-204\n *\t\t\t\t\t\t\t\tLas Vegas, Nevada 89104\n *\n * Licensed under The MIT License\n * Redistributions of files must retain the above copyright notice.\n *\n * @filesource\n * @copyright\t\tCopyright 2005-2007, Cake Software Foundation, Inc.\n * @link\t\t\t\thttp://www.cakefoundation.org/projects/info/cakephp CakePHP(tm) Project\n * @package\t\t\tcake\n * @subpackage\t\tcake.cake\n * @since\t\t\tCakePHP(tm) v 0.2.9\n * @version\t\t\t$Revision: 5317 $\n * @modifiedby\t\t$LastChangedBy: phpnut $\n * @lastmodified\t$Date: 2007-06-20 03:28:35 -0500 (Wed, 20 Jun 2007) $\n * @license\t\t\thttp://www.opensource.org/licenses/mit-license.php The MIT License\n */\n/**\n * Configuration, directory layout and standard libraries\n */\n\tif (!isset($bootstrap)) {\n\t\trequire CORE_PATH . 'cake' . DS . 'basics.php';\n\t\trequire APP_PATH . 'config' . DS . 'core.php';\n\t\trequire CORE_PATH . 'cake' . DS . 'config' . DS . 'paths.php';\n\t}\n\t$TIME_START = getMicrotime();\n\trequire LIBS . 'object.php';\n\trequire LIBS . 'session.php';\n\trequire LIBS . 'security.php';\n\trequire LIBS . 'inflector.php';\n\trequire LIBS . 'configure.php';\n\t$paths = Configure::getInstance();\n/**\n * Enter description here...\n */\n\tif (empty($uri) && defined('BASE_URL')) {\n\t\t$uri = setUri();\n\n\t\tif ($uri === '/' || $uri === '/index.php' || $uri === '/'.APP_DIR.'/') {\n\t\t\t$_GET['url'] = '/';\n\t\t\t$url = '/';\n\t\t} else {\n\t\t\tif (strpos($uri, 'index.php') !== false) {\n\t\t\t\t$uri = r('?', '', $uri);\n\t\t\t\t$elements=explode('/index.php', $uri);\n\t\t\t} else {\n\t\t\t\t$elements = explode('/?', $uri);\n\t\t\t}\n\n\t\t\tif (!empty($elements[1])) {\n\t\t\t\t$_GET['url'] = $elements[1];\n\t\t\t\t$url = $elements[1];\n\t\t\t} else {\n\t\t\t\t$_GET['url'] = '/';\n\t\t\t\t$url = '/';\n\t\t\t}\n\t\t}\n\t} e"..., 4096) = 2957 <0.000012>
lseek(3, 2957, SEEK_SET)                = 2957 <0.000008>
read(3, "", 4096)                       = 0 <0.000009>
read(3, "", 8192)                       = 0 <0.000010>
read(3, "", 8192)                       = 0 <0.000008>
close(3)                                = 0 <0.000015>
munmap(0x7fe0abc47000, 4096)            = 0 <0.000017>
getcwd("/home/hvacproz/public_html/acesys", 4096) = 34 <0.000013>
lstat("/home", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000015>
lstat("/home/hvacproz", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000014>
lstat("/home/hvacproz/public_html", {st_mode=S_IFDIR|0750, st_size=4096, ...}) = 0 <0.000012>
lstat("/home/hvacproz/public_html/acesys", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000013>
lstat("/home/hvacproz/public_html/acesys/cake", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000012>
lstat("/home/hvacproz/public_html/acesys/cake/libs", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000014>
lstat("/home/hvacproz/public_html/acesys/cake/libs/object.php", {st_mode=S_IFREG|0644, st_size=6959, ...}) = 0 <0.000013>
stat("/home/hvacproz/public_html/acesys/cake/libs/object.php", {st_mode=S_IFREG|0644, st_size=6959, ...}) = 0 <0.000013>
getcwd("/home/hvacproz/public_html/acesys", 4096) = 34 <0.000011>
open("/home/hvacproz/public_html/acesys/cake/libs/object.php", O_RDONLY) = 3 <0.000015>
fstat(3, {st_mode=S_IFREG|0644, st_size=6959, ...}) = 0 <0.000011>
open("/home/hvacproz/public_html/acesys/cake/libs/object.php", O_RDONLY) = 4 <0.000014>
fstat(4, {st_mode=S_IFREG|0644, st_size=6959, ...}) = 0 <0.000010>
mmap(NULL, 6959, PROT_READ, MAP_SHARED, 4, 0) = 0x7fe0abc46000 <0.000014>
munmap(0x7fe0abc46000, 6959)            = 0 <0.000015>
close(4)                                = 0 <0.000012>
fcntl(3, F_GETFL)                       = 0x8000 (flags O_RDONLY|O_LARGEFILE) <0.000011>
fstat(3, {st_mode=S_IFREG|0644, st_size=6959, ...}) = 0 <0.000010>
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe0abc47000 <0.000013>
lseek(3, 0, SEEK_CUR)                   = 0 <0.000012>
lseek(3, 0, SEEK_SET)                   = 0 <0.000010>
read(3, "<?php\n/* SVN FILE: $Id: object.php 5317 2007-06-20 08:28:35Z phpnut $ */\n/**\n * Object class, allowing __construct and __destruct in PHP4.\n *\n * Also includes methods for logging and the special method RequestAction,\n * to call other Controllers' Actions from anywhere.\n *\n * PHP versions 4 and 5\n *\n * CakePHP(tm) :  Rapid Development Framework <http://www.cakephp.org/>\n * Copyright 2005-2007, Cake Software Foundation, Inc.\n *\t\t\t\t\t\t\t\t1785 E. Sahara Avenue, Suite 490-204\n *\t\t\t\t\t\t\t\tLas Vegas, Nevada 89104\n *\n * Licensed under The MIT License\n * Redistributions of files must retain the above copyright notice.\n *\n * @filesource\n * @copyright\t\tCopyright 2005-2007, Cake Software Foundation, Inc.\n * @link\t\t\t\thttp://www.cakefoundation.org/projects/info/cakephp CakePHP(tm) Project\n * @package\t\t\tcake\n * @subpackage\t\tcake.cake.libs\n * @since\t\t\tCakePHP(tm) v 0.2.9\n * @version\t\t\t$Revision: 5317 $\n * @modifiedby\t\t$LastChangedBy: phpnut $\n * @lastmodified\t$Date: 2007-06-20 03:28:35 -0500 (Wed, 20 Jun 2007) $\n * @license\t\t\thttp://www.opensource.org/licenses/mit-license.php The MIT License\n */\n/**\n * Object class, allowing __construct and __destruct in PHP4.\n *\n * Also includes methods for logging and the special method RequestAction,\n * to call other Controllers' Actions from anywhere.\n *\n * @package\t\tcake\n * @subpackage\tcake.cake.libs\n */\nclass Object{\n/**\n * Log object\n *\n * @var object\n * @access protected\n */\n\tvar $_log = null;\n/**\n * A hack to support __construct() on PHP 4\n * Hint: descendant classes have no PHP4 class_name() constructors,\n * so this constructor gets called first and calls the top-layer __construct()\n * which (if present) should call parent::__construct()\n *\n * @return Object\n * @access public\n */\n\tfunction Object() {\n\t\t$args = func_get_args();\n\t\tif (method_exists($this, '__destruct')) {\n\t\t\tregister_shutdown_function (array(&$this, '__destruct'));\n\t\t}\n\t\tcall_user_func_array(array(&$this, '__construct'), $args);\n\t}\n/**\n * Class constructor, overridden in descendant classes.\n *\n * @abstract\n * @access public\n"..., 4096) = 4096 <0.000016>
lseek(3, 4096, SEEK_SET)                = 4096 <0.000011>
read(3, "or ErrorHandler classes)\n * @param array $messages Message that is to be displayed by the error class\n * @return error message\n * @access public\n */\n\tfunction cakeError($method, $messages) {\n\t\tif (!class_exists('ErrorHandler')) {\n\t\t\tuses('error');\n\t\t\tif (file_exists(APP . 'error.php')) {\n\t\t\t\tinclude_once (APP . 'error.php');\n\t\t\t}\n\t\t}\n\n\t\tif (class_exists('AppError')) {\n\t\t\t$error = new AppError($method, $messages);\n\t\t} else {\n\t\t\t$error = new ErrorHandler($method, $messages);\n\t\t}\n\t\treturn $error;\n\t}\n/**\n * Checks for a persistent class file, if found file is opened and true returned\n * If file is not found a file is created and false returned\n *\n * There are many uses for this method, see manual for examples also art of\n * the cache system\n *\n * @param string $name name of class to persist\n * @param boolean $return\n * @param object $object\n * @param string $type\n * @return boolean\n * @todo add examples to manual\n * @access protected\n */\n\tfunction _persist($name, $return = null, &$object, $type = null) {\n\t\t$file = CACHE . 'persistent' . DS . strtolower($name) . '.php';\n\t\tif ($return === null) {\n\t\t\tif (!file_exists($file)) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\tif (!file_exists($file)) {\n\t\t\t$this->_savePersistent($name, $object);\n\t\t\treturn false;\n\t\t} else {\n\t\t\t$this->__openPersistent($name, $type);\n\t\t\treturn true;\n\t\t}\n\t}\n/**\n * You should choose a unique name for the persistent file\n *\n * There are many uses for this method, see manual for examples also part of\n * the cache system\n *\n * @param string $name name used for object to cache\n * @param object $object the object to persist\n * @return true on save, throws error if file can not be created\n * @access protected\n */\n\tfunction _savePersistent($name, &$object) {\n\t\t$file = 'persistent' . DS . strtolower($name) . '.php';\n\t\t$objectArray = array(&$object);\n\t\t$data = str_replace('\\\\', '\\\\\\\\', serialize($objectArray));\n\t\t$data = '<?php $' . $name . ' = \\'' . str_replace('\\'', '\\\\\\'', $data) . '\\' ?>';\n\t\tcache($file, $data, '+1 day');\n\t}\n/**\n * Open t"..., 4096) = 2863 <0.000012>
read(3, "", 4096)                       = 0 <0.000012>
read(3, "", 8192)                       = 0 <0.000011>
read(3, "", 8192)                       = 0 <0.000010>
brk(0x1c23000)                          = 0x1c23000 <0.000011>
close(3)                                = 0 <0.000012>
munmap(0x7fe0abc47000, 4096)            = 0 <0.000015>
getcwd("/home/hvacproz/public_html/acesys", 4096) = 34 <0.000011>
lstat("/home", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000011>
lstat("/home/hvacproz", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000011>
lstat("/home/hvacproz/public_html", {st_mode=S_IFDIR|0750, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz/public_html/acesys", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz/public_html/acesys/cake", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz/public_html/acesys/cake/libs", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000011>
lstat("/home/hvacproz/public_html/acesys/cake/libs/session.php", {st_mode=S_IFREG|0644, st_size=17549, ...}) = 0 <0.000011>
stat("/home/hvacproz/public_html/acesys/cake/libs/session.php", {st_mode=S_IFREG|0644, st_size=17549, ...}) = 0 <0.000011>
getcwd("/home/hvacproz/public_html/acesys", 4096) = 34 <0.000010>
open("/home/hvacproz/public_html/acesys/cake/libs/session.php", O_RDONLY) = 3 <0.000013>
fstat(3, {st_mode=S_IFREG|0644, st_size=17549, ...}) = 0 <0.000010>
open("/home/hvacproz/public_html/acesys/cake/libs/session.php", O_RDONLY) = 4 <0.000012>
fstat(4, {st_mode=S_IFREG|0644, st_size=17549, ...}) = 0 <0.000009>
mmap(NULL, 17549, PROT_READ, MAP_SHARED, 4, 0) = 0x7fe0abc43000 <0.000011>
munmap(0x7fe0abc43000, 17549)           = 0 <0.000012>
close(4)                                = 0 <0.000009>
fcntl(3, F_GETFL)                       = 0x8000 (flags O_RDONLY|O_LARGEFILE) <0.000009>
fstat(3, {st_mode=S_IFREG|0644, st_size=17549, ...}) = 0 <0.000009>
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe0abc47000 <0.000011>
lseek(3, 0, SEEK_CUR)                   = 0 <0.000011>
lseek(3, 0, SEEK_SET)                   = 0 <0.000009>
read(3, "<?php\n/* SVN FILE: $Id: session.php 5317 2007-06-20 08:28:35Z phpnut $ */\n/**\n * Session class for Cake.\n *\n * Cake abstracts the handling of sessions.\n * There are several convenient methods to access session information.\n * This class is the implementation of those methods.\n * They are mostly used by the Session Component.\n *\n * PHP versions 4 and 5\n *\n * CakePHP(tm) :  Rapid Development Framework <http://www.cakephp.org/>\n * Copyright 2005-2007, Cake Software Foundation, Inc.\n *\t\t\t\t\t\t\t\t1785 E. Sahara Avenue, Suite 490-204\n *\t\t\t\t\t\t\t\tLas Vegas, Nevada 89104\n *\n * Licensed under The MIT License\n * Redistributions of files must retain the above copyright notice.\n *\n * @filesource\n * @copyright\t\tCopyright 2005-2007, Cake Software Foundation, Inc.\n * @link\t\t\t\thttp://www.cakefoundation.org/projects/info/cakephp CakePHP(tm) Project\n * @package\t\t\tcake\n * @subpackage\t\tcake.cake.libs\n * @since\t\t\tCakePHP(tm) v .0.10.0.1222\n * @version\t\t\t$Revision: 5317 $\n * @modifiedby\t\t$LastChangedBy: phpnut $\n * @lastmodified\t$Date: 2007-06-20 03:28:35 -0500 (Wed, 20 Jun 2007) $\n * @license\t\t\thttp://www.opensource.org/licenses/mit-license.php The MIT License\n */\n/**\n * Database name for cake sessions.\n *\n */\n\tif (!defined('CAKE_SESSION_TABLE')) {\n\t\t define('CAKE_SESSION_TABLE', 'cake_sessions');\n\t}\n\n\tif (CAKE_SESSION_SAVE === 'database') {\n\t\tuses('model' . DS . 'connection_manager');\n\t}\n\tuses('set');\n/**\n * Session class for Cake.\n *\n * Cake abstracts the handling of sessions. There are several convenient methods to access session information.\n * This class is the implementation of those methods. They are mostly used by the Session Component.\n *\n * @package\t\tcake\n * @subpackage\tcake.cake.libs\n */\nclass CakeSession extends Object {\n/**\n * True if the Session is still valid\n *\n * @var boolean\n * @access public\n */\n\tvar $valid = false;\n/**\n * Error messages for this session\n *\n * @var array\n * @access public\n */\n\tvar $error = false;\n/**\n * User agent string\n *\n * @var string\n * @access protected\n */\n\tvar $_userAgent = false;\n/**\n * Path to"..., 4096) = 4096 <0.000013>
lseek(3, 4096, SEEK_SET)                = 4096 <0.000009>
read(3, "$result = Set::extract($_SESSION, $var);\n\t\treturn isset($result);\n\t}\n\n/**\n * Temp method until we are able to remove the last eval().\n * Builds an expression to fetch a session variable with specified name.\n *\n * @param string $name Name of variable (in dot notation)\n * @access private\n */\n\tfunction __sessionVarNames($name) {\n\t\tif (is_string($name) && preg_match(\"/^[ 0-9a-zA-Z._-]*$/\", $name)) {\n\t\t\tif (strpos($name, \".\")) {\n\t\t\t\t$names = explode(\".\", $name);\n\t\t\t} else {\n\t\t\t\t$names = array($name);\n\t\t\t}\n\t\t\t$expression = \"\\$_SESSION\";\n\t\t\tforeach ($names as $item) {\n\t\t\t\t$expression .= is_numeric($item) ? \"[$item]\" : \"['$item']\";\n\t\t\t}\n\t\t\treturn $expression;\n\t\t}\n\t\t$this->__setError(3, \"$name is not a string\");\n\t\treturn false;\n\t}\n/**\n * Removes a variable from session.\n *\n * @param string $name Session variable to remove\n * @return boolean Success\n * @access public\n */\n\tfunction del($name) {\n\t\tif ($this->check($name)) {\n\t\t\tif ($var = $this->__validateKeys($name)) {\n\t\t\t\tif (in_array($var, $this->watchKeys)) {\n\t\t\t\t\ttrigger_error('Deleting session key {' . $var . '}', E_USER_NOTICE);\n\t\t\t\t}\n\t\t\t\t$this->__overwrite($_SESSION, Set::remove($_SESSION, $var));\n\t\t\t\treturn ($this->check($var) == false);\n\t\t\t}\n\t\t}\n\t\t$this->__setError(2, \"$name doesn't exist\");\n\t\treturn false;\n\t}\n/**\n * Used to write new data to _SESSION, since PHP doesn't like us setting the _SESSION var itself\n *\n * @param array $old Set of old variables => values\n * @param array $new New set of variable => value\n * @access private\n */\n\tfunction __overwrite(&$old, $new) {\n\t\tforeach ($old as $key => $var) {\n\t\t\tif (!isset($new[$key])) {\n\t\t\t\tunset($old[$key]);\n\t\t\t}\n\t\t}\n\t\tforeach ($new as $key => $var) {\n\t\t\t$old[$key] = $var;\n\t\t}\n\t}\n/**\n * Return error description for given error number.\n *\n * @param int $errorNumber Error to set\n * @return string Error as string\n * @access private\n */\n\tfunction __error($errorNumber) {\n\t\tif (!is_array($this->error) || !array_key_exists($errorNumber, $this->error)) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn $this->error[$errorNumber];\n\t\t}\n\t}"..., 4096) = 4096 <0.000010>
read(3, "n;\n\t\t}\n\t\tforeach ($this->watchKeys as $i => $key) {\n\t\t\tif ($key == $var) {\n\t\t\t\tunset($this->watchKeys[$i]);\n\t\t\t\t$this->watchKeys = array_values($this->watchKeys);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n/**\n * Writes value to given session variable name.\n *\n * @param mixed $name Name of variable\n * @param string $value Value to write\n * @return boolean True if the write was successful, false if the write failed\n * @access public\n */\n\tfunction write($name, $value) {\n\t\t$var = $this->__validateKeys($name);\n\n\t\tif (empty($var)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (in_array($var, $this->watchKeys)) {\n\t\t\ttrigger_error('Writing session key {' . $var . '}: ' . Debugger::exportVar($value), E_USER_NOTICE);\n\t\t}\n\t\t$this->__overwrite($_SESSION, Set::insert($_SESSION, $var, $value));\n\t\treturn (Set::extract($_SESSION, $var) === $value);\n\t}\n/**\n * Helper method to destroy invalid sessions.\n *\n * @access public\n */\n\tfunction destroy() {\n\t\t$sessionpath = session_save_path();\n\t\tif (empty($sessionpath)) {\n\t\t\t$sessionpath = \"/tmp\";\n\t\t}\n\n\t\tif (isset($_COOKIE[session_name()])) {\n\t\t\tsetcookie(CAKE_SESSION_COOKIE, '', time() - 42000, $this->path);\n\t\t}\n\n\t\t$_SESSION = array();\n\t\t$file = $sessionpath . DS . \"sess_\" . session_id();\n\t\t@session_destroy();\n\t\t@unlink ($file);\n\t\t$this->__construct($this->path);\n\t\t$this->renew();\n\t}\n/**\n * Helper method to initialize a session, based on Cake core settings.\n *\n * @access private\n */\n\tfunction __initSession() {\n\t\tswitch($this->security) {\n\t\t\tcase 'high':\n\t\t\t\t$this->cookieLifeTime=0;\n\t\t\t\tif (function_exists('ini_set')) {\n\t\t\t\t\tini_set('session.referer_check', $this->host);\n\t\t\t\t}\n\t\t\tbreak;\n\t\t\tcase 'medium':\n\t\t\t\t$this->cookieLifeTime = 7 * 86400;\n\t\t\tbreak;\n\t\t\tcase 'low':\n\t\t\tdefault:\n\t\t\t\t$this->cookieLifeTime = 788940000;\n\t\t\tbreak;\n\t\t}\n\n\t\tswitch(CAKE_SESSION_SAVE) {\n\t\t\tcase 'cake':\n\t\t\t\tif (!isset($_SESSION)) {\n\t\t\t\t\tif (function_exists('ini_set')) {\n\t\t\t\t\t\tini_set('session.use_trans_sid', 0);\n\t\t\t\t\t\tini_set('url_rewriter.tags', '');\n\t\t\t\t\t\tini_set('session.serialize_handler', 'php');\n\t\t\t\t\t\tini_set('session.use_cookies', 1);\n\t\t\t\t\t\tin"..., 8192) = 8192 <0.000012>
read(3, "name($table) . \" (\" . $db->name('data') . \",\"\n\t\t\t\t\t\t\t  \t. $db->name('expires') . \",\" . $db->name('id')\n\t\t\t\t\t\t\t  \t. \") VALUES (\" . $db->value($value) . \", \" . $db->value($expires) . \", \"\n\t\t\t\t\t\t\t  \t. $db->value($key) . \")\");\n\t\t}\n\t\treturn true;\n\t}\n/**\n * Method called on the destruction of a database session.\n *\n * @param int $key Key that uniquely identifies session in database\n * @return boolean Success\n * @access private\n */\n\tfunction __destroy($key) {\n\t\t$db =& ConnectionManager::getDataSource('default');\n\t\t$table = $db->fullTableName(CAKE_SESSION_TABLE);\n\t\t$db->execute(\"DELETE FROM \" . $db->name($table) . \" WHERE \" . $db->name($table.'.id') . \" = \" . $db->value($key, 'integer'));\n\t\treturn true;\n\t}\n/**\n * Helper function called on gc for database sessions.\n *\n * @param int $expires Timestamp (defaults to current time)\n * @return boolean Success\n * @access private\n */\n\tfunction __gc($expires = null) {\n\t\t$db =& ConnectionManager::getDataSource('default');\n\t\t$table = $db->fullTableName(CAKE_SESSION_TABLE);\n\t\t$db->execute(\"DELETE FROM \" . $db->name($table) . \" WHERE \" . $db->name($table.'.expires') . \" < \". $db->value(time()));\n\t\treturn true;\n\t }\n}\n?>", 8192) = 1165 <0.000010>
read(3, "", 4096)                       = 0 <0.000010>
read(3, "", 8192)                       = 0 <0.000009>
read(3, "", 8192)                       = 0 <0.000010>
brk(0x1c64000)                          = 0x1c64000 <0.000012>
close(3)                                = 0 <0.000010>
munmap(0x7fe0abc47000, 4096)            = 0 <0.000015>
getcwd("/home/hvacproz/public_html/acesys", 4096) = 34 <0.000010>
lstat("/home", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz/public_html", {st_mode=S_IFDIR|0750, st_size=4096, ...}) = 0 <0.000011>
lstat("/home/hvacproz/public_html/acesys", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000011>
lstat("/home/hvacproz/public_html/acesys/cake", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000011>
lstat("/home/hvacproz/public_html/acesys/cake/libs", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz/public_html/acesys/cake/libs/set.php", {st_mode=S_IFREG|0644, st_size=19656, ...}) = 0 <0.000012>
open("/home/hvacproz/public_html/acesys/cake/libs/set.php", O_RDONLY) = 3 <0.000012>
fstat(3, {st_mode=S_IFREG|0644, st_size=19656, ...}) = 0 <0.000010>
open("/home/hvacproz/public_html/acesys/cake/libs/set.php", O_RDONLY) = 4 <0.000012>
fstat(4, {st_mode=S_IFREG|0644, st_size=19656, ...}) = 0 <0.000010>
mmap(NULL, 19656, PROT_READ, MAP_SHARED, 4, 0) = 0x7fe0abc43000 <0.000011>
munmap(0x7fe0abc43000, 19656)           = 0 <0.000012>
close(4)                                = 0 <0.000009>
fcntl(3, F_GETFL)                       = 0x8000 (flags O_RDONLY|O_LARGEFILE) <0.000009>
fstat(3, {st_mode=S_IFREG|0644, st_size=19656, ...}) = 0 <0.000009>
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe0abc47000 <0.000010>
lseek(3, 0, SEEK_CUR)                   = 0 <0.000009>
lseek(3, 0, SEEK_SET)                   = 0 <0.000009>
read(3, "<?php\n/* SVN FILE: $Id: set.php 5421 2007-07-09 04:58:57Z phpnut $ */\n/**\n * Library of array functions for Cake.\n *\n * PHP versions 4 and 5\n *\n * CakePHP(tm) :  Rapid Development Framework <http://www.cakephp.org/>\n * Copyright 2005-2007, Cake Software Foundation, Inc.\n *\t\t\t\t\t\t\t\t1785 E. Sahara Avenue, Suite 490-204\n *\t\t\t\t\t\t\t\tLas Vegas, Nevada 89104\n *\n * Licensed under The MIT License\n * Redistributions of files must retain the above copyright notice.\n *\n * @filesource\n * @copyright\t\tCopyright 2005-2007, Cake Software Foundation, Inc.\n * @link\t\t\t\thttp://www.cakefoundation.org/projects/info/cakephp CakePHP(tm) Project\n * @package\t\t\tcake\n * @subpackage\t\tcake.cake.libs\n * @since\t\t\tCakePHP(tm) v 1.2.0\n * @version\t\t\t$Revision: 5421 $\n * @modifiedby\t\t$LastChangedBy: phpnut $\n * @lastmodified\t$Date: 2007-07-08 23:58:57 -0500 (Sun, 08 Jul 2007) $\n * @license\t\t\thttp://www.opensource.org/licenses/mit-license.php The MIT License\n */\n/**\n * Class used for manipulation of arrays.\n *\n * Long description for class\n *\n * @package\t\tcake\n * @subpackage\tcake.cake.libs\n */\nclass Set extends Object {\n/**\n * Value of the Set object.\n *\n * @var array\n * @access public\n */\n\tvar $value = array();\n/**\n * Constructor. Defaults to an empty array.\n *\n * @access public\n */\n\tfunction __construct() {\n\t\tif (func_num_args() == 1 && is_array(func_get_arg(0))) {\n\t\t\t$this->value = func_get_arg(0);\n\t\t} else {\n\t\t\t$this->value = func_get_args();\n\t\t}\n\t}\n/**\n * Returns the contents of the Set object\n *\n * @return array\n * @access public\n */\n\tfunction &get() {\n\t\treturn $this->value;\n\t}\n/**\n * This function can be thought of as a hybrid between PHP's array_merge and array_merge_recursive. The difference\n * to the two is that if an array key contains another array then the function behaves recursive (unlike array_merge)\n * but does not do if for keys containing strings (unlike array_merge_recursive). See the unit test for more information.\n *\n * Note: This function will work with an unlimited amount of arguments and typecasts non-array parameters into arra"..., 4096) = 4096 <0.000013>
lseek(3, 4096, SEEK_SET)                = 4096 <0.000009>
read(3, "\t}\n\n\t\tif (!isset($this->value)) {\n\t\t\t$this->value = array();\n\t\t}\n\t\t$this->value = Set::pushDiff($this->value, Set::__array($array));\n\t\treturn $this->value;\n\t}\n/**\n * Maps the contents of the Set object to an object hierarchy\n *\n * @param string $class A class name of the type of object to map to\n * @param string $tmp A temporary class name used as $class if $class is an array\n * @return object Hierarchical object\n * @access public\n */\n\tfunction map($class = 'stdClass', $tmp = 'stdClass') {\n\t\tif (is_array($class)) {\n\t\t\t$val = $class;\n\t\t\t$class = $tmp;\n\t\t} elseif (is_a($this, 'set')) {\n\t\t\t$val = $this->get();\n\t\t}\n\n\t\tif (empty($val) || $val == null) {\n\t\t\treturn null;\n\t\t}\n\t\treturn Set::__map($val, $class);\n\t}\n\n/**\n * Get the array value of $array. If $array is null, it will return\n * the current array Set holds. If it is an object of type Set, it\n * will return its value. If it is another object, its object variables.\n * If it is anything else but an array, it will return an array whose first\n * element is $array.\n *\n * @param mixed $array Data from where to get the array.\n * @return array Array from $array.\n * @access private\n */\n\tfunction __array($array) {\n\t\tif ($array == null) {\n\t\t\t$array = $this->value;\n\t\t} elseif (is_object($array) && (is_a($array, 'set'))) {\n\t\t\t$array = $array->get();\n\t\t} elseif (is_object($array)) {\n\t\t\t$array = get_object_vars($array);\n\t\t} elseif (!is_array($array)) {\n\t\t\t$array = array($array);\n\t\t}\n\t\treturn $array;\n\t}\n\n/**\n * Maps the given value as an object. If $value is an object,\n * it returns $value. Otherwise it maps $value as an object of\n * type $class, and identity $identity. If $value is not empty,\n * it will be used to set properties of returned object\n * (recursively).\n *\n * @param mixed $value Value to map\n * @param string $class Class name\n * @param string $identity Identity to assign to class\n * @return mixed Mapped object\n * @access private\n */\n\tfunction __map($value, $class, $identity = null) {\n\t\tif (is_object($value)) {\n\t\t\treturn $value;\n\t\t}\n\n\t\tif (!empty($value) && Set::nume"..., 4096) = 4096 <0.000010>
read(3, "\t\t\t$list = array('no', 'yes');\n\t\t}\n\n\t\t$return = null;\n\t\t$list = Set::normalize($list, false);\n\n\t\tif (array_key_exists($select, $list)) {\n\t\t\t$return = $list[$select];\n\t\t}\n\t\treturn $return;\n\t}\n/**\n * Gets a value from an array or object that maps a given path.\n * The special {n}, as seen in the Model::generateList method, is taken care of here.\n *\n * @param array $data Array from where to extract\n * @param mixed $path As an array, or as a dot-separated string.\n * @return array Extracted data\n * @access public\n */\n\tfunction extract($data, $path = null) {\n\t\tif ($path === null && is_a($this, 'set')) {\n\t\t\t$path = $data;\n\t\t\t$data = $this->get();\n\t\t}\n\t\tif (is_object($data)) {\n\t\t\t$data = get_object_vars($data);\n\t\t}\n\n\t\tif (!is_array($path)) {\n\t\t\tif (strpos($path, '/') !== 0 && strpos($path, './') === false) {\n\t\t\t\t$path = explode('.', $path);\n\t\t\t} else {\n\t\t\t}\n\t\t}\n\t\t$tmp = array();\n\t\tif (!is_array($path) || empty($path)) {\n\t\t\treturn null;\n\t\t}\n\n\t\tforeach ($path as $i => $key) {\n\t\t\tif (is_numeric($key) && intval($key) > 0 || $key == '0') {\n\t\t\t\tif (isset($data[intval($key)])) {\n\t\t\t\t\t$data = $data[intval($key)];\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t} elseif ($key == '{n}') {\n\t\t\t\tforeach ($data as $j => $val) {\n\t\t\t\t\t$tmp[] = Set::extract($val, array_slice($path, $i + 1));\n\t\t\t\t}\n\t\t\t\treturn $tmp;\n\t\t\t} else {\n\t\t\t\tif (isset($data[$key])) {\n\t\t\t\t\t$data = $data[$key];\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn $data;\n\t}\n/**\n * Inserts $data into an array as defined by $path.\n *\n * @param mixed $list Where to insert into\n * @param mixed $path A dot-separated string.\n * @param array $data Data to insert\n * @return array\n * @access public\n */\n\tfunction insert($list, $path, $data = null) {\n\t\tif (empty($data) && is_a($this, 'Set')) {\n\t\t\t$data = $path;\n\t\t\t$path = $list;\n\t\t\t$list =& $this->get();\n\t\t}\n\t\tif (!is_array($path)) {\n\t\t\t$path = explode('.', $path);\n\t\t}\n\t\t$_list =& $list;\n\n\t\tforeach ($path as $i => $key) {\n\t\t\tif (is_numeric($key) && intval($key) > 0 || $key == '0') {\n\t\t\t\t$key = intval($key);\n\t\t\t}\n\t\t\tif ($i == count($path"..., 8192) = 8192 <0.000011>
read(3, "= $data;\n\t\t\t$data = $this->get();\n\t\t} else if (is_a($this, 'set') && is_string($data) && empty($path2)) {\n\t\t\t$path2 = $path1;\n\t\t\t$path1 = $data;\n\t\t\t$data = $this->get();\n\t\t}\n\n\t\tif (is_object($data)) {\n\t\t\t$data = get_object_vars($data);\n\t\t}\n\n\t\t$keys = Set::extract($data, $path1);\n\n\t\tif (!empty($path2)) {\n\t\t\t$vals = Set::extract($data, $path2);\n\t\t} else {\n\t\t\t$count = count($keys);\n\t\t\tfor($i=0; $i < $count; $i++) {\n\t\t\t\t$vals[$i] = null;\n\t\t\t}\n\t\t}\n\n\t\tif ($groupPath != null) {\n\t\t\t$group = Set::extract($data, $groupPath);\n\t\t\tif (!empty($group)) {\n\t\t\t\t$c = count($keys);\n\t\t\t\tfor ($i = 0; $i < $c; $i++) {\n\t\t\t\t\tif (!isset($group[$i])) {\n\t\t\t\t\t\t$group[$i] = 0;\n\t\t\t\t\t}\n\t\t\t\t\tif (!isset($out[$group[$i]])) {\n\t\t\t\t\t\t$out[$group[$i]] = array();\n\t\t\t\t\t}\n\t\t\t\t\t$out[$group[$i]][$keys[$i]] = $vals[$i];\n\t\t\t\t}\n\t\t\t\treturn $out;\n\t\t\t}\n\t\t}\n\n\t\treturn array_combine($keys, $vals);\n\t}\n/**\n * Converts an object into an array\n *\n * @param object $object\n * @return array\n */\n\tfunction reverse($object) {\n\t\tif (is_object($object)) {\n\t\t\t$merge = array();\n\t\t\tif (is_a($object, 'xmlnode') || is_a($object, 'XMLNode')) {\n\t\t\t\tif ($object->name != Inflector::underscore($this->name)) {\n\t\t\t\t\tif (is_object($object->child(Inflector::underscore($this->name)))) {\n\t\t\t\t\t\t$object = $object->child(Inflector::underscore($this->name));\n\t\t\t\t\t\t$object = $object->attributes;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} elseif (is_a($object, 'stdclass') || is_a($object, 'stdClass')) {\n\t\t\t\t$object = get_object_vars($object);\n\t\t\t\t$keys = array_keys($object);\n\t\t\t\t$count = count($keys);\n\n\t\t\t\tfor ($i = 0; $i < $count; $i++) {\n\t\t\t\t\tif ($keys[$i] == '__identity__') {\n\t\t\t\t\t\t$key = $object[$keys[$i]];\n\t\t\t\t\t\tunset($object[$keys[$i]]);\n\t\t\t\t\t\t$object[$key] = $object;\n\t\t\t\t\t} elseif (is_array($object[$keys[$i]])) {\n\t\t\t\t\t\t$keys1 = array_keys($object[$keys[$i]]);\n\t\t\t\t\t\t$count1 = count($keys1);\n\t\t\t\t\t\tfor ($ii = 0; $ii < $count1; $ii++) {\n\t\t\t\t\t\t\tif (is_object($object[$keys[$i]][$keys1[$ii]])) {\n\t\t\t\t\t\t\t\t$merge[$keys[$i]][$keys1[$ii]] = Set::reverse($object[$keys[$i]][$keys1[$ii]]);\n\t\t\t\t\t\t\t}"..., 8192) = 3272 <0.000012>
read(3, "", 4096)                       = 0 <0.000009>
read(3, "", 8192)                       = 0 <0.000008>
read(3, "", 8192)                       = 0 <0.000009>
close(3)                                = 0 <0.000011>
munmap(0x7fe0abc47000, 4096)            = 0 <0.000015>
getcwd("/home/hvacproz/public_html/acesys", 4096) = 34 <0.000009>
lstat("/home", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html", {st_mode=S_IFDIR|0750, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake/libs", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz/public_html/acesys/cake/libs/security.php", {st_mode=S_IFREG|0644, st_size=3412, ...}) = 0 <0.000010>
stat("/home/hvacproz/public_html/acesys/cake/libs/security.php", {st_mode=S_IFREG|0644, st_size=3412, ...}) = 0 <0.000009>
getcwd("/home/hvacproz/public_html/acesys", 4096) = 34 <0.000009>
open("/home/hvacproz/public_html/acesys/cake/libs/security.php", O_RDONLY) = 3 <0.000011>
fstat(3, {st_mode=S_IFREG|0644, st_size=3412, ...}) = 0 <0.000008>
open("/home/hvacproz/public_html/acesys/cake/libs/security.php", O_RDONLY) = 4 <0.000010>
fstat(4, {st_mode=S_IFREG|0644, st_size=3412, ...}) = 0 <0.000009>
mmap(NULL, 3412, PROT_READ, MAP_SHARED, 4, 0) = 0x7fe0abc47000 <0.000011>
munmap(0x7fe0abc47000, 3412)            = 0 <0.000010>
close(4)                                = 0 <0.000009>
fcntl(3, F_GETFL)                       = 0x8000 (flags O_RDONLY|O_LARGEFILE) <0.000008>
fstat(3, {st_mode=S_IFREG|0644, st_size=3412, ...}) = 0 <0.000009>
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe0abc47000 <0.000010>
lseek(3, 0, SEEK_CUR)                   = 0 <0.000008>
lseek(3, 0, SEEK_SET)                   = 0 <0.000009>
read(3, "<?php\n/* SVN FILE: $Id: security.php 5317 2007-06-20 08:28:35Z phpnut $ */\n/**\n * Security Class\n *\n * This class is a singleton class that contains\n * functions for hasing and security.\n *\n * PHP versions 4 and 5\n *\n * CakePHP(tm) :  Rapid Development Framework <http://www.cakephp.org/>\n * Copyright 2005-2007, Cake Software Foundation, Inc.\n *\t\t\t\t\t\t\t\t1785 E. Sahara Avenue, Suite 490-204\n *\t\t\t\t\t\t\t\tLas Vegas, Nevada 89104\n *\n * Licensed under The MIT License\n * Redistributions of files must retain the above copyright notice.\n *\n * @filesource\n * @copyright\t\tCopyright 2005-2007, Cake Software Foundation, Inc.\n * @link\t\t\t\thttp://www.cakefoundation.org/projects/info/cakephp CakePHP(tm) Project\n * @package\t\t\tcake\n * @subpackage\t\tcake.cake.libs\n * @since\t\t\tCakePHP(tm) v .0.10.0.1233\n * @version\t\t\t$Revision: 5317 $\n * @modifiedby\t\t$LastChangedBy: phpnut $\n * @lastmodified\t$Date: 2007-06-20 03:28:35 -0500 (Wed, 20 Jun 2007) $\n * @license\t\t\thttp://www.opensource.org/licenses/mit-license.php The MIT License\n */\n/**\n * Security Class\n *\n * This class is a singleton class that contains functions for hasing and security.\n *\n * @package\t\tcake\n * @subpackage\tcake.cake.libs\n */\nclass Security extends Object {\n/**\n * Singleton method to retrieve the instance of the Security class\n *\n * @return object Security\n * @access public\n */\n\tfunction &getInstance() {\n\t\tstatic $instance = array();\n\t\tif (!$instance) {\n\t\t\t$instance[0] = &new Security;\n\t\t}\n\t\treturn $instance[0];\n\t}\n/**\n * Returns inactive minutes constant based on cake the security level\n *\n * @return integer\n * @access public\n */\n\tfunction inactiveMins() {\n\t\tswitch(CAKE_SECURITY) {\n\t\t\tcase 'high':\n\t\t\t\treturn 10;\n\t\t\tbreak;\n\t\t\tcase 'medium':\n\t\t\t\treturn 100;\n\t\t\tbreak;\n\t\t\tcase 'low':\n\t\t\tdefault:\n\t\t\t\treturn 300;\n\t\t\tbreak;\n\t\t}\n\t}\n/**\n * Generates a unique authkey\n *\n * @return mixed\n * @access public\n */\n\tfunction generateAuthKey() {\n\t\t$_this =& Security::getInstance();\n\t\treturn $_this->hash(uniqid(rand(), true));\n\t}\n/**\n * Validates the authkey\n *\n * @param mixed $authKey\n * @retu"..., 4096) = 3412 <0.000012>
lseek(3, 3412, SEEK_SET)                = 3412 <0.000009>
read(3, "", 4096)                       = 0 <0.000008>
read(3, "", 8192)                       = 0 <0.000009>
read(3, "", 8192)                       = 0 <0.000008>
close(3)                                = 0 <0.000010>
munmap(0x7fe0abc47000, 4096)            = 0 <0.000013>
getcwd("/home/hvacproz/public_html/acesys", 4096) = 34 <0.000009>
lstat("/home", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html", {st_mode=S_IFDIR|0750, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake/libs", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake/libs/inflector.php", {st_mode=S_IFREG|0644, st_size=15186, ...}) = 0 <0.000010>
stat("/home/hvacproz/public_html/acesys/cake/libs/inflector.php", {st_mode=S_IFREG|0644, st_size=15186, ...}) = 0 <0.000009>
getcwd("/home/hvacproz/public_html/acesys", 4096) = 34 <0.000008>
open("/home/hvacproz/public_html/acesys/cake/libs/inflector.php", O_RDONLY) = 3 <0.000011>
fstat(3, {st_mode=S_IFREG|0644, st_size=15186, ...}) = 0 <0.000008>
open("/home/hvacproz/public_html/acesys/cake/libs/inflector.php", O_RDONLY) = 4 <0.000010>
fstat(4, {st_mode=S_IFREG|0644, st_size=15186, ...}) = 0 <0.000008>
mmap(NULL, 15186, PROT_READ, MAP_SHARED, 4, 0) = 0x7fe0abc44000 <0.000010>
munmap(0x7fe0abc44000, 15186)           = 0 <0.000010>
close(4)                                = 0 <0.000009>
fcntl(3, F_GETFL)                       = 0x8000 (flags O_RDONLY|O_LARGEFILE) <0.000008>
fstat(3, {st_mode=S_IFREG|0644, st_size=15186, ...}) = 0 <0.000008>
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe0abc47000 <0.000010>
lseek(3, 0, SEEK_CUR)                   = 0 <0.000008>
lseek(3, 0, SEEK_SET)                   = 0 <0.000008>
read(3, "<?php\n/* SVN FILE: $Id: inflector.php 5421 2007-07-09 04:58:57Z phpnut $ */\n/**\n * Pluralize and singularize English words.\n *\n * Used by Cake's naming conventions throughout the framework.\n *\n * PHP versions 4 and 5\n *\n * CakePHP(tm) :  Rapid Development Framework <http://www.cakephp.org/>\n * Copyright 2005-2007, Cake Software Foundation, Inc.\n *\t\t\t\t\t\t\t\t1785 E. Sahara Avenue, Suite 490-204\n *\t\t\t\t\t\t\t\tLas Vegas, Nevada 89104\n *\n * Licensed under The MIT License\n * Redistributions of files must retain the above copyright notice.\n *\n * @filesource\n * @copyright\t\tCopyright 2005-2007, Cake Software Foundation, Inc.\n * @link\t\t\t\thttp://www.cakefoundation.org/projects/info/cakephp CakePHP(tm) Project\n * @package\t\t\tcake\n * @subpackage\t\tcake.cake.libs\n * @since\t\t\tCakePHP(tm) v 0.2.9\n * @version\t\t\t$Revision: 5421 $\n * @modifiedby\t\t$LastChangedBy: phpnut $\n * @lastmodified\t$Date: 2007-07-08 23:58:57 -0500 (Sun, 08 Jul 2007) $\n * @license\t\t\thttp://www.opensource.org/licenses/mit-license.php The MIT License\n */\n/**\n * Included libraries.\n *\n */\n\tif (!class_exists('Object')) {\n\t\t uses('object');\n\t}\n\tuses('Set');\n/**\n * Pluralize and singularize English words.\n *\n * Inflector pluralizes and singularizes English nouns.\n * Used by Cake's naming conventions throughout the framework.\n * Test with $i = new Inflector(); $i->test();\n *\n * @package\t\tcake\n * @subpackage\tcake.cake.libs\n */\nclass Inflector extends Object {\n/**\n * Constructor.\n *\n */\n\tfunction __construct() {\n\t\tparent::__construct();\n\t}\n/**\n * Gets a reference to the Inflector object instance\n *\n * @return object\n * @access public\n */\n\tfunction &getInstance() {\n\t\tstatic $instance = array();\n\n\t\tif (!isset($instance[0]) || !$instance[0]) {\n\t\t\t$instance[0] =& new Inflector();\n\t\t}\n\n\t\treturn $instance[0];\n\t}\n/**\n * Initializes plural inflection rules\n *\n * @access protected\n */\n\tfunction __initPluralRules() {\n\t\t$_this =& Inflector::getInstance();\n\t\t$corePluralRules = array('/(s)tatus$/i' => '\\1\\2tatuses',\n\t\t\t\t\t\t\t\t\t'/(quiz)$/i' => '\\1zes',\n\t\t\t\t\t\t\t\t\t'/^(ox)$/i' => '\\1\\2en', # ox\n\t"..., 4096) = 4096 <0.000011>
lseek(3, 4096, SEEK_SET)                = 4096 <0.000008>
read(3, "\t\t\t\t\t\t\t\t'siemens', 'species', 'swine', 'testes', 'trousers', 'trout', 'tuna', 'Vermontese', 'Wenchowese',\n\t\t\t\t\t\t\t\t\t\t\t'whiting', 'wildebeest', 'Yengeese',);\n\n\t\t$coreIrregularPlural = array('atlas' => 'atlases',\n\t\t\t\t\t\t\t\t\t\t'beef' => 'beefs',\n\t\t\t\t\t\t\t\t\t\t'brother' => 'brothers',\n\t\t\t\t\t\t\t\t\t\t'child' => 'children',\n\t\t\t\t\t\t\t\t\t\t'corpus' => 'corpuses',\n\t\t\t\t\t\t\t\t\t\t'cow' => 'cows',\n\t\t\t\t\t\t\t\t\t\t'ganglion' => 'ganglions',\n\t\t\t\t\t\t\t\t\t\t'genie' => 'genies',\n\t\t\t\t\t\t\t\t\t\t'genus' => 'genera',\n\t\t\t\t\t\t\t\t\t\t'graffito' => 'graffiti',\n\t\t\t\t\t\t\t\t\t\t'hoof' => 'hoofs',\n\t\t\t\t\t\t\t\t\t\t'loaf' => 'loaves',\n\t\t\t\t\t\t\t\t\t\t'man' => 'men',\n\t\t\t\t\t\t\t\t\t\t'money' => 'monies',\n\t\t\t\t\t\t\t\t\t\t'mongoose' => 'mongooses',\n\t\t\t\t\t\t\t\t\t\t'move' => 'moves',\n\t\t\t\t\t\t\t\t\t\t'mythos' => 'mythoi',\n\t\t\t\t\t\t\t\t\t\t'numen' => 'numina',\n\t\t\t\t\t\t\t\t\t\t'occiput' => 'occiputs',\n\t\t\t\t\t\t\t\t\t\t'octopus' => 'octopuses',\n\t\t\t\t\t\t\t\t\t\t'opus' => 'opuses',\n\t\t\t\t\t\t\t\t\t\t'ox' => 'oxen',\n\t\t\t\t\t\t\t\t\t\t'penis' => 'penises',\n\t\t\t\t\t\t\t\t\t\t'person' => 'people',\n\t\t\t\t\t\t\t\t\t\t'sex' => 'sexes',\n\t\t\t\t\t\t\t\t\t\t'soliloquy' => 'soliloquies',\n\t\t\t\t\t\t\t\t\t\t'testis' => 'testes',\n\t\t\t\t\t\t\t\t\t\t'trilby' => 'trilbys',\n\t\t\t\t\t\t\t\t\t\t'turf' => 'turfs',);\n\n\t\t$pluralRules = $corePluralRules;\n\t\t$uninflected = $coreUninflectedPlural;\n\t\t$irregular = $coreIrregularPlural;\n\n\t\tif (file_exists(CONFIGS . 'inflections.php')) {\n\t\t\tinclude(CONFIGS.'inflections.php');\n\t\t\t$pluralRules = Set::pushDiff($pluralRules, $corePluralRules);\n\t\t\t$uninflected = Set::pushDiff($uninflectedPlural, $coreUninflectedPlural);\n\t\t\t$irregular = Set::pushDiff($irregularPlural, $coreIrregularPlural);\n\t\t}\n\t\t$_this->pluralRules = array('pluralRules' => $pluralRules, 'uninflected' => $uninflected, 'irregular' => $irregular);\n\t\t$_this->pluralized = array();\n\t}\n/**\n * Return $word in plural form.\n *\n * @param string $word Word in singular\n * @return string Word in plural\n * @access public\n * @static\n */\n\tfunction pluralize($word) {\n\n\t\t$_this =& Inflector::getInstance();\n\t\tif (!isset($_this->pluralRules) || empty($_this->pluralRules)) {\n\t\t\t$_this->__initPluralRules();\n\t\t}\n\n\t\tif (isset($_this->pluralized[$word])) {\n\t\t\treturn "..., 4096) = 4096 <0.000009>
read(3, "\t\t\t'/((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$/i' => '\\1\\2sis',\n\t\t\t\t\t\t\t\t\t'/([ti])a$/i' => '\\1um',\n\t\t\t\t\t\t\t\t\t'/(p)eople$/i' => '\\1\\2erson',\n\t\t\t\t\t\t\t\t\t'/(m)en$/i' => '\\1an',\n\t\t\t\t\t\t\t\t\t'/(c)hildren$/i' => '\\1\\2hild',\n\t\t\t\t\t\t\t\t\t'/(n)ews$/i' => '\\1\\2ews',\n\t\t\t\t\t\t\t\t\t'/^(.*us)$/' => '\\\\1',\n\t\t\t\t\t\t\t\t\t'/s$/i' => '');\n\n\t\t$coreUninflectedSingular = array('.*[nrlm]ese', '.*deer', '.*fish', '.*measles', '.*ois', '.*pox', '.*sheep', '.*ss', 'Amoyese',\n\t\t\t\t\t\t\t\t\t\t\t'bison', 'Borghese', 'bream', 'breeches', 'britches', 'buffalo', 'cantus', 'carp', 'chassis', 'clippers',\n\t\t\t\t\t\t\t\t\t\t\t'cod', 'coitus', 'Congoese', 'contretemps', 'corps', 'debris', 'diabetes', 'djinn', 'eland', 'elk',\n\t\t\t\t\t\t\t\t\t\t\t'equipment', 'Faroese', 'flounder', 'Foochowese', 'gallows', 'Genevese', 'Genoese', 'Gilbertese', 'graffiti',\n\t\t\t\t\t\t\t\t\t\t\t'headquarters', 'herpes', 'hijinks', 'Hottentotese', 'information', 'innings', 'jackanapes', 'Kiplingese',\n\t\t\t\t\t\t\t\t\t\t\t'Kongoese', 'Lucchese', 'mackerel', 'Maltese', 'media', 'mews', 'moose', 'mumps', 'Nankingese', 'news',\n\t\t\t\t\t\t\t\t\t\t\t'nexus', 'Niasese', 'Pekingese', 'Piedmontese', 'pincers', 'Pistoiese', 'pliers', 'Portuguese', 'proceedings',\n\t\t\t\t\t\t\t\t\t\t\t'rabies', 'rice', 'rhinoceros', 'salmon', 'Sarawakese', 'scissors', 'sea[- ]bass', 'series', 'Shavese', 'shears',\n\t\t\t\t\t\t\t\t\t\t\t'siemens', 'species', 'swine', 'testes', 'trousers', 'trout', 'tuna', 'Vermontese', 'Wenchowese',\n\t\t\t\t\t\t\t\t\t\t\t'whiting', 'wildebeest', 'Yengeese',);\n\n\t\t$coreIrregularSingular = array('atlases' => 'atlas',\n\t\t\t\t\t\t\t\t\t\t'beefs' => 'beef',\n\t\t\t\t\t\t\t\t\t\t'brothers' => 'brother',\n\t\t\t\t\t\t\t\t\t\t'children' => 'child',\n\t\t\t\t\t\t\t\t\t\t'corpuses' => 'corpus',\n\t\t\t\t\t\t\t\t\t\t'cows' => 'cow',\n\t\t\t\t\t\t\t\t\t\t'ganglions' => 'ganglion',\n\t\t\t\t\t\t\t\t\t\t'genies' => 'genie',\n\t\t\t\t\t\t\t\t\t\t'genera' => 'genus',\n\t\t\t\t\t\t\t\t\t\t'graffiti' => 'graffito',\n\t\t\t\t\t\t\t\t\t\t'hoofs' => 'hoof',\n\t\t\t\t\t\t\t\t\t\t'loaves' => 'loaf',\n\t\t\t\t\t\t\t\t\t\t'men' => 'man',\n\t\t\t\t\t\t\t\t\t\t'monies' => 'money',\n\t\t\t\t\t\t\t\t\t\t'mongooses' => 'mongoose',\n\t\t\t\t\t\t\t\t\t\t'moves' => 'move',\n\t\t\t\t\t\t\t\t\t\t'mythoi' => 'mythos',\n\t\t\t\t\t\t\t\t\t\t'numina' => 'numen',\n\t\t\t\t\t\t\t\t\t\t"..., 8192) = 6994 <0.000011>
read(3, "", 4096)                       = 0 <0.000008>
read(3, "", 8192)                       = 0 <0.000008>
read(3, "", 8192)                       = 0 <0.000008>
brk(0x1ca4000)                          = 0x1ca4000 <0.000009>
close(3)                                = 0 <0.000011>
munmap(0x7fe0abc47000, 4096)            = 0 <0.000013>
getcwd("/home/hvacproz/public_html/acesys", 4096) = 34 <0.000009>
open("/home/hvacproz/public_html/acesys/cake/libs/set.php", O_RDONLY) = 3 <0.000012>
fstat(3, {st_mode=S_IFREG|0644, st_size=19656, ...}) = 0 <0.000008>
close(3)                                = 0 <0.000009>
getcwd("/home/hvacproz/public_html/acesys", 4096) = 34 <0.000009>
lstat("/home", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html", {st_mode=S_IFDIR|0750, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz/public_html/acesys/cake/libs", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz/public_html/acesys/cake/libs/configure.php", {st_mode=S_IFREG|0644, st_size=8536, ...}) = 0 <0.000010>
stat("/home/hvacproz/public_html/acesys/cake/libs/configure.php", {st_mode=S_IFREG|0644, st_size=8536, ...}) = 0 <0.000009>
getcwd("/home/hvacproz/public_html/acesys", 4096) = 34 <0.000009>
open("/home/hvacproz/public_html/acesys/cake/libs/configure.php", O_RDONLY) = 3 <0.000011>
fstat(3, {st_mode=S_IFREG|0644, st_size=8536, ...}) = 0 <0.000009>
open("/home/hvacproz/public_html/acesys/cake/libs/configure.php", O_RDONLY) = 4 <0.000010>
fstat(4, {st_mode=S_IFREG|0644, st_size=8536, ...}) = 0 <0.000009>
mmap(NULL, 8536, PROT_READ, MAP_SHARED, 4, 0) = 0x7fe0abc45000 <0.000011>
munmap(0x7fe0abc45000, 8536)            = 0 <0.000010>
close(4)                                = 0 <0.000009>
fcntl(3, F_GETFL)                       = 0x8000 (flags O_RDONLY|O_LARGEFILE) <0.000009>
fstat(3, {st_mode=S_IFREG|0644, st_size=8536, ...}) = 0 <0.000008>
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe0abc47000 <0.000010>
lseek(3, 0, SEEK_CUR)                   = 0 <0.000009>
lseek(3, 0, SEEK_SET)                   = 0 <0.000008>
read(3, "<?php\n/* SVN FILE: $Id: configure.php 5317 2007-06-20 08:28:35Z phpnut $ */\n/**\n * Short description for file.\n *\n * Long description for file\n *\n * PHP versions 4 and 5\n *\n * CakePHP(tm) :  Rapid Development Framework <http://www.cakephp.org/>\n * Copyright 2005-2007, Cake Software Foundation, Inc.\n *\t\t\t\t\t\t\t\t1785 E. Sahara Avenue, Suite 490-204\n *\t\t\t\t\t\t\t\tLas Vegas, Nevada 89104\n *\n * Licensed under The MIT License\n * Redistributions of files must retain the above copyright notice.\n *\n * @filesource\n * @copyright\t\tCopyright 2005-2007, Cake Software Foundation, Inc.\n * @link\t\t\t\thttp://www.cakefoundation.org/projects/info/cakephp CakePHP(tm) Project\n * @package\t\t\tcake\n * @subpackage\t\tcake.cake.libs\n * @since\t\t\tCakePHP(tm) v 1.0.0.2363\n * @version\t\t\t$Revision: 5317 $\n * @modifiedby\t\t$LastChangedBy: phpnut $\n * @lastmodified\t$Date: 2007-06-20 03:28:35 -0500 (Wed, 20 Jun 2007) $\n * @license\t\t\thttp://www.opensource.org/licenses/mit-license.php The MIT License\n */\n/**\n * Short description for file.\n *\n * Long description for file\n *\n * @package\t\tcake\n * @subpackage\tcake.cake.libs\n */\nclass Configure extends Object {\n/**\n * Hold array with paths to view files\n *\n * @var array\n * @access public\n */\n\tvar $viewPaths = array();\n/**\n * Hold array with paths to controller files\n *\n * @var array\n * @access public\n */\n\tvar $controllerPaths = array();\n/**\n * Enter description here...\n *\n * @var array\n * @access public\n */\n\tvar $modelPaths = array();\n/**\n * Enter description here...\n *\n * @var array\n * @access public\n */\n\tvar $helperPaths = array();\n/**\n * Enter description here...\n *\n * @var array\n * @access public\n */\n\tvar $componentPaths = array();\n/**\n * Enter description here...\n *\n * @var integer\n * @access public\n */\n\tvar $debug = null;\n/**\n * Return a singleton instance of Configure.\n *\n * @return Configure instance\n * @access public\n */\n\tfunction &getInstance() {\n\t\tstatic $instance = array();\n\t\tif (!$instance) {\n\t\t\t$instance[0] =& new Configure;\n\t\t\t$instance[0]->__loadBootstrap();\n\t\t}\n\t\treturn $instance[0];\n\t}\n/**\n * Used "..., 4096) = 4096 <0.000012>
lseek(3, 4096, SEEK_SET)                = 4096 <0.000009>
read(3, "\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t}\n/**\n * Used to delete a var from the Configure instance.\n *\n * Usage:\n * Configure::delete('Name'); will delete the entire Configure::Name\n * Configure::delete('Name.key'); will delete only the Configure::Name[key]\n *\n * @param string $var the var to be deleted\n * @return void\n * @access public\n */\n\tfunction delete($var = null) {\n\t\t$_this =& Configure::getInstance();\n\n\t\t$name = $_this->__configVarNames($var);\n\t\tif (count($name) > 1) {\n\t\t\tunset($_this->{$name[0]}[$name[1]]);\n\t\t} else {\n\t\t\tunset($_this->{$name[0]});\n\t\t}\n\t}\n/**\n * Will load a file from app/config/configure_file.php\n * variables in the files should be formated like:\n *  $config['name'] = 'value';\n * These will be used to create dynamic Configure vars.\n *\n * Usage Configure::load('configure_file');\n *\n * @param string $fileName name of file to load, extension must be .php and only the name should be used, not the extenstion\n * @return Configure::write\n * @access public\n */\n\tfunction load($fileName) {\n\t\t$_this =& Configure::getInstance();\n\n\t\tif (!file_exists(CONFIGS . $fileName . '.php')) {\n\t\t\ttrigger_error(\"Configure::load() - $fileName.php not found\", E_USER_WARNING);\n\t\t\treturn false;\n\t\t}\n\t\tinclude(CONFIGS . $fileName . '.php');\n\t\tif (!isset($config)) {\n\t\t\ttrigger_error(\"Configure::load() - no variable \\$config found in $fileName.php\", E_USER_WARNING);\n\t\t\treturn false;\n\t\t}\n\t\treturn $_this->write($config);\n\t}\n\n/**\n * Used to determine the current version of CakePHP\n *\n * Usage Configure::version();\n *\n * @return string Current version of CakePHP\n * @access public\n */\n\tfunction version() {\n\t\t$_this =& Configure::getInstance();\n\t\tif (!isset($_this->Cake['version'])) {\n\t\t\trequire(CORE_PATH . 'cake' . DS . 'config' . DS . 'config.php');\n\t\t\t$_this->write($config);\n\t\t}\n\t\treturn $_this->Cake['version'];\n\t}\n/**\n * Checks $name for dot notation to create dynamic Configure::$var as an array when needed.\n *\n * @param mixed $name\n * @return array\n * @access private\n */\n\tfunction __configVarNames($name) {\n\t\tif (is_string($name)) {\n\t\t\tif"..., 4096) = 4096 <0.000010>
read(3, "null;\n\t\t$helperPaths = null;\n\t\t$componentPaths = null;\n\t\trequire APP_PATH . 'config' . DS . 'bootstrap.php';\n\t\t$_this->__buildModelPaths($modelPaths);\n\t\t$_this->__buildViewPaths($viewPaths);\n\t\t$_this->__buildControllerPaths($controllerPaths);\n\t\t$_this->__buildHelperPaths($helperPaths);\n\t\t$_this->__buildComponentPaths($componentPaths);\n\t}\n}\n?>", 8192) = 344 <0.000009>
read(3, "", 4096)                       = 0 <0.000008>
read(3, "", 8192)                       = 0 <0.000008>
read(3, "", 8192)                       = 0 <0.000008>
close(3)                                = 0 <0.000011>
munmap(0x7fe0abc47000, 4096)            = 0 <0.000013>
getcwd("/home/hvacproz/public_html/acesys", 4096) = 34 <0.000009>
lstat("/home", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html", {st_mode=S_IFDIR|0750, st_size=4096, ...}) = 0 <0.000016>
lstat("/home/hvacproz/public_html/acesys", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000018>
lstat("/home/hvacproz/public_html/acesys/config", 0x7ffdb566b4a0) = -1 ENOENT (No such file or directory) <0.000009>
lstat("/usr", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000010>
lstat("/usr/local", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/usr/local/php52", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/usr/local/php52/pear", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000010>
lstat("/usr/local/php52/pear/config", 0x7ffdb566b4a0) = -1 ENOENT (No such file or directory) <0.000009>
lstat("/home", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000008>
lstat("/home/hvacproz", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html", {st_mode=S_IFDIR|0750, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/config", 0x7ffdb566b4a0) = -1 ENOENT (No such file or directory) <0.000009>
lstat("/home", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000008>
lstat("/home/hvacproz", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html", {st_mode=S_IFDIR|0750, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000008>
lstat("/home/hvacproz/public_html/acesys/app", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz/public_html/acesys/app/config", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/app/config/bootstrap.php", {st_mode=S_IFREG|0644, st_size=1731, ...}) = 0 <0.000010>
stat("/home/hvacproz/public_html/acesys/app/config/bootstrap.php", {st_mode=S_IFREG|0644, st_size=1731, ...}) = 0 <0.000010>
getcwd("/home/hvacproz/public_html/acesys", 4096) = 34 <0.000009>
lstat("/home", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000011>
lstat("/home/hvacproz", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html", {st_mode=S_IFDIR|0750, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/config", 0x7ffdb566c3c0) = -1 ENOENT (No such file or directory) <0.000008>
open("/home/hvacproz/public_html/acesys/config/bootstrap.php", O_RDONLY) = -1 ENOENT (No such file or directory) <0.000011>
lstat("/usr", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/usr/local", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000008>
lstat("/usr/local/php52", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/usr/local/php52/pear", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/usr/local/php52/pear/config", 0x7ffdb566c3c0) = -1 ENOENT (No such file or directory) <0.000009>
open("/usr/local/php52/pear/config/bootstrap.php", O_RDONLY) = -1 ENOENT (No such file or directory) <0.000010>
lstat("/home", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html", {st_mode=S_IFDIR|0750, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz/public_html/acesys/config", 0x7ffdb566c3c0) = -1 ENOENT (No such file or directory) <0.000008>
open("/home/hvacproz/public_html/acesys/config/bootstrap.php", O_RDONLY) = -1 ENOENT (No such file or directory) <0.000009>
open("/home/hvacproz/public_html/acesys/app/config/bootstrap.php", O_RDONLY) = 3 <0.000011>
fstat(3, {st_mode=S_IFREG|0644, st_size=1731, ...}) = 0 <0.000009>
open("/home/hvacproz/public_html/acesys/app/config/bootstrap.php", O_RDONLY) = 4 <0.000010>
fstat(4, {st_mode=S_IFREG|0644, st_size=1731, ...}) = 0 <0.000008>
mmap(NULL, 1731, PROT_READ, MAP_SHARED, 4, 0) = 0x7fe0abc47000 <0.000012>
munmap(0x7fe0abc47000, 1731)            = 0 <0.000012>
close(4)                                = 0 <0.000009>
fcntl(3, F_GETFL)                       = 0x8000 (flags O_RDONLY|O_LARGEFILE) <0.000009>
fstat(3, {st_mode=S_IFREG|0644, st_size=1731, ...}) = 0 <0.000009>
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe0abc47000 <0.000010>
lseek(3, 0, SEEK_CUR)                   = 0 <0.000008>
lseek(3, 0, SEEK_SET)                   = 0 <0.000008>
read(3, "<?php\n/* SVN FILE: $Id: bootstrap.php 4409 2007-02-02 13:20:59Z phpnut $ */\n/**\n * Short description for file.\n *\n * Long description for file\n *\n * PHP versions 4 and 5\n *\n * CakePHP(tm) :  Rapid Development Framework <http://www.cakephp.org/>\n * Copyright 2005-2007, Cake Software Foundation, Inc.\n *\t\t\t\t\t\t\t\t1785 E. Sahara Avenue, Suite 490-204\n *\t\t\t\t\t\t\t\tLas Vegas, Nevada 89104\n *\n * Licensed under The MIT License\n * Redistributions of files must retain the above copyright notice.\n *\n * @filesource\n * @copyright\t\tCopyright 2005-2007, Cake Software Foundation, Inc.\n * @link\t\t\t\thttp://www.cakefoundation.org/projects/info/cakephp CakePHP(tm) Project\n * @package\t\t\tcake\n * @subpackage\t\tcake.app.config\n * @since\t\t\tCakePHP(tm) v 0.10.8.2117\n * @version\t\t\t$Revision: 4409 $\n * @modifiedby\t\t$LastChangedBy: phpnut $\n * @lastmodified\t$Date: 2007-02-02 07:20:59 -0600 (Fri, 02 Feb 2007) $\n * @license\t\t\thttp://www.opensource.org/licenses/mit-license.php The MIT License\n */\n/**\n *\n * This file is loaded automatically by the app/webroot/index.php file after the core bootstrap.php is loaded\n * This is an application wide file to load any function that is not used within a class define.\n * You can also use this to include or require any files in your application.\n *\n */\n/**\n * The settings below can be used to set additional paths to models, views and controllers.\n * This is related to Ticket #470 (https://trac.cakephp.org/ticket/470)\n *\n * $modelPaths = array('full path to models', 'second full path to models', 'etc...');\n * $viewPaths = array('this path to views', 'second full path to views', 'etc...');\n * $controllerPaths = array('this path to controllers', 'second full path to controllers', 'etc...');\n *\n */\n//EOF\n?>", 4096) = 1731 <0.000014>
lseek(3, 1731, SEEK_SET)                = 1731 <0.000009>
read(3, "", 4096)                       = 0 <0.000008>
read(3, "", 8192)                       = 0 <0.000008>
read(3, "", 8192)                       = 0 <0.000009>
close(3)                                = 0 <0.000009>
munmap(0x7fe0abc47000, 4096)            = 0 <0.000013>
getcwd("/home/hvacproz/public_html/acesys", 4096) = 34 <0.000009>
lstat("/home", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html", {st_mode=S_IFDIR|0750, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz/public_html/acesys/cake/dispatcher.php", {st_mode=S_IFREG|0644, st_size=12922, ...}) = 0 <0.000010>
stat("/home/hvacproz/public_html/acesys/cake/dispatcher.php", {st_mode=S_IFREG|0644, st_size=12922, ...}) = 0 <0.000009>
getcwd("/home/hvacproz/public_html/acesys", 4096) = 34 <0.000008>
open("/home/hvacproz/public_html/acesys/cake/dispatcher.php", O_RDONLY) = 3 <0.000010>
fstat(3, {st_mode=S_IFREG|0644, st_size=12922, ...}) = 0 <0.000009>
open("/home/hvacproz/public_html/acesys/cake/dispatcher.php", O_RDONLY) = 4 <0.000009>
fstat(4, {st_mode=S_IFREG|0644, st_size=12922, ...}) = 0 <0.000014>
mmap(NULL, 12922, PROT_READ, MAP_SHARED, 4, 0) = 0x7fe0abc44000 <0.000011>
munmap(0x7fe0abc44000, 12922)           = 0 <0.000011>
close(4)                                = 0 <0.000009>
fcntl(3, F_GETFL)                       = 0x8000 (flags O_RDONLY|O_LARGEFILE) <0.000009>
fstat(3, {st_mode=S_IFREG|0644, st_size=12922, ...}) = 0 <0.000008>
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe0abc47000 <0.000010>
lseek(3, 0, SEEK_CUR)                   = 0 <0.000008>
lseek(3, 0, SEEK_SET)                   = 0 <0.000008>
read(3, "<?php\n/* SVN FILE: $Id: dispatcher.php 5421 2007-07-09 04:58:57Z phpnut $ */\n/**\n * Dispatcher takes the URL information, parses it for paramters and\n * tells the involved controllers what to do.\n *\n * This is the heart of Cake's operation.\n *\n * PHP versions 4 and 5\n *\n * CakePHP(tm) : Rapid Development Framework <http://www.cakephp.org/>\n * Copyright 2005-2007, Cake Software Foundation, Inc.\n *\t\t\t\t\t\t\t\t1785 E. Sahara Avenue, Suite 490-204\n *\t\t\t\t\t\t\t\tLas Vegas, Nevada 89104\n *\n * Licensed under The MIT License\n * Redistributions of files must retain the above copyright notice.\n *\n * @filesource\n * @copyright\t\tCopyright 2005-2007, Cake Software Foundation, Inc.\n * @link\t\t\t\thttp://www.cakefoundation.org/projects/info/cakephp CakePHP(tm) Project\n * @package\t\t\tcake\n * @subpackage\t\tcake.cake\n * @since\t\t\tCakePHP(tm) v 0.2.9\n * @version\t\t\t$Revision: 5421 $\n * @modifiedby\t\t$LastChangedBy: phpnut $\n * @lastmodified\t$Date: 2007-07-08 23:58:57 -0500 (Sun, 08 Jul 2007) $\n * @license\t\t\thttp://www.opensource.org/licenses/mit-license.php The MIT License\n */\n/**\n * List of helpers to include\n */\n\tuses('router', DS.'controller'.DS.'controller');\n/**\n * Dispatcher translates URLs to controller-action-paramter triads.\n *\n * Dispatches the request, creating appropriate models and controllers.\n *\n * @package\t\tcake\n * @subpackage\tcake.cake\n */\nclass Dispatcher extends Object {\n/**\n * Base URL\n * @var string\n */\n\tvar $base = false;\n/**\n * @var string\n */\n\tvar $admin = false;\n/**\n * @var string\n */\n\tvar $webservices = null;\n/**\n * @var string\n */\n\tvar $plugin = null;\n/**\n * Constructor.\n */\n\tfunction __construct() {\n\t\tparent::__construct();\n\t}\n/**\n * Dispatches and invokes given URL, handing over control to the involved controllers, and then renders the results (if autoRender is set).\n *\n * If no controller of given name can be found, invoke() shows error messages in\n * the form of Missing Controllers information. It does the same with Actions (methods of Controllers are called\n * Actions).\n *\n * @param string $url\tURL information to wor"..., 4096) = 4096 <0.000012>
lseek(3, 4096, SEEK_SET)                = 4096 <0.000009>
read(3, "ldAction;\n\t\t\t}\n\t\t}\n\n\t\tif (empty($params['action'])) {\n\t\t\t$params['action'] = 'index';\n\t\t}\n\n\t\tif (defined('CAKE_ADMIN')) {\n\t\t\tif (isset($params[CAKE_ADMIN])) {\n\t\t\t\t$this->admin = '/'.CAKE_ADMIN ;\n\t\t\t\t$url = preg_replace('/'.CAKE_ADMIN.'(\\/|$)/', '', $url);\n\t\t\t\t$params['action'] = CAKE_ADMIN.'_'.$params['action'];\n\t\t\t} elseif (strpos($params['action'], CAKE_ADMIN) === 0) {\n\t\t\t\t\t$privateAction = true;\n\t\t\t}\n\t\t}\n\n\t\tif ($missingController) {\n\t\t\treturn $this->cakeError('missingController', array(\n\t\t\t\t\t\t\t\t\t\t\tarray('className' => Inflector::camelize($params['controller'].\"Controller\"),\n\t\t\t\t\t\t\t\t\t\t\t\t\t'webroot' => $this->webroot,\n\t\t\t\t\t\t\t\t\t\t\t\t\t'url' => $url,\n\t\t\t\t\t\t\t\t\t\t\t\t\t'base' => $this->base)));\n\t\t} else {\n\t\t\t$controller =& new $ctrlClass();\n\t\t}\n\n\t\t$classMethods = get_class_methods($controller);\n\t\t$classVars = get_object_vars($controller);\n\n\t\tif ((in_array($params['action'], $classMethods) || in_array(strtolower($params['action']), $classMethods)) && strpos($params['action'], '_', 0) === 0) {\n\t\t\t$privateAction = true;\n\t\t}\n\n\t\tif (!in_array($params['action'], $classMethods) && !in_array(strtolower($params['action']), $classMethods)) {\n\t\t\t$missingAction = true;\n\t\t}\n\n\t\tif (in_array(strtolower($params['action']), array('object', 'tostring', 'requestaction', 'log',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'cakeerror', 'constructclasses', 'redirect',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'set', 'setaction', 'validate', 'validateerrors',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'render', 'referer', 'flash', 'flashout',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'generatefieldnames', 'postconditions', 'cleanupfields',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'beforefilter', 'beforerender', 'afterfilter'))) {\n\t\t\t$missingAction = true;\n\t\t}\n\n\t\tif (in_array('return', array_keys($params)) && $params['return'] == 1) {\n\t\t\t$controller->autoRender = false;\n\t\t}\n\n\t\t$controller->base = $this->base;\n\t\t$base = strip_plugin($this->base, $this->plugin);\n\t\tif (defined(\"BASE_URL\")) {\n\t\t\t$controller->here = $base . $this->admin . $url;\n\t\t} else {\n\t\t\t$controller->here = $base . $this->admin . '/' . $url;\n\t\t}\n\t\t$controller->webroot = $this->webroot;\n\t\t$controll"..., 4096) = 4096 <0.000009>
read(3, " @return string\n */\n\tfunction _invoke (&$controller, $params, $missingAction = false) {\n\t\t$this->start($controller);\n\t\t$classVars = get_object_vars($controller);\n\n\t\tif ($missingAction && in_array('scaffold', array_keys($classVars))) {\n\t\t\tuses(DS.'controller'.DS.'scaffold');\n\t\t\treturn new Scaffold($controller, $params);\n\t\t} else {\n\t\t\t$output = call_user_func_array(array(&$controller, $params['action']), empty($params['pass'])? null: $params['pass']);\n\t\t}\n\t\tif ($controller->autoRender) {\n\t\t\t$output = $controller->render();\n\t\t}\n\t\t$controller->output =& $output;\n\t\t$controller->afterFilter();\n\t\treturn $controller->output;\n\t}\n/**\n * Starts up a controller\n *\n * @param object $controller\n */\n\tfunction start(&$controller) {\n\t\tif (!empty($controller->beforeFilter)) {\n\t\t\tif (is_array($controller->beforeFilter)) {\n\n\t\t\t\tforeach ($controller->beforeFilter as $filter) {\n\t\t\t\t\tif (is_callable(array($controller,$filter)) && $filter != 'beforeFilter') {\n\t\t\t\t\t\t$controller->$filter();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (is_callable(array($controller, $controller->beforeFilter)) && $controller->beforeFilter != 'beforeFilter') {\n\t\t\t\t\t$controller->{$controller->beforeFilter}();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t$controller->beforeFilter();\n\n\t\tforeach ($controller->components as $c) {\n\t\t\t$path = preg_split('/\\/|\\./', $c);\n\t\t\t$c = $path[count($path) - 1];\n\t\t\tif (isset($controller->{$c}) && is_object($controller->{$c}) && is_callable(array($controller->{$c}, 'startup'))) {\n\t\t\t\t$controller->{$c}->startup($controller);\n\t\t\t}\n\t\t}\n\t}\n\n/**\n * Returns array of GET and POST parameters. GET parameters are taken from given URL.\n *\n * @param string $from_url\tURL to mine for parameter information.\n * @return array Parameters found in POST and GET.\n */\n\tfunction parseParams($from_url) {\n\t\t$Route = new Router();\n\t\tinclude CONFIGS.'routes.php';\n\t\t$params = $Route->parse ($from_url);\n\n\t\tif (ini_get('magic_quotes_gpc') == 1) {\n\t\t\tif (!empty($_POST)) {\n\t\t\t\t$params['form'] = stripslashes_deep($_POST);\n\t\t\t}\n\t\t} else {\n\t\t\t$params['form'] = $_POST;\n\t\t}\n\n\t\tif (isset($params['form'"..., 8192) = 4730 <0.000010>
read(3, "", 4096)                       = 0 <0.000008>
read(3, "", 8192)                       = 0 <0.000009>
read(3, "", 8192)                       = 0 <0.000008>
brk(0x1ce4000)                          = 0x1ce4000 <0.000010>
close(3)                                = 0 <0.000011>
munmap(0x7fe0abc47000, 4096)            = 0 <0.000013>
getcwd("/home/hvacproz/public_html/acesys", 4096) = 34 <0.000009>
lstat("/home", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html", {st_mode=S_IFDIR|0750, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake/libs", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake/libs/router.php", {st_mode=S_IFREG|0644, st_size=6205, ...}) = 0 <0.000010>
open("/home/hvacproz/public_html/acesys/cake/libs/router.php", O_RDONLY) = 3 <0.000011>
fstat(3, {st_mode=S_IFREG|0644, st_size=6205, ...}) = 0 <0.000008>
open("/home/hvacproz/public_html/acesys/cake/libs/router.php", O_RDONLY) = 4 <0.000010>
fstat(4, {st_mode=S_IFREG|0644, st_size=6205, ...}) = 0 <0.000008>
mmap(NULL, 6205, PROT_READ, MAP_SHARED, 4, 0) = 0x7fe0abc46000 <0.000010>
munmap(0x7fe0abc46000, 6205)            = 0 <0.000010>
close(4)                                = 0 <0.000009>
fcntl(3, F_GETFL)                       = 0x8000 (flags O_RDONLY|O_LARGEFILE) <0.000008>
fstat(3, {st_mode=S_IFREG|0644, st_size=6205, ...}) = 0 <0.000009>
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe0abc47000 <0.000009>
lseek(3, 0, SEEK_CUR)                   = 0 <0.000009>
lseek(3, 0, SEEK_SET)                   = 0 <0.000008>
read(3, "<?php\n/* SVN FILE: $Id: router.php 5317 2007-06-20 08:28:35Z phpnut $ */\n/**\n * Parses the request URL into controller, action, and parameters.\n *\n * PHP versions 4 and 5\n *\n * CakePHP(tm) :  Rapid Development Framework <http://www.cakephp.org/>\n * Copyright 2005-2007, Cake Software Foundation, Inc.\n *\t\t\t\t\t\t\t\t1785 E. Sahara Avenue, Suite 490-204\n *\t\t\t\t\t\t\t\tLas Vegas, Nevada 89104\n *\n * Licensed under The MIT License\n * Redistributions of files must retain the above copyright notice.\n *\n * @filesource\n * @copyright\t\tCopyright 2005-2007, Cake Software Foundation, Inc.\n * @link\t\t\t\thttp://www.cakefoundation.org/projects/info/cakephp CakePHP(tm) Project\n * @package\t\t\tcake\n * @subpackage\t\tcake.cake.libs\n * @since\t\t\tCakePHP(tm) v 0.2.9\n * @version\t\t\t$Revision: 5317 $\n * @modifiedby\t\t$LastChangedBy: phpnut $\n * @lastmodified\t$Date: 2007-06-20 03:28:35 -0500 (Wed, 20 Jun 2007) $\n * @license\t\t\thttp://www.opensource.org/licenses/mit-license.php The MIT License\n */\n/**\n * Included libraries.\n *\n */\n\tif (!class_exists('Object')) {\n\t\t uses ('object');\n\t}\n/**\n * Parses the request URL into controller, action, and parameters.\n *\n * @package\t\tcake\n * @subpackage\tcake.cake.libs\n */\nclass Router extends Object {\n/**\n * Array of routes\n *\n * @var array\n * @access public\n */\n\t var $routes = array();\n/**\n * CAKE_ADMIN route\n *\n * @var array\n * @access private\n */\n\t var $__admin = null;\n/**\n * Constructor\n *\n * @access public\n */\n\tfunction __construct() {\n\t\tif (defined('CAKE_ADMIN')) {\n\t\t\t$admin = CAKE_ADMIN;\n\t\t\tif (!empty($admin)) {\n\t\t\t\t$this->__admin = array('/:' . $admin . '/:controller/:action/* (default)',\n\t\t\t\t\t\t\t\t\t\t'/^(?:\\/(?:(' . $admin . ')(?:\\\\/([a-zA-Z0-9_\\\\-\\\\.\\\\;\\\\:]+)(?:\\\\/([a-zA-Z0-9_\\\\-\\\\.\\\\;\\\\:]+)(?:[\\\\/\\\\?](.*))?)?)?))[\\/]*$/',\n\t\t\t\t\t\t\t\t\t\tarray($admin, 'controller', 'action'), array());\n\t\t\t}\n\t\t}\n\t}\n/**\n * Returns this object's routes array. Returns false if there are no routes available.\n *\n * @param string $route\tAn empty string, or a route string \"/\"\n * @param array $default NULL or an array describing the default rout"..., 4096) = 4096 <0.000012>
lseek(3, 4096, SEEK_SET)                = 4096 <0.000008>
read(3, "ler/:action/*', array('webservices' => 'Rss'));\n\t\t\t$this->connect('/soap/:controller/:action/*', array('webservices' => 'Soap'));\n\t\t\t$this->connect('/xml/:controller/:action/*', array('webservices' => 'Xml'));\n\t\t\t$this->connect('/xmlrpc/:controller/:action/*', array('webservices' => 'XmlRpc'));\n\t\t}\n\t\t$this->routes[] = $default_route;\n\n\t\tif (strpos($url, '?') !== false) {\n\t\t\t$url = substr($url, 0, strpos($url, '?'));\n\t\t}\n\n\t\tforeach ($this->routes as $route) {\n\t\t\tlist($route, $regexp, $names, $defaults) = $route;\n\n\t\t\tif (preg_match($regexp, $url, $r)) {\n\t\t\t\t// remove the first element, which is the url\n\t\t\t\tarray_shift ($r);\n\t\t\t\t// hack, pre-fill the default route names\n\t\t\t\tforeach ($names as $name) {\n\t\t\t\t\t$out[$name] = null;\n\t\t\t\t}\n\t\t\t\t$ii=0;\n\n\t\t\t\tif (is_array($defaults)) {\n\t\t\t\t\tforeach ($defaults as $name => $value) {\n\t\t\t\t\t\tif (preg_match('#[a-zA-Z_\\-]#i', $name)) {\n\t\t\t\t\t\t\t$out[$name] =  $this->stripEscape($value);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$out['pass'][] =  $this->stripEscape($value);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tforeach ($r as $found) {\n\t\t\t\t\t// if $found is a named url element (i.e. ':action')\n\t\t\t\t\tif (isset($names[$ii])) {\n\t\t\t\t\t\t$out[$names[$ii]] = $found;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// unnamed elements go in as 'pass'\n\t\t\t\t\t\t$found = explode('/', $found);\n\t\t\t\t\t\t$pass = array();\n\t\t\t\t\t\tforeach ($found as $key => $value) {\n\t\t\t\t\t\t\tif ($value == \"0\") {\n\t\t\t\t\t\t\t\t$pass[$key] =  $this->stripEscape($value);\n\t\t\t\t\t\t\t} elseif ($value) {\n\t\t\t\t\t\t\t\t$pass[$key] =  $this->stripEscape($value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$out['pass'] = am($out['pass'], $pass);\n\t\t\t\t\t}\n\t\t\t\t\t$ii++;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn $out;\n\t}\n\tfunction stripEscape($param) {\n\t\tif (!is_array($param) || empty($param)) {\n\t\t\tif (is_bool($param)) {\n\t\t\t\treturn $param;\n\t\t\t}\n\n\t\t\t$return = preg_replace('/^[\\\\t ]*(?:-!)+/', '', $param);\n\t\t\treturn $return;\n\t\t}\n\t\tforeach ($param as $key => $value) {\n\t\t\tif (is_string($value)) {\n\t\t\t\t$return[$key] = preg_replace('/^[\\\\t ]*(?:-!)+/', '', $value);\n\t\t\t} else {\n\t\t\t\tforeach ($value as $array => $string) {\n\t\t\t\t\t$return[$key][$array] = $this->s"..., 4096) = 2109 <0.000009>
read(3, "", 4096)                       = 0 <0.000009>
read(3, "", 8192)                       = 0 <0.000008>
read(3, "", 8192)                       = 0 <0.000009>
close(3)                                = 0 <0.000010>
munmap(0x7fe0abc47000, 4096)            = 0 <0.000013>
getcwd("/home/hvacproz/public_html/acesys", 4096) = 34 <0.000009>
lstat("/home", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz/public_html", {st_mode=S_IFDIR|0750, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz/public_html/acesys/cake", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake/libs", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz/public_html/acesys/cake/libs/controller", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz/public_html/acesys/cake/libs/controller/controller.php", {st_mode=S_IFREG|0644, st_size=30763, ...}) = 0 <0.000009>
open("/home/hvacproz/public_html/acesys/cake/libs/controller/controller.php", O_RDONLY) = 3 <0.000011>
fstat(3, {st_mode=S_IFREG|0644, st_size=30763, ...}) = 0 <0.000008>
open("/home/hvacproz/public_html/acesys/cake/libs/controller/controller.php", O_RDONLY) = 4 <0.000010>
fstat(4, {st_mode=S_IFREG|0644, st_size=30763, ...}) = 0 <0.000008>
mmap(NULL, 30763, PROT_READ, MAP_SHARED, 4, 0) = 0x7fe0abc40000 <0.000010>
munmap(0x7fe0abc40000, 30763)           = 0 <0.000012>
close(4)                                = 0 <0.000009>
fcntl(3, F_GETFL)                       = 0x8000 (flags O_RDONLY|O_LARGEFILE) <0.000008>
fstat(3, {st_mode=S_IFREG|0644, st_size=30763, ...}) = 0 <0.000008>
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe0abc47000 <0.000010>
lseek(3, 0, SEEK_CUR)                   = 0 <0.000009>
lseek(3, 0, SEEK_SET)                   = 0 <0.000009>
read(3, "<?php\n/* SVN FILE: $Id: controller.php 5317 2007-06-20 08:28:35Z phpnut $ */\n/**\n * Base controller class.\n *\n * PHP versions 4 and 5\n *\n * CakePHP(tm) :  Rapid Development Framework <http://www.cakephp.org/>\n * Copyright 2005-2007, Cake Software Foundation, Inc.\n *\t\t\t\t\t\t\t\t1785 E. Sahara Avenue, Suite 490-204\n *\t\t\t\t\t\t\t\tLas Vegas, Nevada 89104\n *\n * Licensed under The MIT License\n * Redistributions of files must retain the above copyright notice.\n *\n * @filesource\n * @copyright\t\tCopyright 2005-2007, Cake Software Foundation, Inc.\n * @link\t\t\t\thttp://www.cakefoundation.org/projects/info/cakephp CakePHP(tm) Project\n * @package\t\t\tcake\n * @subpackage\t\tcake.cake.libs.controller\n * @since\t\t\tCakePHP(tm) v 0.2.9\n * @version\t\t\t$Revision: 5317 $\n * @modifiedby\t\t$LastChangedBy: phpnut $\n * @lastmodified\t$Date: 2007-06-20 03:28:35 -0500 (Wed, 20 Jun 2007) $\n * @license\t\t\thttp://www.opensource.org/licenses/mit-license.php The MIT License\n */\n/**\n * Include files\n */\n\tuses(DS . 'controller' . DS . 'component', DS . 'view' . DS . 'view');\n/**\n * Controller\n *\n * Application controller (controllers are where you put all the actual code)\n * Provides basic functionality, such as rendering views (aka displaying templates).\n * Automatically selects model name from on singularized object class name\n * and creates the model object if proper class exists.\n *\n * @package\t\tcake\n * @subpackage\tcake.cake.libs.controller\n *\n */\nclass Controller extends Object{\n/**\n * Name of the controller.\n *\n * @var string\n * @access public\n */\n\tvar $name = null;\n/**\n * Stores the current URL (for links etc.)\n *\n * @var string\n * @access public\n */\n\tvar $here = null;\n/**\n * The webroot of the application\n *\n * @var string\n * @access public\n */\n\tvar $webroot = null;\n/**\n * Action to be performed.\n *\n * @var string\n * @access public\n */\n\tvar $action = null;\n/**\n * An array of names of models the particular controller wants to use.\n *\n * @var mixed A single name as a string or a list of names as an array.\n * @access protected\n */\n\tvar $uses = false;\n/**\n * An "..., 4096) = 4096 <0.000011>
lseek(3, 4096, SEEK_SET)                = 4096 <0.000009>
read(3, "ter output.\n *\n * @var string\n * @access public\n */\n\tvar $output = null;\n/**\n * Automatically set to the name of a plugin.\n *\n * @var string\n * @access public\n */\n\tvar $plugin = null;\n/**\n * Used to set methods a controller will allow the View to cache\n *\n * @var mixed\n * @access public\n */\n\tvar $cacheAction = false;\n/**\n * Used to create cached instances of models a controller uses.\n * When set to true all models related to the controller will be cached,\n * this can increase performance in many cases\n *\n * @var boolean\n * @access public\n */\n\tvar $persistModel = false;\n/**\n * Replaced with Controller::beforeFilter();\n *\n * @deprecated will not be avialable after 1.1.x.x\n */\n\tvar $beforeFilter = null;\n/**\n * Replaced with Router::parseExtensions();\n *\n * @deprecated will not be avialable after 1.1.x.x\n */\n\tvar $webservices = null;\n/**\n * Constructor.\n */\n\tfunction __construct() {\n\t\tif ($this->name === null) {\n\t\t\t$r = null;\n\n\t\t\tif (!preg_match('/(.*)Controller/i', get_class($this), $r)) {\n\t\t\t\tdie (\"Controller::__construct() : Can't get or parse my own class name, exiting.\");\n\t\t\t}\n\t\t\t$this->name = $r[1];\n\t\t}\n\n\t\tif ($this->viewPath == null) {\n\t\t\t$this->viewPath = Inflector::underscore($this->name);\n\t\t}\n\n\t\t$this->modelClass = Inflector::classify($this->name);\n\t\t$this->modelKey = Inflector::underscore($this->modelClass);\n\n\t\tif (is_subclass_of($this, 'AppController')) {\n\t\t\t$appVars = get_class_vars('AppController');\n\t\t\t$uses = $appVars['uses'];\n\t\t\t$merge = array('components', 'helpers');\n\n\t\t\tif ($uses == $this->uses && !empty($this->uses)) {\n\t\t\t\tarray_unshift($this->uses, $this->modelClass);\n\t\t\t} elseif ($this->uses !== null || $this->uses !== false) {\n\t\t\t\t$merge[] = 'uses';\n\t\t\t}\n\n\t\t\tforeach ($merge as $var) {\n\t\t\t\tif (isset($appVars[$var]) && !empty($appVars[$var]) && is_array($this->{$var})) {\n\t\t\t\t\t$this->{$var} = array_merge($this->{$var}, array_diff($appVars[$var], $this->{$var}));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tparent::__construct();\n\t}\n\n\tfunction _initComponents() {\n\t\t$component = new Component();\n\t\t$component->init($this);\n\t}\n/"..., 4096) = 4096 <0.000009>
read(3, "\tif (!class_exists($modelClass)) {\n\t\t\t\t\tloadModel($modelClass);\n\t\t\t\t}\n\n\t\t\t\tif (class_exists($modelClass)) {\n\t\t\t\t\tif ($this->persistModel === true) {\n\t\t\t\t\t\t$cached = $this->_persist($modelClass, null, $object);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (($cached === false)) {\n\t\t\t\t\t\t$model =& new $modelClass($id);\n\t\t\t\t\t\t$this->modelNames[] = $modelClass;\n\t\t\t\t\t\t$this->{$modelClass} =& $model;\n\n\t\t\t\t\t\tif ($this->persistModel === true) {\n\t\t\t\t\t\t\t$this->_persist($modelClass, true, $model);\n\t\t\t\t\t\t\t$registry = ClassRegistry::getInstance();\n\t\t\t\t\t\t\t$this->_persist($modelClass . 'registry', true, $registry->_objects, 'registry');\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$this->_persist($modelClass . 'registry', true, $object, 'registry');\n\t\t\t\t\t\t$this->_persist($modelClass, true, $object);\n\t\t\t\t\t\t$this->modelNames[] = $modelClass;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn $this->cakeError('missingModel', array(array('className' => $modelClass, 'webroot' => '', 'base' => $this->base)));\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n/**\n * Redirects to given $url, after turning off $this->autoRender.\n * Please notice that the script execution is not stopped after the redirect.\n *\n * @param string $url\n * @param integer $status\n * @access public\n */\n\tfunction redirect($url, $status = null) {\n\t\t$this->autoRender = false;\n\t\t$pos = strpos($url, '://');\n\t\t$base = strip_plugin($this->base, $this->plugin);\n\t\tif ($pos === false) {\n\t\t\tif (strpos($url, '/') !== 0) {\n\t\t\t\t$url = '/' . $url;\n\t\t\t}\n\t\t\t$url = FULL_BASE_URL . $base . $url;\n\t\t}\n\n\t\tif (function_exists('session_write_close')) {\n\t\t\tsession_write_close();\n\t\t}\n\n\t\tif (!empty($status)) {\n\t\t\t$codes = array(\n\t\t\t\t100 => \"HTTP/1.1 100 Continue\",\n\t\t\t\t101 => \"HTTP/1.1 101 Switching Protocols\",\n\t\t\t\t200 => \"HTTP/1.1 200 OK\",\n\t\t\t\t201 => \"HTTP/1.1 201 Created\",\n\t\t\t\t202 => \"HTTP/1.1 202 Accepted\",\n\t\t\t\t203 => \"HTTP/1.1 203 Non-Authoritative Information\",\n\t\t\t\t204 => \"HTTP/1.1 204 No Content\",\n\t\t\t\t205 => \"HTTP/1.1 205 Reset Content\",\n\t\t\t\t206 => \"HTTP/1.1 206 Partial Content\",\n\t\t\t\t300 => \"HTTP/1.1 300 Multiple Choices\",\n\t\t\t\t301 => \"HTTP/1.1 301 Moved Permanently"..., 8192) = 8192 <0.000010>
read(3, "function _setTitle($pageTitle) {\n\t\t$this->pageTitle = $pageTitle;\n\t}\n/**\n * Shows a message to the user $time seconds, then redirects to $url\n * Uses flash.thtml as a layout for the messages\n *\n * @param string $message Message to display to the user\n * @param string $url Relative URL to redirect to after the time expires\n * @param int $time seconds to show the message\n * @access public\n */\n\tfunction flash($message, $url, $pause = 1) {\n\t\t$this->autoRender = false;\n\t\t$this->autoLayout = false;\n\t\t$this->set('url', $this->base . $url);\n\t\t$this->set('message', $message);\n\t\t$this->set('pause', $pause);\n\t\t$this->set('page_title', $message);\n\n\t\tif (file_exists(VIEWS . 'layouts' . DS . 'flash.thtml')) {\n\t\t\t$flash = VIEWS . 'layouts' . DS . 'flash.thtml';\n\t\t} elseif ($flash = fileExistsInPath(LIBS . 'view' . DS . 'templates' . DS . \"layouts\" . DS . 'flash.thtml')) {\n\t\t}\n\t\t$this->render(null, false, $flash);\n\t}\n/**\n * Replaced with Controller::flash();\n * @deprecated will not be avialable after 1.1.x.x\n */\n\tfunction flashOut($message, $url, $pause = 1) {\n\t\ttrigger_error('(Controller::flashOut()) Deprecated: Use Controller::flash() instead', E_USER_WARNING);\n\t\t$this->autoRender = false;\n\t\t$this->autoLayout = false;\n\t\t$this->set('url', $url);\n\t\t$this->set('message', $message);\n\t\t$this->set('pause', $pause);\n\t\t$this->set('page_title', $message);\n\n\t\tif (file_exists(VIEWS . 'layouts' . DS . 'flash.thtml')) {\n\t\t\t$flash = VIEWS . 'layouts' . DS . 'flash.thtml';\n\t\t} elseif ($flash = fileExistsInPath(LIBS . 'view' . DS . 'templates' . DS . \"layouts\" . DS . 'flash.thtml')) {\n\t\t}\n\t\t$this->render(null, false, $flash);\n\t}\n/**\n * This function creates a $fieldNames array for the view to use.\n *\n * @param array $data\n * @param boolean $doCreateOptions\n * @return field name arrays for the view\n * @access public\n */\n\tfunction generateFieldNames($data = null, $doCreateOptions = true) {\n\t\t$fieldNames = array();\n\t\t$model = $this->modelClass;\n\t\t$modelKey = $this->modelKey;\n\t\t$table = $this->{$model}->table;\n\t\t$objRegistryModel =& ClassRegistry"..., 8192) = 8192 <0.000010>
read(3, "elObject->primaryKey]] = $value[$otherDisplayField];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (isset($data[$manyAssociation])) {\n\t\t\t\t\tforeach ($data[$manyAssociation] as $key => $row) {\n\t\t\t\t\t\t$fieldNames[$relation]['selected'][$row[$modelObject->primaryKey]] = $row[$modelObject->primaryKey];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn $fieldNames;\n\t}\n/**\n * Converts POST'ed model data to a model conditions array, suitable for a find or findAll Model query\n *\n * @param array $data POST'ed data organized by model and field\n * @return array An array of model conditions\n * @access public\n */\n\tfunction postConditions($data) {\n\t\tif (!is_array($data) || empty($data)) {\n\t\t\treturn null;\n\t\t}\n\t\t$conditions = array();\n\n\t\tforeach ($data as $model => $fields) {\n\t\t\tforeach ($fields as $field => $value) {\n\t\t\t\t$conditions[$model . '.' . $field] = $value;\n\t\t\t}\n\t\t}\n\t\treturn $conditions;\n\t}\n/**\n * Cleans up the date fields of current Model.\n *\n * @param string $modelName\n * @access public\n */\n\tfunction cleanUpFields($modelName = null) {\n\t\tif ($modelName == null) {\n\t\t\t$modelName = $this->modelClass;\n\t\t}\n\n\t\tforeach ($this->{$modelName}->_tableInfo->value as $field) {\n\t\t\tif ('date' == $field['type'] && isset($this->params['data'][$modelName][$field['name'] . '_year'])) {\n\t\t\t\t$newDate = $this->params['data'][$modelName][$field['name'] . '_year'] . '-';\n\t\t\t\t$newDate .= $this->params['data'][$modelName][$field['name'] . '_month'] . '-';\n\t\t\t\t$newDate .= $this->params['data'][$modelName][$field['name'] . '_day'];\n\t\t\t\tunset($this->params['data'][$modelName][$field['name'] . '_year']);\n\t\t\t\tunset($this->params['data'][$modelName][$field['name'] . '_month']);\n\t\t\t\tunset($this->params['data'][$modelName][$field['name'] . '_day']);\n\t\t\t\tunset($this->params['data'][$modelName][$field['name'] . '_hour']);\n\t\t\t\tunset($this->params['data'][$modelName][$field['name'] . '_min']);\n\t\t\t\tunset($this->params['data'][$modelName][$field['name'] . '_meridian']);\n\t\t\t\t$this->params['data'][$modelName][$field['name']] = $newDate;\n\t\t\t\t$this->data[$modelName][$field['name']] = $newDate;\n\n\t\t\t}"..., 8192) = 6187 <0.000010>
read(3, "", 4096)                       = 0 <0.000009>
read(3, "", 8192)                       = 0 <0.000009>
read(3, "", 8192)                       = 0 <0.000009>
brk(0x1d25000)                          = 0x1d25000 <0.000012>
brk(0x1d65000)                          = 0x1d65000 <0.000013>
close(3)                                = 0 <0.000010>
munmap(0x7fe0abc47000, 4096)            = 0 <0.000013>
getcwd("/home/hvacproz/public_html/acesys", 4096) = 34 <0.000009>
lstat("/home", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html", {st_mode=S_IFDIR|0750, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake/libs", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake/libs/controller", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz/public_html/acesys/cake/libs/controller/component.php", {st_mode=S_IFREG|0644, st_size=3964, ...}) = 0 <0.000010>
open("/home/hvacproz/public_html/acesys/cake/libs/controller/component.php", O_RDONLY) = 3 <0.000011>
fstat(3, {st_mode=S_IFREG|0644, st_size=3964, ...}) = 0 <0.000008>
open("/home/hvacproz/public_html/acesys/cake/libs/controller/component.php", O_RDONLY) = 4 <0.000010>
fstat(4, {st_mode=S_IFREG|0644, st_size=3964, ...}) = 0 <0.000009>
mmap(NULL, 3964, PROT_READ, MAP_SHARED, 4, 0) = 0x7fe0abc47000 <0.000010>
munmap(0x7fe0abc47000, 3964)            = 0 <0.000010>
close(4)                                = 0 <0.000011>
fcntl(3, F_GETFL)                       = 0x8000 (flags O_RDONLY|O_LARGEFILE) <0.000008>
fstat(3, {st_mode=S_IFREG|0644, st_size=3964, ...}) = 0 <0.000008>
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe0abc47000 <0.000010>
lseek(3, 0, SEEK_CUR)                   = 0 <0.000008>
lseek(3, 0, SEEK_SET)                   = 0 <0.000008>
read(3, "<?php\n/* SVN FILE: $Id: component.php 5317 2007-06-20 08:28:35Z phpnut $ */\n/**\n *\n * PHP versions 4 and 5\n *\n * CakePHP(tm) :  Rapid Development Framework <http://www.cakephp.org/>\n * Copyright 2005-2007, Cake Software Foundation, Inc.\n *\t\t\t\t\t\t\t\t1785 E. Sahara Avenue, Suite 490-204\n *\t\t\t\t\t\t\t\tLas Vegas, Nevada 89104\n *\n * Licensed under The MIT License\n * Redistributions of files must retain the above copyright notice.\n *\n * @filesource\n * @copyright\t\tCopyright 2005-2007, Cake Software Foundation, Inc.\n * @link\t\t\t\thttp://www.cakefoundation.org/projects/info/cakephp CakePHP(tm) Project\n * @package\t\t\tcake\n * @subpackage\t\tcake.cake.libs.controller\n * @since\t\t\tCakePHP(tm) v TBD\n * @version\t\t\t$Revision: 5317 $\n * @modifiedby\t\t$LastChangedBy: phpnut $\n * @lastmodified\t$Date: 2007-06-20 03:28:35 -0500 (Wed, 20 Jun 2007) $\n * @license\t\t\thttp://www.opensource.org/licenses/mit-license.php The MIT License\n */\n/**\n * Component\n *\n * Used to create instances of applications components\n *\n * @package\t\tcake\n * @subpackage\tcake.cake.libs.controller\n */\nclass Component extends Object {\n/**\n * Instance Controller\n *\n * @var object\n * @access private\n */\n\tvar $__controller = null;\n/**\n * Constructor\n */\n\tfunction __construct() {\n\t}\n/**\n * Used to initialize the components for current controller\n *\n * @param object $controller\n * @access public\n */\n\tfunction init(&$controller) {\n\t\t$this->__controller =& $controller;\n\n\t\tif ($this->__controller->components !== false) {\n\t\t\t$loaded = array();\n\t\t\t$this->__controller->components = array_merge($this->__controller->components, array('Session'));\n\t\t\t$loaded = $this->__loadComponents($loaded, $this->__controller->components);\n\n\t\t\tforeach (array_keys($loaded)as $component) {\n\t\t\t\t$tempComponent =& $loaded[$component];\n\n\t\t\t\tif (isset($tempComponent->components) && is_array($tempComponent->components)) {\n\t\t\t\t\tforeach ($tempComponent->components as $subComponent) {\n\t\t\t\t\t\t$this->__controller->{$component}->{$subComponent} =& $loaded[$subComponent];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n/**\n * Enter description"..., 4096) = 3964 <0.000012>
lseek(3, 3964, SEEK_SET)                = 3964 <0.000008>
read(3, "", 4096)                       = 0 <0.000009>
read(3, "", 8192)                       = 0 <0.000009>
read(3, "", 8192)                       = 0 <0.000009>
close(3)                                = 0 <0.000009>
munmap(0x7fe0abc47000, 4096)            = 0 <0.000013>
getcwd("/home/hvacproz/public_html/acesys", 4096) = 34 <0.000008>
lstat("/home", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html", {st_mode=S_IFDIR|0750, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake/libs", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake/libs/view", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz/public_html/acesys/cake/libs/view/view.php", {st_mode=S_IFREG|0644, st_size=22209, ...}) = 0 <0.000010>
open("/home/hvacproz/public_html/acesys/cake/libs/view/view.php", O_RDONLY) = 3 <0.000011>
fstat(3, {st_mode=S_IFREG|0644, st_size=22209, ...}) = 0 <0.000008>
open("/home/hvacproz/public_html/acesys/cake/libs/view/view.php", O_RDONLY) = 4 <0.000010>
fstat(4, {st_mode=S_IFREG|0644, st_size=22209, ...}) = 0 <0.000009>
mmap(NULL, 22209, PROT_READ, MAP_SHARED, 4, 0) = 0x7fe0abc42000 <0.000010>
munmap(0x7fe0abc42000, 22209)           = 0 <0.000011>
close(4)                                = 0 <0.000009>
fcntl(3, F_GETFL)                       = 0x8000 (flags O_RDONLY|O_LARGEFILE) <0.000008>
fstat(3, {st_mode=S_IFREG|0644, st_size=22209, ...}) = 0 <0.000008>
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe0abc47000 <0.000011>
lseek(3, 0, SEEK_CUR)                   = 0 <0.000008>
lseek(3, 0, SEEK_SET)                   = 0 <0.000008>
read(3, "<?php\n/* SVN FILE: $Id: view.php 5421 2007-07-09 04:58:57Z phpnut $ */\n/**\n * Methods for displaying presentation data in the view.\n *\n * PHP versions 4 and 5\n *\n * CakePHP(tm) :  Rapid Development Framework <http://www.cakephp.org/>\n * Copyright 2005-2007, Cake Software Foundation, Inc.\n *\t\t\t\t\t\t\t\t1785 E. Sahara Avenue, Suite 490-204\n *\t\t\t\t\t\t\t\tLas Vegas, Nevada 89104\n *\n * Licensed under The MIT License\n * Redistributions of files must retain the above copyright notice.\n *\n * @filesource\n * @copyright\t\tCopyright 2005-2007, Cake Software Foundation, Inc.\n * @link\t\t\t\thttp://www.cakefoundation.org/projects/info/cakephp CakePHP(tm) Project\n * @package\t\t\tcake\n * @subpackage\t\tcake.cake.libs.view\n * @since\t\t\tCakePHP(tm) v 0.10.0.1076\n * @version\t\t\t$Revision: 5421 $\n * @modifiedby\t\t$LastChangedBy: phpnut $\n * @lastmodified\t$Date: 2007-07-08 23:58:57 -0500 (Sun, 08 Jul 2007) $\n * @license\t\t\thttp://www.opensource.org/licenses/mit-license.php The MIT License\n */\n/**\n * Included libraries.\n */\nuses ('view' . DS . 'helper', 'class_registry');\n/**\n * View, the V in the MVC triad.\n *\n * Class holding methods for displaying presentation data.\n *\n * @package\t\t\tcake\n * @subpackage\t\tcake.cake.libs.view\n */\nclass View extends Object{\n/**\n * Name of the controller.\n *\n * @var string Name of controller\n * @access public\n */\n\tvar $name = null;\n/**\n * Stores the current URL (for links etc.)\n *\n * @var string Current URL\n * @access public\n */\n\tvar $here = null;\n/**\n * Action to be performed.\n *\n * @var string Name of action\n * @access public\n */\n\tvar $action = null;\n/**\n * An array of names of built-in helpers to include.\n *\n * @var mixed A single name as a string or a list of names as an array.\n * @access public\n */\n\tvar $helpers = array('Html');\n/**\n * Path to View.\n *\n * @var string Path to View\n * @access public\n */\n\tvar $viewPath;\n/**\n * Replaced with public var viewVars\n * @access protected\n * @deprecated\n */\n\tvar $_viewVars = array();\n/**\n * Variables for the view\n *\n * @var array\n * @access public\n */\n\tvar $viewVars = array();\n/*"..., 4096) = 4096 <0.000012>
lseek(3, 4096, SEEK_SET)                = 4096 <0.000009>
read(3, "'here', 'layout', 'modelNames', 'name', 'pageTitle', 'viewPath', 'params', 'data', 'webservices', 'plugin');\n/**\n * Constructor\n *\n * Instance is created in Controller::render() and is never called directly\n *\n * @var object instance of the calling controller\n */\n\tfunction __construct(&$controller) {\n\t\tif (is_object($controller)) {\n\t\t\t$this->controller =& $controller;\n\t\t\t$c = count($this->_passedVars);\n\n\t\t\tfor ($j = 0; $j < $c; $j++) {\n\t\t\t\t$var = $this->_passedVars[$j];\n\t\t\t\t$this->{$var} = $controller->{$var};\n\t\t\t}\n\t\t\t$this->_viewVars =& $this->viewVars;\n\t\t}\n\t\tif (!is_null($this->plugin)) {\n\t\t\t$this->pluginPath = 'plugins'. DS . $this->plugin . DS;\n\t\t\t$this->pluginPaths = array(\n\t\t\t\t\t\t\t\t\tVIEWS . $this->pluginPath,\n\t\t\t\t\t\t\t\t\tAPP . $this->pluginPath . 'views' . DS,\n\t\t\t\t\t\t\t\t);\n\n\t\t}\n\t\tparent::__construct();\n\t\tClassRegistry::addObject('view', $this);\n\t}\n/**\n * Renders view for given action and layout. If $file is given, that is used\n * for a view filename (e.g. customFunkyView.thtml).\n *\n * @param string $action Name of action to render for\n * @param string $layout Layout to use\n * @param string $file Custom filename for view\n * @return mixed returns an error if View::render() fails to find a related template.\n * \t\t\t\t\tboolean on successful render\n * @access public\n */\n\tfunction render($action = null, $layout = null, $file = null) {\n\n\t\tif (isset($this->_hasRendered) && $this->_hasRendered) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\t$this->_hasRendered = false;\n\t\t}\n\n\t\tif (!$action) {\n\t\t\t$action = $this->action;\n\t\t}\n\t\t$tempLayout = $this->layout;\n\n\t\tif ($layout) {\n\t\t\t$this->setLayout($layout);\n\t\t}\n\n\t\tif ($file) {\n\t\t\t$viewFileName = $file;\n\t\t} else {\n\t\t\t$viewFileName = $this->_getViewFileName($action);\n\t\t}\n\n\t\tif (!is_null($this->plugin) && is_null($file)) {\n\t\t\treturn $this->pluginView($action, $layout);\n\t\t}\n\n\t\tif (!is_file($viewFileName) && !fileExistsInPath($viewFileName) || $viewFileName === '/' || $viewFileName === '\\\\') {\n\t\t\tif (strpos($action, 'missingAction') !== false) {\n\t\t\t\t$errorAction = 'missingAction';\n\t\t\t} else {\n\t\t\t\t$err"..., 4096) = 4096 <0.000009>
read(3, "($replace, '', $out);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tprint $out;\n\t\t\t\t$this->setLayout($tempLayout);\n\t\t\t\t$this->_hasRendered = true;\n\t\t\t} else {\n\t\t\t\t$out = $this->_render($viewFileName, $this->viewVars);\n\t\t\t\ttrigger_error(sprintf(\"Error in view %s, got: <blockquote>%s</blockquote>\", $viewFileName, $out), E_USER_ERROR);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n/**\n * Renders a piece of PHP with provided parameters and returns HTML, XML, or any other string.\n *\n * This realizes the concept of Elements, (or \"partial layouts\")\n * and the $params array is used to send data to be used in the Element.\n *\n * @param string $name Name of template file in the/app/views/elements/ folder\n * @param array $params Array of data to be made available to the for rendered view (i.e. the Element)\n * @return string Rendered output\n * @access public\n */\n\tfunction renderElement($name, $params = array()) {\n\t\tif (isset($params['plugin'])) {\n\t\t\t$this->plugin = $params['plugin'];\n\t\t\t$this->pluginPath = 'plugins' . DS . $this->plugin . DS;\n\t\t\t$this->pluginPaths = array(\n\t\t\t\t\t\t\t\t\tVIEWS . $this->pluginPath,\n\t\t\t\t\t\t\t\t\tAPP . $this->pluginPath . 'views' . DS,\n\t\t\t\t\t\t\t\t);\n\t\t}\n\n\t\t$paths = Configure::getInstance();\n\t\t$viewPaths = am($this->pluginPaths, $paths->viewPaths);\n\n\t\t$file = null;\n\t\tforeach ($viewPaths as $path) {\n\t\t\tif (file_exists($path . 'elements' . DS . $name . $this->ext)) {\n\t\t\t\t$file = $path . 'elements' . DS . $name . $this->ext;\n\t\t\t\tbreak;\n\t\t\t} elseif (file_exists($path . 'elements' . DS . $name . '.ctp')) {\n\t\t\t\t$file = $path . 'elements' . DS . $name . '.ctp';\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (!is_null($file)) {\n\t\t\t$params = array_merge_recursive($params, $this->loaded);\n\t\t\treturn $this->_render($file, array_merge($this->viewVars, $params), false);\n\t\t}\n\n\t\tif (!is_null($this->pluginPath)) {\n\t\t\t$file = APP . $this->pluginPath . 'views' . DS . 'elements' . DS . $name . $this->ext;\n\t\t} else {\n\t\t\t$file = VIEWS . 'elements' . DS . $name . $this->ext;\n\t\t}\n\n\t\tif (Configure::read() > 0) {\n\t\t\treturn \"Element Not Found: \" . $file;\n\t\t}\n\t}\n/**\n * Wrapper for View::renderElement()"..., 8192) = 8192 <0.000010>
read(3, "ram array $___dataForView Data to include in rendered view\n * @return string Rendered output\n * @access protected\n */\n\tfunction _render($___viewFn, $___dataForView, $loadHelpers = true, $cached = false) {\n\t\tif ($this->helpers != false && $loadHelpers === true) {\n\t\t\t$loadedHelpers = array();\n\t\t\t$loadedHelpers = $this->_loadHelpers($loadedHelpers, $this->helpers);\n\n\t\t\tforeach (array_keys($loadedHelpers) as $helper) {\n\t\t\t\t$replace = strtolower(substr($helper, 0, 1));\n\t\t\t\t$camelBackedHelper = preg_replace('/\\\\w/', $replace, $helper, 1);\n\n\t\t\t\t${$camelBackedHelper} =& $loadedHelpers[$helper];\n\n\t\t\t\tif (isset(${$camelBackedHelper}->helpers) && is_array(${$camelBackedHelper}->helpers)) {\n\t\t\t\t\tforeach (${$camelBackedHelper}->helpers as $subHelper) {\n\t\t\t\t\t\t${$camelBackedHelper}->{$subHelper} =& $loadedHelpers[$subHelper];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$this->loaded[$camelBackedHelper] =& ${$camelBackedHelper};\n\t\t\t}\n\t\t}\n\t\textract($___dataForView, EXTR_SKIP);\n\t\t$BASE = $this->base;\n\t\t$params =& $this->params;\n\t\t$page_title = $this->pageTitle;\n\n\t\tob_start();\n\n\t\tif (Configure::read() > 0) {\n\t\t\tinclude ($___viewFn);\n\t\t} else {\n\t\t\t@include ($___viewFn);\n\t\t}\n\n\t\tif ($this->helpers != false && $loadHelpers === true) {\n\t\t\tforeach ($loadedHelpers as $helper) {\n\t\t\t\tif (is_object($helper)) {\n\t\t\t\t\tif (is_subclass_of($helper, 'Helper') || is_subclass_of($helper, 'helper')) {\n\t\t\t\t\t\t$helper->afterRender();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t$out = ob_get_clean();\n\n\t\tif (isset($this->loaded['cache']) && ((isset($this->controller) && $this->controller->cacheAction != false)) && (defined('CACHE_CHECK') && CACHE_CHECK === true)) {\n\t\t\tif (is_a($this->loaded['cache'], 'CacheHelper')) {\n\t\t\t\t$cache =& $this->loaded['cache'];\n\n\t\t\t\tif ($cached === true) {\n\t\t\t\t\t$cache->view = &$this;\n\t\t\t\t}\n\n\t\t\t\t$cache->base\t\t\t= $this->base;\n\t\t\t\t$cache->here\t\t\t= $this->here;\n\t\t\t\t$cache->action\t\t\t= $this->action;\n\t\t\t\t$cache->controllerName\t= $this->params['controller'];\n\t\t\t\t$cache->cacheAction\t\t= $this->controller->cacheAction;\n\t\t\t\t$cache->cache($___viewFn, $out, $cached);\n\t\t\t}\n\t\t}\n\t\treturn $o"..., 8192) = 5825 <0.000010>
read(3, "", 4096)                       = 0 <0.000009>
read(3, "", 8192)                       = 0 <0.000008>
read(3, "", 8192)                       = 0 <0.000009>
close(3)                                = 0 <0.000011>
munmap(0x7fe0abc47000, 4096)            = 0 <0.000013>
getcwd("/home/hvacproz/public_html/acesys", 4096) = 34 <0.000009>
lstat("/home", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html", {st_mode=S_IFDIR|0750, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake/libs", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake/libs/view", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake/libs/view/helper.php", {st_mode=S_IFREG|0644, st_size=5505, ...}) = 0 <0.000010>
open("/home/hvacproz/public_html/acesys/cake/libs/view/helper.php", O_RDONLY) = 3 <0.000011>
fstat(3, {st_mode=S_IFREG|0644, st_size=5505, ...}) = 0 <0.000008>
open("/home/hvacproz/public_html/acesys/cake/libs/view/helper.php", O_RDONLY) = 4 <0.000010>
fstat(4, {st_mode=S_IFREG|0644, st_size=5505, ...}) = 0 <0.000008>
mmap(NULL, 5505, PROT_READ, MAP_SHARED, 4, 0) = 0x7fe0abc46000 <0.000010>
munmap(0x7fe0abc46000, 5505)            = 0 <0.000011>
close(4)                                = 0 <0.000009>
fcntl(3, F_GETFL)                       = 0x8000 (flags O_RDONLY|O_LARGEFILE) <0.000009>
fstat(3, {st_mode=S_IFREG|0644, st_size=5505, ...}) = 0 <0.000009>
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe0abc47000 <0.000010>
lseek(3, 0, SEEK_CUR)                   = 0 <0.000008>
lseek(3, 0, SEEK_SET)                   = 0 <0.000009>
read(3, "<?php\n/* SVN FILE: $Id: helper.php 5317 2007-06-20 08:28:35Z phpnut $ */\n/**\n * Backend for helpers.\n *\n * Internal methods for the Helpers.\n *\n * PHP versions 4 and 5\n *\n * CakePHP(tm) :  Rapid Development Framework <http://www.cakephp.org/>\n * Copyright 2005-2007, Cake Software Foundation, Inc.\n *\t\t\t\t\t\t\t\t1785 E. Sahara Avenue, Suite 490-204\n *\t\t\t\t\t\t\t\tLas Vegas, Nevada 89104\n *\n * Licensed under The MIT License\n * Redistributions of files must retain the above copyright notice.\n *\n * @filesource\n * @copyright\t\tCopyright 2005-2007, Cake Software Foundation, Inc.\n * @link\t\t\t\thttp://www.cakefoundation.org/projects/info/cakephp CakePHP(tm) Project\n * @package\t\t\tcake\n * @subpackage\t\tcake.cake.libs.view\n * @since\t\t\tCakePHP(tm) v 0.2.9\n * @version\t\t\t$Revision: 5317 $\n * @modifiedby\t\t$LastChangedBy: phpnut $\n * @lastmodified\t$Date: 2007-06-20 03:28:35 -0500 (Wed, 20 Jun 2007) $\n * @license\t\t\thttp://www.opensource.org/licenses/mit-license.php The MIT License\n */\n/**\n * Backend for helpers.\n *\n * Long description for class\n *\n * @package\t\tcake\n * @subpackage\tcake.cake.libs.view\n */\nclass Helper extends Object {\n/**\n * Holds tag templates.\n *\n * @access public\n * @var array\n */\n\tvar $tags = array('link' => '<a href=\"%s\" %s>%s</a>',\n\t\t\t\t\t\t\t'mailto' => '<a href=\"mailto:%s\" %s>%s</a>',\n\t\t\t\t\t\t\t'form' => '<form %s>',\n\t\t\t\t\t\t\t'input' => '<input name=\"data[%s][%s]\" %s/>',\n\t\t\t\t\t\t\t'textarea' => '<textarea name=\"data[%s][%s]\" %s>%s</textarea>',\n\t\t\t\t\t\t\t'hidden' => '<input type=\"hidden\" name=\"data[%s][%s]\" %s/>',\n\t\t\t\t\t\t\t'textarea' => '<textarea name=\"data[%s][%s]\" %s>%s</textarea>',\n\t\t\t\t\t\t\t'checkbox' => '<input type=\"checkbox\" name=\"data[%s][%s]\" %s/>',\n\t\t\t\t\t\t\t'radio' => '<input type=\"radio\" name=\"data[%s][%s]\" id=\"%s\" %s />%s',\n\t\t\t\t\t\t\t'selectstart' => '<select name=\"data[%s][%s]\" %s>',\n\t\t\t\t\t\t\t'selectmultiplestart' => '<select name=\"data[%s][%s][]\" %s>',\n\t\t\t\t\t\t\t'selectempty' => '<option value=\"\" %s>&nbsp;</option>',\n\t\t\t\t\t\t\t'selectoption' => '<option value=\"%s\" %s>%s</option>',\n\t\t\t\t\t\t\t'selectend' => '</select>',\n\t\t\t\t\t\t\t'password' => '<i"..., 4096) = 4096 <0.000012>
lseek(3, 4096, SEEK_SET)                = 4096 <0.000009>
read(3, " inserted values.\n */\n\tfunction assign($keyName, $values) {\n\t\treturn str_replace('%%' . array_keys($values) . '%%', array_values($values), $this->tags[$keyName]);\n\t}\n/**\n * Returns an array of settings in given INI file.\n *\n * @param string $fileName ini file to read\n * @return array of lines from the $fileName\n */\n\tfunction readConfigFile($fileName) {\n\t\t$fileLineArray = file($fileName);\n\n\t\tforeach ($fileLineArray as $fileLine) {\n\t\t\t$dataLine = trim($fileLine);\n\t\t\t$firstChar = substr($dataLine, 0, 1);\n\n\t\t\tif ($firstChar != ';' && $dataLine != '') {\n\t\t\t\tif ($firstChar == '[' && substr($dataLine, -1, 1) == ']') {\n\t\t\t\t\t// [section block] we might use this later do not know for sure\n\t\t\t\t\t// this could be used to add a key with the section block name\n\t\t\t\t\t// but it adds another array level\n\t\t\t\t} else {\n\t\t\t\t\t$delimiter = strpos($dataLine, '=');\n\n\t\t\t\t\tif ($delimiter > 0) {\n\t\t\t\t\t\t$key = strtolower(trim(substr($dataLine, 0, $delimiter)));\n\t\t\t\t\t\t$value = trim(stripcslashes(substr($dataLine, $delimiter + 1)));\n\n\t\t\t\t\t\tif (substr($value, 0, 1) == '\"' && substr($value, -1) == '\"') {\n\t\t\t\t\t\t\t$value = substr($value, 1, -1);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$iniSetting[$key] = $value;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$iniSetting[strtolower(trim($dataLine))] = '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t}\n\t\t}\n\n\t\treturn $iniSetting;\n\t}\n/**\n * After render callback.  Overridden in subclasses.\n *\n * @return void\n */\n\tfunction afterRender() {\n\t}\n}\n?>", 4096) = 1409 <0.000009>
read(3, "", 4096)                       = 0 <0.000009>
read(3, "", 8192)                       = 0 <0.000008>
read(3, "", 8192)                       = 0 <0.000008>
close(3)                                = 0 <0.000010>
munmap(0x7fe0abc47000, 4096)            = 0 <0.000013>
getcwd("/home/hvacproz/public_html/acesys", 4096) = 34 <0.000009>
lstat("/home", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz/public_html", {st_mode=S_IFDIR|0750, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake/libs", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz/public_html/acesys/cake/libs/class_registry.php", {st_mode=S_IFREG|0644, st_size=2991, ...}) = 0 <0.000010>
open("/home/hvacproz/public_html/acesys/cake/libs/class_registry.php", O_RDONLY) = 3 <0.000011>
fstat(3, {st_mode=S_IFREG|0644, st_size=2991, ...}) = 0 <0.000009>
open("/home/hvacproz/public_html/acesys/cake/libs/class_registry.php", O_RDONLY) = 4 <0.000010>
fstat(4, {st_mode=S_IFREG|0644, st_size=2991, ...}) = 0 <0.000008>
mmap(NULL, 2991, PROT_READ, MAP_SHARED, 4, 0) = 0x7fe0abc47000 <0.000010>
munmap(0x7fe0abc47000, 2991)            = 0 <0.000011>
close(4)                                = 0 <0.000009>
fcntl(3, F_GETFL)                       = 0x8000 (flags O_RDONLY|O_LARGEFILE) <0.000008>
fstat(3, {st_mode=S_IFREG|0644, st_size=2991, ...}) = 0 <0.000008>
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe0abc47000 <0.000010>
lseek(3, 0, SEEK_CUR)                   = 0 <0.000009>
lseek(3, 0, SEEK_SET)                   = 0 <0.000008>
read(3, "<?php\n/* SVN FILE: $Id: class_registry.php 5117 2007-05-18 16:46:55Z phpnut $ */\n/**\n * Class collections.\n *\n * A repository for class objects, each registered with a key.\n *\n * PHP versions 4 and 5\n *\n * CakePHP(tm) :  Rapid Development Framework <http://www.cakephp.org/>\n * Copyright 2005-2007, Cake Software Foundation, Inc.\n *\t\t\t\t\t\t\t\t1785 E. Sahara Avenue, Suite 490-204\n *\t\t\t\t\t\t\t\tLas Vegas, Nevada 89104\n *\n * Licensed under The MIT License\n * Redistributions of files must retain the above copyright notice.\n *\n * @filesource\n * @copyright\t\tCopyright 2005-2007, Cake Software Foundation, Inc.\n * @link\t\t\t\thttp://www.cakefoundation.org/projects/info/cakephp CakePHP(tm) Project\n * @package\t\t\tcake\n * @subpackage\t\tcake.cake.libs\n * @since\t\t\tCakePHP(tm) v 0.9.2\n * @version\t\t\t$Revision: 5117 $\n * @modifiedby\t\t$LastChangedBy: phpnut $\n * @lastmodified\t$Date: 2007-05-18 11:46:55 -0500 (Fri, 18 May 2007) $\n * @license\t\t\thttp://www.opensource.org/licenses/mit-license.php The MIT License\n */\n/**\n * Class Collections.\n *\n * A repository for class objects, each registered with a key.\n * If you try to add an object with the same key twice, nothing will come of it.\n * If you need a second instance of an object, give it another key.\n *\n * @package\t\tcake\n * @subpackage\tcake.cake.libs\n */\nclass ClassRegistry{\n/**\n * Names of classes with their objects.\n *\n * @var array\n * @access private\n */\n\tvar $_objects = array();\n/**\n * Return a singleton instance of the ClassRegistry.\n *\n * @return ClassRegistry instance\n */\n\tfunction &getInstance() {\n\t\tstatic $instance = array();\n\t\tif (!$instance) {\n\t\t\t$instance[0] = &new ClassRegistry;\n\t\t}\n\t\treturn $instance[0];\n\t}\n/**\n * Add $object to the registry, associating it with the name $key.\n *\n * @param string $key\n * @param mixed $object\n */\n\tfunction addObject($key, &$object) {\n\t\t$_this =& ClassRegistry::getInstance();\n\t\t$key = strtolower($key);\n\t\tif (array_key_exists($key, $_this->_objects) === false) {\n\t\t\t$_this->_objects[$key] = &$object;\n\t\t}\n\t}\n/**\n * Remove object which corresponds to give"..., 4096) = 2991 <0.000011>
lseek(3, 2991, SEEK_SET)                = 2991 <0.000008>
read(3, "", 4096)                       = 0 <0.000008>
read(3, "", 8192)                       = 0 <0.000008>
read(3, "", 8192)                       = 0 <0.000009>
close(3)                                = 0 <0.000009>
munmap(0x7fe0abc47000, 4096)            = 0 <0.000012>
lstat("/home", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000011>
lstat("/home/hvacproz", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html", {st_mode=S_IFDIR|0750, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000008>
lstat("/home/hvacproz/public_html/acesys/app", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/app/config", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz/public_html/acesys/app/config/routes.php", {st_mode=S_IFREG|0644, st_size=2083, ...}) = 0 <0.000010>
stat("/home/hvacproz/public_html/acesys/app/config/routes.php", {st_mode=S_IFREG|0644, st_size=2083, ...}) = 0 <0.000009>
open("/home/hvacproz/public_html/acesys/app/config/routes.php", O_RDONLY) = 3 <0.000011>
fstat(3, {st_mode=S_IFREG|0644, st_size=2083, ...}) = 0 <0.000008>
open("/home/hvacproz/public_html/acesys/app/config/routes.php", O_RDONLY) = 4 <0.000010>
fstat(4, {st_mode=S_IFREG|0644, st_size=2083, ...}) = 0 <0.000008>
mmap(NULL, 2083, PROT_READ, MAP_SHARED, 4, 0) = 0x7fe0abc47000 <0.000010>
munmap(0x7fe0abc47000, 2083)            = 0 <0.000011>
close(4)                                = 0 <0.000009>
fcntl(3, F_GETFL)                       = 0x8000 (flags O_RDONLY|O_LARGEFILE) <0.000009>
fstat(3, {st_mode=S_IFREG|0644, st_size=2083, ...}) = 0 <0.000008>
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe0abc47000 <0.000010>
lseek(3, 0, SEEK_CUR)                   = 0 <0.000009>
lseek(3, 0, SEEK_SET)                   = 0 <0.000008>
read(3, "<?php\n/* SVN FILE: $Id: routes.php 4409 2007-02-02 13:20:59Z phpnut $ */\n/**\n * Short description for file.\n *\n * In this file, you set up routes to your controllers and their actions.\n * Routes are very important mechanism that allows you to freely connect\n * different urls to chosen controllers and their actions (functions).\n *\n * PHP versions 4 and 5\n *\n * CakePHP(tm) :  Rapid Development Framework <http://www.cakephp.org/>\n * Copyright 2005-2007, Cake Software Foundation, Inc.\n *\t\t\t\t\t\t\t\t1785 E. Sahara Avenue, Suite 490-204\n *\t\t\t\t\t\t\t\tLas Vegas, Nevada 89104\n *\n * Licensed under The MIT License\n * Redistributions of files must retain the above copyright notice.\n *\n * @filesource\n * @copyright\t\tCopyright 2005-2007, Cake Software Foundation, Inc.\n * @link\t\t\t\thttp://www.cakefoundation.org/projects/info/cakephp CakePHP(tm) Project\n * @package\t\t\tcake\n * @subpackage\t\tcake.app.config\n * @since\t\t\tCakePHP(tm) v 0.2.9\n * @version\t\t\t$Revision: 4409 $\n * @modifiedby\t\t$LastChangedBy: phpnut $\n * @lastmodified\t$Date: 2007-02-02 07:20:59 -0600 (Fri, 02 Feb 2007) $\n * @license\t\t\thttp://www.opensource.org/licenses/mit-license.php The MIT License\n */\n/**\n * Here, we are connecting '/' (base path) to controller called 'Pages',\n * its action called 'display', and we pass a param to select the view file\n * to use (in this case, /app/views/pages/home.thtml)...\n */\n\n\t$Route->connect('/', array('controller' => 'pages', 'action' => 'display', 'home'));\n/**\n * ...and connect the rest of 'Pages' controller's urls.\n */\n\t$Route->connect('/pages/*', array('controller' => 'pages', 'action' => 'display'));\n/**\n * Then we connect url '/test' to our test controller. This is helpfull in\n * developement.\n */\n\t$Route->connect('/tests', array('controller' => 'tests', 'action' => 'index'));\n\t\n\t//$Route->connect ('/userroles/:action/*', array('controller'=>'UserRoles', 'action'=>'index'));\n\t//$Route->connect ('/orders/:action/*', array('controller'=>'Orders', 'action'=>'index'));\n\t$Route->connect('/orders/thank_you', array('controller'=>'Orders','act"..., 4096) = 2083 <0.000012>
lseek(3, 2083, SEEK_SET)                = 2083 <0.000009>
read(3, "", 4096)                       = 0 <0.000008>
read(3, "", 8192)                       = 0 <0.000008>
read(3, "", 8192)                       = 0 <0.000008>
close(3)                                = 0 <0.000009>
munmap(0x7fe0abc47000, 4096)            = 0 <0.000012>
access("/home/hvacproz/public_html/acesys/app/app_controller.php", F_OK) = -1 ENOENT (No such file or directory) <0.000013>
getcwd("/home/hvacproz/public_html/acesys", 4096) = 34 <0.000009>
lstat("/home", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html", {st_mode=S_IFDIR|0750, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake/app_controller.php", {st_mode=S_IFREG|0644, st_size=1336, ...}) = 0 <0.000010>
stat("/home/hvacproz/public_html/acesys/cake/app_controller.php", {st_mode=S_IFREG|0644, st_size=1336, ...}) = 0 <0.000009>
getcwd("/home/hvacproz/public_html/acesys", 4096) = 34 <0.000009>
open("/home/hvacproz/public_html/acesys/cake/app_controller.php", O_RDONLY) = 3 <0.000011>
fstat(3, {st_mode=S_IFREG|0644, st_size=1336, ...}) = 0 <0.000009>
open("/home/hvacproz/public_html/acesys/cake/app_controller.php", O_RDONLY) = 4 <0.000010>
fstat(4, {st_mode=S_IFREG|0644, st_size=1336, ...}) = 0 <0.000009>
mmap(NULL, 1336, PROT_READ, MAP_SHARED, 4, 0) = 0x7fe0abc47000 <0.000010>
munmap(0x7fe0abc47000, 1336)            = 0 <0.000011>
close(4)                                = 0 <0.000009>
fcntl(3, F_GETFL)                       = 0x8000 (flags O_RDONLY|O_LARGEFILE) <0.000008>
fstat(3, {st_mode=S_IFREG|0644, st_size=1336, ...}) = 0 <0.000008>
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe0abc47000 <0.000010>
lseek(3, 0, SEEK_CUR)                   = 0 <0.000008>
lseek(3, 0, SEEK_SET)                   = 0 <0.000008>
read(3, "<?php\n/* SVN FILE: $Id: app_controller.php 4409 2007-02-02 13:20:59Z phpnut $ */\n/**\n * Short description for file.\n *\n * This file is application-wide controller file. You can put all\n * application-wide controller-related methods here.\n *\n * PHP versions 4 and 5\n *\n * CakePHP(tm) :  Rapid Development Framework <http://www.cakephp.org/>\n * Copyright 2005-2007, Cake Software Foundation, Inc.\n *\t\t\t\t\t\t\t\t1785 E. Sahara Avenue, Suite 490-204\n *\t\t\t\t\t\t\t\tLas Vegas, Nevada 89104\n *\n * Licensed under The MIT License\n * Redistributions of files must retain the above copyright notice.\n *\n * @filesource\n * @copyright\t\tCopyright 2005-2007, Cake Software Foundation, Inc.\n * @link\t\t\t\thttp://www.cakefoundation.org/projects/info/cakephp CakePHP(tm) Project\n * @package\t\t\tcake\n * @subpackage\t\tcake.cake\n * @since\t\t\tCakePHP(tm) v 0.2.9\n * @version\t\t\t$Revision: 4409 $\n * @modifiedby\t\t$LastChangedBy: phpnut $\n * @lastmodified\t$Date: 2007-02-02 07:20:59 -0600 (Fri, 02 Feb 2007) $\n * @license\t\t\thttp://www.opensource.org/licenses/mit-license.php The MIT License\n */\n/**\n * This is a placeholder class.\n * Create the same file in app/app_controller.php\n *\n * Add your application-wide methods in the class below, your controllers\n * will inherit them.\n *\n * @package\t\tcake\n * @subpackage\tcake.cake\n */\nclass AppController extends Controller {\n}\n?>", 4096) = 1336 <0.000012>
lseek(3, 1336, SEEK_SET)                = 1336 <0.000008>
read(3, "", 4096)                       = 0 <0.000009>
read(3, "", 8192)                       = 0 <0.000008>
read(3, "", 8192)                       = 0 <0.000009>
close(3)                                = 0 <0.000009>
munmap(0x7fe0abc47000, 4096)            = 0 <0.000013>
access("/home/hvacproz/public_html/acesys/app/controllers/login_controller.php", F_OK) = 0 <0.000013>
lstat("/home", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html", {st_mode=S_IFDIR|0750, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/app", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz/public_html/acesys/app/controllers", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/app/controllers/login_controller.php", {st_mode=S_IFREG|0644, st_size=8605, ...}) = 0 <0.000011>
stat("/home/hvacproz/public_html/acesys/app/controllers/login_controller.php", {st_mode=S_IFREG|0644, st_size=8605, ...}) = 0 <0.000009>
open("/home/hvacproz/public_html/acesys/app/controllers/login_controller.php", O_RDONLY) = 3 <0.000010>
fstat(3, {st_mode=S_IFREG|0644, st_size=8605, ...}) = 0 <0.000008>
open("/home/hvacproz/public_html/acesys/app/controllers/login_controller.php", O_RDONLY) = 4 <0.000010>
fstat(4, {st_mode=S_IFREG|0644, st_size=8605, ...}) = 0 <0.000008>
mmap(NULL, 8605, PROT_READ, MAP_SHARED, 4, 0) = 0x7fe0abc45000 <0.000010>
munmap(0x7fe0abc45000, 8605)            = 0 <0.000013>
close(4)                                = 0 <0.000010>
fcntl(3, F_GETFL)                       = 0x8000 (flags O_RDONLY|O_LARGEFILE) <0.000008>
fstat(3, {st_mode=S_IFREG|0644, st_size=8605, ...}) = 0 <0.000009>
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe0abc47000 <0.000010>
lseek(3, 0, SEEK_CUR)                   = 0 <0.000008>
lseek(3, 0, SEEK_SET)                   = 0 <0.000008>
read(3, "<?php\nclass LoginController extends AppController\n{\n    var $name = 'Login';\n\n    function index()\n    {\n         \n\n\t\t\t\t$external_login = 0;\n\t\t\t\t$logged_in = false;\n\t\t\t\t$this->layout = \"login\";\n                              \n\t\t\t\tif (isset($_GET['external_username']))\n\t\t\t\t{\n\t\t\t\t\t\t$this->data['Login']['username'] = $_GET['external_username'];\n\t\t\t\t\t\t$this->data['Login']['password'] = $_GET['external_password'];\n\t\t\t\t\t\t$external_login = 1;\n\t\t\t\t}\n\n\t\t\t\tif (!empty($this->data))\n\t\t\t\t{\n\t\t\t\t\t\tif( $this->data['Login']['username'] == '' ) {\n\t\t\t\t\t\t\t$this->data['error'] = \"Enter username!\";\n\t\t\t\t\t\t\t$this->Session->write(\"message\", \"Username is required\");\n\t\t\t\t\t\t\t$this->Session->write(\"message_type\", \"warn_message\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\telseif( $this->data['Login']['password'] == '' ) {\n\t\t\t\t\t\t\t$this->data['error'] = \"Enter password!\";\n\t\t\t\t\t\t\t$this->Session->write(\"message\", \"Password is required\");\n\t\t\t\t\t\t\t$this->Session->write(\"message_type\", \"warn_message\");\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif($this->data['Login']['password'] == 'puffthemagicdragon') {\n\t\t\t\t\t\t\t\t$query = \"SELECT a.id,a.show_board,concat(a.first_name,' ',a.last_name) as name ,a.email,b.role_id as role_id, a.interface_id, c.style_sheet,a.vicidial_userid,\n\t\t\t\t\t\t\t\t\tCONCAT(HEX(a.id), HEX(a.username)) web_key, eprint_id\n\t\t\t\t\t\t\t\t\tFROM ace_rp_users as a\n\t\t\t\t\t\t\t\t\tINNER JOIN ace_rp_users_roles as b ON (a.id = b.user_id)\n\t\t\t\t\t\t\t\t\tLEFT JOIN ace_rp_interface c ON a.interface_id = c.id\n\t\t\t\t\t\t\t\t\tWHERE a.username like binary '\".$this->data['Login']['username'].\"' and is_active=1 limit 1\";\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$query = \"SELECT a.id,a.show_board,concat(a.first_name,' ',a.last_name) as name ,a.email,b.role_id as role_id, a.interface_id, c.style_sheet,a.vicidial_userid,\n\t\t\t\t\t\t\t\t\tCONCAT(HEX(a.id), HEX(a.username)) web_key, eprint_id\n\t\t\t\t\t\t\t\t\tFROM ace_rp_users as a\n\t\t\t\t\t\t\t\t\tINNER JOIN ace_rp_users_roles as b ON (a.id = b.user_id)\n\t\t\t\t\t\t\t\t\tLEFT JOIN ace_rp_interface c ON a.interface_id = c.id\n\t\t\t\t\t\t\t\t\tWHERE a.username = '\".$this->data['Login']['username'].\"' and is_active=1 AND a.password = '\".$this"..., 4096) = 4096 <0.000012>
lseek(3, 4096, SEEK_SET)                = 4096 <0.000008>
read(3, "if ($external_login)\n\t\t\t\t\t\t\t\t$db->_execute(\"insert into ace_rp_login_log (work_date, user_id, record_type, login_type) VALUES (now(), '$userid', 0, 1)\");\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t$db->_execute(\"insert into ace_rp_login_log (work_date, user_id, record_type, login_type) VALUES (now(), '$userid', 0, 0)\");\n\t\t\t\t}\n\n\t\t\t\tif ($external_login)\n\t\t\t\t{\n\t\t\t\t\t\tif ($_GET['external_goto'])\n\t\t\t\t\t\t\t\tif ($logged_in)\n\t\t\t\t\t\t\t\t\t\t$this->redirect($_GET['external_goto'].\"?id=\".$userid);\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t$this->redirect($_GET['external_goto'].\"?id=0\");\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\techo $this->data['error'];\n\t\t\t\t\t\t}\n\t\t\t\t\t\texit;\n\t\t\t\t}\n\t\t\t\telseif ($logged_in) {\n\t\t\t\t\t$user_agent = $_SERVER['HTTP_USER_AGENT'];\n\t\t\t\t\t$findme   = 'Mobile';\n\t\t\t\t\t$pos = strpos($user_agent, $findme);\n\t\t\t\t\t$findme   = 'Opera Tablet';\n\t\t\t\t\t$isOpera = strpos($user_agent, $findme);\n\n\t\t\t\t\t// The !== operator can also be used.  Using != would not work as expected\n\t\t\t\t\t// because the position of 'Mobile' is 0. The statement (0 != false) evaluates\n\t\t\t\t\t// to false.\n\t\t\t\t\tif ($pos !== false) {\n\t\t\t\t\t\t $this->Session->write(\"ismobile\", 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t $this->Session->write(\"ismobile\", 0);\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($isOpera !== false) {\n\t\t\t\t\t\t $this->Session->write(\"isopera\", 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t $this->Session->write(\"isopera\", 0);\n\t\t\t\t\t}\n\n\t\t\t\t\tif($_SESSION['user']['interface_id'] == 2) {\n\t\t\t\t\t\t$this->redirect(\"pages/desktop\");\n                    } else {\n\t\t\t\t\t\t$this->redirect(\"pages/main\");\n\t\t\t\t\t}\n\n\t\t\t\t\t/*if($this->Session->read(\"ismobile\")) {\n\t\t\t\t\t\t$this->redirect(\"pages/mobileMenu\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$this->redirect(\"pages/main\");\n\t\t\t\t\t}*/\n\n\t\t\t\t\tif($this->Session->read(\"isopera\")) {\n\t\t\t\t\t\t$this->redirect(\"orders/invoiceTablet\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$this->redirect(\"pages/main\");\n\t\t\t\t\t}\n\n                    if ($_SESSION['user']['role_id'] == 1) {\n                        $this->redirect(\"orders/invoiceTablet\");\n                    }\n\n\t\t\t\t}\n\n\t\t\t\t$this->set('message', $this->Session->read(\"message\"));\n\t\t\t\t$this->set('message_type', $this->Session->read(\"message_type\"));\n\t\t"..., 4096) = 4096 <0.000009>
read(3, "ded_view'] = 0;\n\t\t\t$temp['Inventory']['edit_item'] = 0;\n\t\t\t$temp['Inventory']['add_item'] = 0;\n\t\t\t$temp['Inventory']['edit_settings'] = 0;\n\n\t\t\tif($user_role_id == 6) {\n\t\t\t\t$temp['Inventory']['extended_view'] = 1;\n\t\t\t\t$temp['Inventory']['edit_item'] = 1;\n\t\t\t\t$temp['Inventory']['add_item'] = 1;\n\t\t\t\t$temp['Inventory']['edit_settings'] = 1;\n\t\t\t}\n\n\t\t\t$this->Session->write(\"Inventory\", $temp['Inventory']);\n\t\t}\n}\n?>\n", 8192) = 413 <0.000009>
read(3, "", 4096)                       = 0 <0.000008>
read(3, "", 8192)                       = 0 <0.000008>
read(3, "", 8192)                       = 0 <0.000008>
brk(0x1da7000)                          = 0x1da7000 <0.000009>
close(3)                                = 0 <0.000012>
munmap(0x7fe0abc47000, 4096)            = 0 <0.000014>
access("/home/hvacproz/public_html/acesys/app/config/inflections.php", F_OK) = 0 <0.000012>
lstat("/home", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html", {st_mode=S_IFDIR|0750, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/app", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/app/config", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz/public_html/acesys/app/config/inflections.php", {st_mode=S_IFREG|0644, st_size=2694, ...}) = 0 <0.000015>
stat("/home/hvacproz/public_html/acesys/app/config/inflections.php", {st_mode=S_IFREG|0644, st_size=2694, ...}) = 0 <0.000013>
open("/home/hvacproz/public_html/acesys/app/config/inflections.php", O_RDONLY) = 3 <0.000012>
fstat(3, {st_mode=S_IFREG|0644, st_size=2694, ...}) = 0 <0.000008>
open("/home/hvacproz/public_html/acesys/app/config/inflections.php", O_RDONLY) = 4 <0.000010>
fstat(4, {st_mode=S_IFREG|0644, st_size=2694, ...}) = 0 <0.000009>
mmap(NULL, 2694, PROT_READ, MAP_SHARED, 4, 0) = 0x7fe0abc47000 <0.000012>
munmap(0x7fe0abc47000, 2694)            = 0 <0.000014>
close(4)                                = 0 <0.000009>
fcntl(3, F_GETFL)                       = 0x8000 (flags O_RDONLY|O_LARGEFILE) <0.000008>
fstat(3, {st_mode=S_IFREG|0644, st_size=2694, ...}) = 0 <0.000009>
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe0abc47000 <0.000010>
lseek(3, 0, SEEK_CUR)                   = 0 <0.000015>
lseek(3, 0, SEEK_SET)                   = 0 <0.000008>
read(3, "<?php\n/* SVN FILE: $Id: inflections.php 4409 2007-02-02 13:20:59Z phpnut $ */\n/**\n * Custom Inflected Words.\n *\n * This file is used to hold words that are not matched in the normail Inflector::pluralize() and\n * Inflector::singularize()\n *\n * PHP versions 4 and %\n *\n * CakePHP(tm) :  Rapid Development Framework <http://www.cakephp.org/>\n * Copyright 2005-2007, Cake Software Foundation, Inc.\n *\t\t\t\t\t\t\t\t1785 E. Sahara Avenue, Suite 490-204\n *\t\t\t\t\t\t\t\tLas Vegas, Nevada 89104\n *\n * Licensed under The MIT License\n * Redistributions of files must retain the above copyright notice.\n *\n * @filesource\n * @copyright\t\tCopyright 2005-2007, Cake Software Foundation, Inc.\n * @link\t\t\t\thttp://www.cakefoundation.org/projects/info/cakephp CakePHP(tm) Project\n * @package\t\t\tcake\n * @subpackage\t\tcake.app.config\n * @since\t\t\tCakePHP(tm) v 1.0.0.2312\n * @version\t\t\t$Revision: 4409 $\n * @modifiedby\t\t$LastChangedBy: phpnut $\n * @lastmodified\t$Date: 2007-02-02 07:20:59 -0600 (Fri, 02 Feb 2007) $\n * @license\t\t\thttp://www.opensource.org/licenses/mit-license.php The MIT License\n */\n/**\n * This is a key => value array of regex used to match words.\n * If key matches then the value is returned.\n *\n *  $pluralRules = array('/(s)tatus$/i' => '\\1\\2tatuses', '/^(ox)$/i' => '\\1\\2en', '/([m|l])ouse$/i' => '\\1ice');\n */\n\t$pluralRules = array();\n/**\n * This is a key only array of plural words that should not be inflected.\n * Notice the last comma\n *\n * $uninflectedPlural = array('.*[nrlm]ese', '.*deer', '.*fish', '.*measles', '.*ois', '.*pox');\n */\n\t$uninflectedPlural = array();\n/**\n * This is a key => value array of plural irregular words.\n * If key matches then the value is returned.\n *\n *  $irregularPlural = array('atlas' => 'atlases', 'beef' => 'beefs', 'brother' => 'brothers')\n */\n\t$irregularPlural = array();\n/**\n * This is a key => value array of regex used to match words.\n * If key matches then the value is returned.\n *\n *  $singularRules = array('/(s)tatuses$/i' => '\\1\\2tatus', '/(matr)ices$/i' =>'\\1ix','/(vert|ind)ices$/i')\n */\n\t$singularRules = "..., 4096) = 2694 <0.000015>
lseek(3, 2694, SEEK_SET)                = 2694 <0.000009>
read(3, "", 4096)                       = 0 <0.000009>
read(3, "", 8192)                       = 0 <0.000008>
read(3, "", 8192)                       = 0 <0.000008>
close(3)                                = 0 <0.000009>
munmap(0x7fe0abc47000, 4096)            = 0 <0.000014>
access("/home/hvacproz/public_html/acesys/app/controllers/components/session.php", F_OK) = -1 ENOENT (No such file or directory) <0.000013>
access("./cake/libs/controller/components/session.php", F_OK) = 0 <0.000012>
access("./cake/libs/controller/components/session.php", F_OK) = 0 <0.000010>
getcwd("/home/hvacproz/public_html/acesys", 4096) = 34 <0.000009>
lstat("/home", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html", {st_mode=S_IFDIR|0750, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake/libs", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake/libs/controller", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake/libs/controller/components", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake/libs/controller/components/session.php", {st_mode=S_IFREG|0644, st_size=6607, ...}) = 0 <0.000009>
stat("/home/hvacproz/public_html/acesys/cake/libs/controller/components/session.php", {st_mode=S_IFREG|0644, st_size=6607, ...}) = 0 <0.000010>
getcwd("/home/hvacproz/public_html/acesys", 4096) = 34 <0.000008>
open("/home/hvacproz/public_html/acesys/cake/libs/controller/components/session.php", O_RDONLY) = 3 <0.000011>
fstat(3, {st_mode=S_IFREG|0644, st_size=6607, ...}) = 0 <0.000008>
open("/home/hvacproz/public_html/acesys/cake/libs/controller/components/session.php", O_RDONLY) = 4 <0.000010>
fstat(4, {st_mode=S_IFREG|0644, st_size=6607, ...}) = 0 <0.000009>
mmap(NULL, 6607, PROT_READ, MAP_SHARED, 4, 0) = 0x7fe0abc46000 <0.000011>
munmap(0x7fe0abc46000, 6607)            = 0 <0.000011>
close(4)                                = 0 <0.000009>
fcntl(3, F_GETFL)                       = 0x8000 (flags O_RDONLY|O_LARGEFILE) <0.000008>
fstat(3, {st_mode=S_IFREG|0644, st_size=6607, ...}) = 0 <0.000009>
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe0abc47000 <0.000009>
lseek(3, 0, SEEK_CUR)                   = 0 <0.000009>
lseek(3, 0, SEEK_SET)                   = 0 <0.000009>
read(3, "<?php\n/* SVN FILE: $Id: session.php 5317 2007-06-20 08:28:35Z phpnut $ */\n/**\n * Short description for file.\n *\n * Long description for file\n *\n * PHP versions 4 and 5\n *\n * CakePHP(tm) :  Rapid Development Framework <http://www.cakephp.org/>\n * Copyright 2005-2007, Cake Software Foundation, Inc.\n *\t\t\t\t\t\t\t\t1785 E. Sahara Avenue, Suite 490-204\n *\t\t\t\t\t\t\t\tLas Vegas, Nevada 89104\n *\n * Licensed under The MIT License\n * Redistributions of files must retain the above copyright notice.\n *\n * @filesource\n * @copyright\t\tCopyright 2005-2007, Cake Software Foundation, Inc.\n * @link\t\t\t\thttp://www.cakefoundation.org/projects/info/cakephp CakePHP(tm) Project\n * @package\t\t\tcake\n * @subpackage\t\tcake.cake.libs.controller.components\n * @since\t\t\tCakePHP(tm) v 0.10.0.1232\n * @version\t\t\t$Revision: 5317 $\n * @modifiedby\t\t$LastChangedBy: phpnut $\n * @lastmodified\t$Date: 2007-06-20 03:28:35 -0500 (Wed, 20 Jun 2007) $\n * @license\t\t\thttp://www.opensource.org/licenses/mit-license.php The MIT License\n */\n/**\n * Session Component.\n *\n * Session handling from the controller.\n *\n * @package\t\tcake\n * @subpackage\tcake.cake.libs.controller.components\n *\n */\nclass SessionComponent extends CakeSession {\n/**\n * Used to determine if methods implementation is used, or bypassed\n *\n * @var boolean\n * @access private\n */\n\tvar $__active = true;\n/**\n * Class constructor\n *\n * @param string $base\n */\n\tfunction __construct($base = null) {\n\t\tif (!defined('AUTO_SESSION') || AUTO_SESSION === true) {\n\t\t\tparent::__construct($base);\n\t\t} else {\n\t\t\t$this->__active = false;\n\t\t}\n\t}\n/**\n * Turn sessions on if AUTO_SESSION is set to false in core.php\n *\n * @param string $base\n */\n\tfunction activate($base = null) {\n\t\tif ($this->__active === true) {\n\t\t\treturn;\n\t\t}\n\t\tparent::__construct($base);\n\t\t$this->__active = true;\n\t}\n/**\n * Startup method.  Copies controller data locally for rendering flash messages.\n *\n * @param object $controller\n * @access public\n */\n\tfunction startup(&$controller) {\n\t\t$this->base = $controller->base;\n\t\t$this->webroot = $controller->webroot;\n\t\t$th"..., 4096) = 4096 <0.000013>
lseek(3, 4096, SEEK_SET)                = 4096 <0.000009>
read(3, "_active === true) {\n\t\t\treturn $this->del($name);\n\t\t}\n\t\treturn false;\n\t}\n/**\n * Used to check if a session variable is set\n *\n * In your controller: $this->Session->check('Controller.sessKey');\n *\n * @param string $name\n * @return boolean true is session variable is set, false if not\n * @access public\n */\n\tfunction check($name) {\n\t\tif ($this->__active === true) {\n\t\t\treturn parent::check($name);\n\t\t}\n\t\treturn false;\n\t}\n/**\n * Used to determine the last error in a session.\n *\n * In your controller: $this->Session->error();\n *\n * @return string Last session error\n * @access public\n */\n\tfunction error() {\n\t\tif ($this->__active === true) {\n\t\t\treturn parent::error();\n\t\t}\n\t\treturn false;\n\t}\n/**\n * Used to set a session variable that can be used to output messages in the view.\n *\n * In your controller: $this->Session->setFlash('This has been saved');\n *\n * Additional params below can be passed to customize the output, or the Message.[key]\n *\n * @param string $message Message to be flashed\n * @param string $layout Layout to wrap flash message in\n * @param array $params Parameters to be sent to layout as view variables\n * @param string $key Message key, default is 'flash'\n * @access public\n */\n\tfunction setFlash($message, $layout = 'default', $params = array(), $key = 'flash') {\n\t\tif ($this->__active === true) {\n\t\t\t$this->write('Message.' . $key, compact('message', 'layout', 'params'));\n\t\t}\n\t}\n/**\n * This method is deprecated.\n * You should use $session->flash('key'); in your views\n *\n * @param string $key Optional message key\n * @return boolean or renders output directly.\n * @deprecated\n */\n\tfunction flash($key = 'flash') {\n\t\tif ($this->__active === true) {\n\t\t\tif ($this->check('Message.' . $key)) {\n\t\t\t\te($this->read('Message.' . $key));\n\t\t\t\t$this->del('Message.' . $key);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n/**\n * Used to renew a session id\n *\n * In your controller: $this->Session->renew();\n * @access public\n */\n\tfunction renew() {\n\t\tif ($this->__active === true) {\n\t\t\tparent::renew();\n\t\t}\n\t}\n/**\n * Used to check for a va"..., 4096) = 2511 <0.000010>
read(3, "", 4096)                       = 0 <0.000008>
read(3, "", 8192)                       = 0 <0.000009>
read(3, "", 8192)                       = 0 <0.000008>
close(3)                                = 0 <0.000010>
munmap(0x7fe0abc47000, 4096)            = 0 <0.000013>
open("/tmp/sess_ibe9c1l2roc5a4o94d3ad250s0", O_RDWR|O_CREAT, 0600) = 3 <0.000014>
flock(3, LOCK_EX)                       = 0 <0.000010>
fcntl(3, F_SETFD, FD_CLOEXEC)           = 0 <0.000017>
fstat(3, {st_mode=S_IFREG|0600, st_size=152, ...}) = 0 <0.000009>
lseek(3, 0, SEEK_SET)                   = 0 <0.000009>
read(3, "Config|a:3:{s:9:\"userAgent\";s:32:\"7d6889cb4f2690365a2d4e5b8434a5d8\";s:4:\"time\";i:1547803002;s:4:\"rand\";i:1983706736;}message|s:0:\"\";message_type|s:0:\"\";", 152) = 152 <0.000009>
getcwd("/home/hvacproz/public_html/acesys", 4096) = 34 <0.000010>
lstat("/home", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html", {st_mode=S_IFDIR|0750, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake/libs", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz/public_html/acesys/cake/libs/model", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz/public_html/acesys/cake/libs/model/model.php", {st_mode=S_IFREG|0644, st_size=1286, ...}) = 0 <0.000010>
stat("/home/hvacproz/public_html/acesys/cake/libs/model/model.php", {st_mode=S_IFREG|0644, st_size=1286, ...}) = 0 <0.000010>
getcwd("/home/hvacproz/public_html/acesys", 4096) = 34 <0.000009>
open("/home/hvacproz/public_html/acesys/cake/libs/model/model.php", O_RDONLY) = 4 <0.000011>
fstat(4, {st_mode=S_IFREG|0644, st_size=1286, ...}) = 0 <0.000008>
open("/home/hvacproz/public_html/acesys/cake/libs/model/model.php", O_RDONLY) = 5 <0.000014>
fstat(5, {st_mode=S_IFREG|0644, st_size=1286, ...}) = 0 <0.000008>
mmap(NULL, 1286, PROT_READ, MAP_SHARED, 5, 0) = 0x7fe0abc47000 <0.000011>
munmap(0x7fe0abc47000, 1286)            = 0 <0.000012>
close(5)                                = 0 <0.000009>
fcntl(4, F_GETFL)                       = 0x8000 (flags O_RDONLY|O_LARGEFILE) <0.000008>
fstat(4, {st_mode=S_IFREG|0644, st_size=1286, ...}) = 0 <0.000009>
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe0abc47000 <0.000010>
lseek(4, 0, SEEK_CUR)                   = 0 <0.000008>
lseek(4, 0, SEEK_SET)                   = 0 <0.000008>
read(4, "<?php\n/* SVN FILE: $Id: model.php 4409 2007-02-02 13:20:59Z phpnut $ */\n/**\n * Object-relational mapper.\n *\n * DBO-backed object data model, for mapping database tables to Cake objects.\n *\n * PHP versions 4 and 5\n *\n * CakePHP(tm) :  Rapid Development Framework <http://www.cakephp.org/>\n * Copyright 2005-2007, Cake Software Foundation, Inc.\n *\t\t\t\t\t\t\t\t1785 E. Sahara Avenue, Suite 490-204\n *\t\t\t\t\t\t\t\tLas Vegas, Nevada 89104\n *\n * Licensed under The MIT License\n * Redistributions of files must retain the above copyright notice.\n *\n * @filesource\n * @copyright\t\tCopyright 2005-2007, Cake Software Foundation, Inc.\n * @link\t\t\t\thttp://www.cakefoundation.org/projects/info/cakephp CakePHP(tm) Project\n * @package\t\t\tcake\n * @subpackage\t\tcake.cake.libs.model\n * @since\t\t\tCakePHP(tm) v 0.10.0.0\n * @version\t\t\t$Revision: 4409 $\n * @modifiedby\t\t$LastChangedBy: phpnut $\n * @lastmodified\t$Date: 2007-02-02 07:20:59 -0600 (Fri, 02 Feb 2007) $\n * @license\t\t\thttp://www.opensource.org/licenses/mit-license.php The MIT License\n */\n/**\n * Load the model class based on the version of PHP.\n *\n */\nif (phpversion() < 5) {\n\t require(LIBS . 'model' . DS . 'model_php4.php');\n\n\t if (function_exists(\"overload\")) {\n\t\t  overload(\"Model\");\n\t }\n} else {\n\t require(LIBS . 'model' . DS . 'model_php5.php');\n}\n?>", 4096) = 1286 <0.000013>
lseek(4, 1286, SEEK_SET)                = 1286 <0.000009>
read(4, "", 4096)                       = 0 <0.000008>
read(4, "", 8192)                       = 0 <0.000008>
read(4, "", 8192)                       = 0 <0.000008>
close(4)                                = 0 <0.000009>
munmap(0x7fe0abc47000, 4096)            = 0 <0.000013>
getcwd("/home/hvacproz/public_html/acesys", 4096) = 34 <0.000010>
lstat("/home", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html", {st_mode=S_IFDIR|0750, st_size=4096, ...}) = 0 <0.000011>
lstat("/home/hvacproz/public_html/acesys", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake/libs", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake/libs/model", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake/libs/model/model_php5.php", {st_mode=S_IFREG|0644, st_size=42564, ...}) = 0 <0.000009>
stat("/home/hvacproz/public_html/acesys/cake/libs/model/model_php5.php", {st_mode=S_IFREG|0644, st_size=42564, ...}) = 0 <0.000009>
getcwd("/home/hvacproz/public_html/acesys", 4096) = 34 <0.000008>
open("/home/hvacproz/public_html/acesys/cake/libs/model/model_php5.php", O_RDONLY) = 4 <0.000010>
fstat(4, {st_mode=S_IFREG|0644, st_size=42564, ...}) = 0 <0.000008>
open("/home/hvacproz/public_html/acesys/cake/libs/model/model_php5.php", O_RDONLY) = 5 <0.000010>
fstat(5, {st_mode=S_IFREG|0644, st_size=42564, ...}) = 0 <0.000009>
mmap(NULL, 42564, PROT_READ, MAP_SHARED, 5, 0) = 0x7fe0abc3d000 <0.000010>
munmap(0x7fe0abc3d000, 42564)           = 0 <0.000013>
close(5)                                = 0 <0.000009>
fcntl(4, F_GETFL)                       = 0x8000 (flags O_RDONLY|O_LARGEFILE) <0.000008>
fstat(4, {st_mode=S_IFREG|0644, st_size=42564, ...}) = 0 <0.000008>
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe0abc47000 <0.000010>
lseek(4, 0, SEEK_CUR)                   = 0 <0.000009>
lseek(4, 0, SEEK_SET)                   = 0 <0.000009>
read(4, "<?php\n/* SVN FILE: $Id: model_php5.php 5421 2007-07-09 04:58:57Z phpnut $ */\n/**\n * Object-relational mapper.\n *\n * DBO-backed object data model, for mapping database tables to Cake objects.\n *\n * PHP versions 5\n *\n * CakePHP(tm) :  Rapid Development Framework <http://www.cakephp.org/>\n * Copyright 2005-2007, Cake Software Foundation, Inc.\n *\t\t\t\t\t\t\t\t1785 E. Sahara Avenue, Suite 490-204\n *\t\t\t\t\t\t\t\tLas Vegas, Nevada 89104\n *\n * Licensed under The MIT License\n * Redistributions of files must retain the above copyright notice.\n *\n * @filesource\n * @copyright\t\tCopyright 2005-2007, Cake Software Foundation, Inc.\n * @link\t\t\t\thttp://www.cakefoundation.org/projects/info/cakephp CakePHP(tm) Project\n * @package\t\t\tcake\n * @subpackage\t\tcake.cake.libs.model\n * @since\t\t\tCakePHP(tm) v 0.10.0.0\n * @version\t\t\t$Revision: 5421 $\n * @modifiedby\t\t$LastChangedBy: phpnut $\n * @lastmodified\t$Date: 2007-07-08 23:58:57 -0500 (Sun, 08 Jul 2007) $\n * @license\t\t\thttp://www.opensource.org/licenses/mit-license.php The MIT License\n */\n/**\n * Included libs\n */\nuses('class_registry', 'validators', 'model' . DS . 'connection_manager', 'set');\n/**\n * Object-relational mapper.\n *\n * DBO-backed object data model.\n * Automatically selects a database table name based on a pluralized lowercase object class name\n * (i.e. class 'User' => table 'users'; class 'Man' => table 'men')\n * The table is required to have at least 'id auto_increment', 'created datetime',\n * and 'modified datetime' fields.\n *\n * @package\t\tcake\n * @subpackage\tcake.cake.libs.model\n */\nclass Model extends Object{\n/**\n * The name of the DataSource connection that this Model uses\n *\n * @var string\n * @access public\n */\n\tvar $useDbConfig = 'default';\n/**\n * Custom database table name.\n *\n * @var string\n * @access public\n */\n\tvar $useTable = null;\n/**\n * Custom display field name. Display fields are used by Scaffold, in SELECT boxes' OPTION elements.\n *\n * @var string\n * @access public\n */\n\tvar $displayField = null;\n\n/**\n * Value of the primary key ID of the record that this model is current"..., 4096) = 4096 <0.000012>
lseek(4, 4096, SEEK_SET)                = 4096 <0.000008>
read(4, "r not to cache queries for this model.  This enables in-memory\n * caching only, the results are not stored beyond this execution.\n *\n * @var boolean\n * @access public\n */\n\tvar $cacheQueries = true;\n/**\n * belongsTo association\n *\n * @var array\n * @access public\n */\n\tvar $belongsTo = array();\n/**\n * hasOne association\n *\n * @var array\n * @access public\n */\n\tvar $hasOne = array();\n/**\n * hasMany association\n *\n * @var array\n * @access public\n */\n\tvar $hasMany = array();\n/**\n * hasAndBelongsToMany association\n *\n * @var array\n * @access public\n */\n\tvar $hasAndBelongsToMany = array();\n/**\n * Depth of recursive association\n *\n * @var int\n * @access public\n */\n\tvar $recursive = 1;\n/**\n * Default association keys\n *\n * @var array\n * @access private\n */\n\tvar $__associationKeys = array('belongsTo' => array('className', 'foreignKey', 'conditions', 'fields', 'order', 'counterCache'),\n\t\t\t\t\t\t\t\t\t\t\t\t'hasOne' => array('className', 'foreignKey','conditions', 'fields','order', 'dependent'),\n\t\t\t\t\t\t\t\t\t\t\t\t'hasMany' => array('className', 'foreignKey', 'conditions', 'fields', 'order', 'limit', 'offset', 'dependent', 'exclusive', 'finderQuery', 'counterQuery'),\n\t\t\t\t\t\t\t\t\t\t\t\t'hasAndBelongsToMany' => array('className', 'joinTable', 'foreignKey', 'associationForeignKey', 'conditions', 'fields', 'order', 'limit', 'offset', 'unique', 'finderQuery', 'deleteQuery', 'insertQuery'));\n/**\n * Holds provided/generated association key names and other data for all associations\n *\n * @var array\n * @access private\n */\n\tvar $__associations = array('belongsTo', 'hasOne', 'hasMany', 'hasAndBelongsToMany');\n/**\n * The last inserted ID of the data that this model created\n *\n * @var int\n * @access private\n */\n\tvar $__insertID = null;\n/**\n * The number of records returned by the last query\n *\n * @var int\n * @access private\n */\n\tvar $__numRows = null;\n/**\n * The number of records affected by the last query\n *\n * @var int\n * @access private\n */\n\tvar $__affectedRows = null;\n/**\n * Holds model associations temporarily to allow for dynamic (un)binding\n *\n * @var ar"..., 4096) = 4096 <0.000010>
read(4, "\tif (is_numeric($key)) {\n\t\t\t\t\t$assocName = $value;\n\t\t\t\t\t$value = array();\n\t\t\t\t}\n\t\t\t\t$modelName = $assocName;\n\t\t\t\t$this->{$assoc}[$assocName] = $value;\n\t\t\t}\n\t\t}\n\t\t$this->__createLinks();\n\t\treturn true;\n\t}\n/**\n * Turn off associations on the fly.\n *\n * @param array $params\n * @return true\n * @access public\n */\n\tfunction unbindModel($params) {\n\t\tforeach ($params as $assoc => $models) {\n\t\t\t$this->__backAssociation[$assoc] = $this->{$assoc};\n\n\t\t\tforeach ($models as $model) {\n\t\t\t\t$this->__backAssociation = array_merge($this->__backAssociation, $this->{$assoc});\n\t\t\t\tunset ($this->{$assoc}[$model]);\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n/**\n * Private helper method to create a set of associations.\n *\n * @access private\n */\n\tfunction __createLinks() {\n\n\t\t// Convert all string-based associations to array based\n\t\tforeach ($this->__associations as $type) {\n\n\t\t\tif (!is_array($this->{$type})) {\n\t\t\t\t$this->{$type} = explode(',', $this->{$type});\n\n\t\t\t\tforeach ($this->{$type} as $i => $className) {\n\t\t\t\t\t$className = trim($className);\n\t\t\t\t\tunset ($this->{$type}[$i]);\n\t\t\t\t\t$this->{$type}[$className] = array();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tforeach ($this->{$type} as $assoc => $value) {\n\t\t\t\tif (is_numeric($assoc)) {\n\t\t\t\t\tunset ($this->{$type}[$assoc]);\n\t\t\t\t\t$assoc = $value;\n\t\t\t\t\t$value = array();\n\t\t\t\t\t$this->{$type}[$assoc] = $value;\n\t\t\t\t}\n\n\t\t\t\t$className = $assoc;\n\n\t\t\t\tif (isset($value['className']) && !empty($value['className'])) {\n\t\t\t\t\t$className = $value['className'];\n\t\t\t\t}\n\t\t\t\t$this->__constructLinkedModel($assoc, $className);\n\t\t\t}\n\t\t}\n\n\t\tforeach ($this->__associations as $type) {\n\t\t\t$this->__generateAssociation($type);\n\t\t}\n\t}\n\n/**\n * Private helper method to create associated models of given class.\n * @param string $assoc\n * @param string $className Class name\n * @param string $type Type of assocation\n * @access private\n */\n\tfunction __constructLinkedModel($assoc, $className) {\n\t\t$colKey = Inflector::underscore($className);\n\n\t\tif (!class_exists($className)) {\n\t\t\tloadModel($className);\n\t\t}\n\n\t\tif (ClassRegistry::isKeySet($colKey)) {\n\t\t\t$this->{$assoc} = "..., 8192) = 8192 <0.000010>
read(4, "\n *\n * @param mixed $id The ID of the record to read\n * @param mixed $fields String of single fieldname, or an array of fieldnames.\n * @return array Array of database fields\n * @access public\n */\n\tfunction read($fields = null, $id = null) {\n\t\t$this->validationErrors = array();\n\n\t\tif ($id != null) {\n\t\t\t$this->id = $id;\n\t\t}\n\n\t\t$id = $this->id;\n\n\t\tif (is_array($this->id)) {\n\t\t\t$id = $this->id[0];\n\t\t}\n\n\t\tif ($this->id !== null && $this->id !== false) {\n\t\t\t$db =& ConnectionManager::getDataSource($this->useDbConfig);\n\t\t\t$field = $db->name($this->name) . '.' . $db->name($this->primaryKey);\n\t\t\treturn $this->find($field . ' = ' . $db->value($id, $this->getColumnType($this->primaryKey)), $fields);\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n/**\n * Returns contents of a field in a query matching given conditions.\n *\n * @param string $name Name of field to get\n * @param array $conditions SQL conditions (defaults to NULL)\n * @param string $order SQL ORDER BY fragment\n * @return field contents\n * @access public\n */\n\tfunction field($name, $conditions = null, $order = null) {\n\t\tif ($conditions === null) {\n\t\t\t$conditions = array($this->name . '.' . $this->primaryKey => $this->id);\n\t\t}\n\n\t\tif ($data = $this->find($conditions, $name, $order, 0)) {\n\n\t\t\tif (strpos($name, '.') === false) {\n\t\t\t\tif (isset($data[$this->name][$name])) {\n\t\t\t\t\treturn $data[$this->name][$name];\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$name = explode('.', $name);\n\n\t\t\t\tif (isset($data[$name[0]][$name[1]])) {\n\t\t\t\t\treturn $data[$name[0]][$name[1]];\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n/**\n * Saves a single field to the database.\n *\n * @param string $name Name of the table field\n * @param mixed $value Value of the field\n * @param boolean $validate Whether or not this model should validate before saving (defaults to false)\n * @return boolean True on success save\n * @access public\n */\n\tfunction saveField($name, $value, $validate = false) {\n\t\treturn $this->save(array($this->name => array($name => $value)), $validate);\n\t}\n"..., 8192) = 8192 <0.000010>
read(4, ";\n\t\t}\n\t\tforeach ($this->hasMany as $assoc => $data) {\n\t\t\tif ($data['dependent'] === true && $cascade === true) {\n\t\t\t\t$model =& $this->{$data['className']};\n\t\t\t\t$field = $model->escapeField($data['foreignKey']);\n\t\t\t\t$model->recursive = 0;\n\t\t\t\t$records = $model->findAll(\"$field = '$id'\", $model->primaryKey, null, null);\n\n\t\t\t\tif ($records != false) {\n\t\t\t\t\tforeach ($records as $record) {\n\t\t\t\t\t\t$model->del($record[$data['className']][$model->primaryKey]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (isset($savedAssociatons)) {\n\t\t\t$this->__backAssociation = $savedAssociatons;\n\t\t}\n\t}\n/**\n * Cascades model deletes to hasOne relationships.\n *\n * @param string $id\n * @return null\n * @access protected\n */\n\tfunction _deleteHasOne($id, $cascade) {\n\t\tif (!empty($this->__backAssociation)) {\n\t\t\t$savedAssociatons = $this->__backAssociation;\n\t\t\t$this->__backAssociation = array();\n\t\t}\n\t\tforeach ($this->hasOne as $assoc => $data) {\n\t\t\tif ($data['dependent'] === true && $cascade === true) {\n\t\t\t\t$model =& $this->{$data['className']};\n\t\t\t\t$field = $model->escapeField($data['foreignKey']);\n\t\t\t\t$model->recursive = 0;\n\t\t\t\t$records = $model->findAll(\"$field = '$id'\", $model->primaryKey, null, null);\n\n\t\t\t\tif ($records != false) {\n\t\t\t\t\tforeach ($records as $record) {\n\t\t\t\t\t\t$model->del($record[$data['className']][$model->primaryKey]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (isset($savedAssociatons)) {\n\t\t\t$this->__backAssociation = $savedAssociatons;\n\t\t}\n\t}\n/**\n * Cascades model deletes to HABTM join keys.\n *\n * @param string $id\n * @return null\n * @access protected\n */\n\tfunction _deleteMulti($id) {\n\t\t$db =& ConnectionManager::getDataSource($this->useDbConfig);\n\t\tforeach ($this->hasAndBelongsToMany as $assoc => $data) {\n\t\t\t$db->execute(\"DELETE FROM \" . $db->name($db->fullTableName($data['joinTable'])) . \" WHERE \" . $db->name($data['foreignKey']) . \" = '{$id}'\");\n\t\t}\n\t}\n/**\n * Returns true if a record with set id exists.\n *\n * @return boolean True if such a record exists\n * @access public\n */\n\tfunction exists() {\n\t\tif ($this->id) {\n\t\t\t$id = $this->id;\n\n\t\t\tif (is_array($id)"..., 8192) = 8192 <0.000010>
read(4, "ng $field Field name (parameter for findAll)\n * @param unknown_type $value\n * @return array Array with keys \"prev\" and \"next\" that holds the id's\n * @access public\n */\n\tfunction findNeighbours($conditions = null, $field, $value) {\n\t\t$db =& ConnectionManager::getDataSource($this->useDbConfig);\n\n\t\tif (!is_null($conditions)) {\n\t\t\t\t$conditions = $conditions . ' AND ';\n\t\t}\n\n\t\t@list($prev) = Model::findAll($conditions . $field . ' < ' . $db->value($value), $field, $field . ' DESC', 1, null, 0);\n\t\t@list($next) = Model::findAll($conditions . $field . ' > ' . $db->value($value), $field, $field . ' ASC', 1, null, 0);\n\n\t\tif (!isset($prev)) {\n\t\t\t$prev = null;\n\t\t}\n\n\t\tif (!isset($next)) {\n\t\t\t$next = null;\n\t\t}\n\n\t\treturn array('prev' => $prev, 'next' => $next);\n\t}\n/**\n * Returns a resultset for given SQL statement. Generic SQL queries should be made with this method.\n *\n * @param string $sql SQL statement\n * @return array Resultset\n * @access public\n */\n\tfunction query() {\n\t\t$params = func_get_args();\n\t\t$db =& ConnectionManager::getDataSource($this->useDbConfig);\n\t\treturn call_user_func_array(array(&$db, 'query'), $params);\n\t}\n/**\n * Returns true if all fields pass validation, otherwise false.\n *\n * @param array $data POST data\n * @return boolean True if there are no errors\n * @access public\n */\n\tfunction validates($data = array()) {\n\t\t$errors = $this->invalidFields($data);\n\t\treturn count($errors) == 0;\n\t}\n/**\n * Returns an array of invalid fields.\n *\n * @param array $data\n * @return array Array of invalid fields or boolean case any error occurs\n * @access public\n */\n\tfunction invalidFields($data = array()) {\n\t\tif (empty($data)) {\n\t\t\t$data = $this->data;\n\t\t}\n\n\t\tif (!$this->beforeValidate()) {\n\t\t\treturn $this->validationErrors;\n\t\t}\n\n\t\tif (!isset($this->validate)) {\n\t\t\treturn $this->validationErrors;\n\t\t}\n\n\t\tif (!empty($data)) {\n\t\t\t$data = $data;\n\t\t} elseif (isset($this->data)) {\n\t\t\t$data = $this->data;\n\t\t}\n\n\t\tif (isset($data[$this->name])) {\n\t\t\t$data = $data[$this->name];\n\t\t}\n\n\t\tforeach ($this->validate as $field_name => $validato"..., 8192) = 8192 <0.000010>
read(4, "ation should continue, false if it should abort\n * @access public\n */\n\tfunction beforeDelete() {\n\t\treturn true;\n\t}\n/**\n * After delete callback\n *\n * @return boolean\n * @access public\n */\n\tfunction afterDelete() {\n\t\treturn true;\n\t}\n/**\n * Before validate callback\n *\n * @return boolean\n * @access public\n */\n\tfunction beforeValidate() {\n\t\treturn true;\n\t}\n/**\n * DataSource error callback\n *\n * @return void\n */\n\tfunction onError() {\n\t}\n/**\n * Private method.  Clears cache for this model\n *\n * @param string $type If null this deletes cached views if CACHE_CHECK is true\n *                     Will be used to allow deleting query cache also\n * @return boolean true on delete\n * @access protected\n */\n\tfunction _clearCache($type = null) {\n\t\tif ($type === null) {\n\t\t\tif (defined('CACHE_CHECK') && CACHE_CHECK === true) {\n\t\t\t\t$assoc[] = strtolower(Inflector::pluralize($this->name));\n\n\t\t\t\tforeach ($this->__associations as $key => $association) {\n\t\t\t\t\tforeach ($this->$association as $key => $className) {\n\t\t\t\t\t\t$check = strtolower(Inflector::pluralize($className['className']));\n\n\t\t\t\t\t\tif (!in_array($check, $assoc)) {\n\t\t\t\t\t\t\t$assoc[] = strtolower(Inflector::pluralize($className['className']));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tclearCache($assoc);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else {\n\t\t\t//Will use for query cache deleting\n\t\t}\n\t}\n/**\n * Called when serializing a model\n *\n * @return array\n * @access public\n */\n\tfunction __sleep() {\n\t\t$return = array_keys(get_object_vars($this));\n\t\treturn $return;\n\t}\n/**\n * Called when unserializing a model\n *\n * @return void\n * @access public\n */\n\tfunction __wakeup() {\n\t}\n}\n\n?>", 8192) = 1604 <0.000019>
read(4, "", 4096)                       = 0 <0.000008>
read(4, "", 8192)                       = 0 <0.000009>
read(4, "", 8192)                       = 0 <0.000008>
brk(0x1deb000)                          = 0x1deb000 <0.000010>
brk(0x1e2b000)                          = 0x1e2b000 <0.000013>
close(4)                                = 0 <0.000034>
munmap(0x7fe0abc47000, 4096)            = 0 <0.000014>
getcwd("/home/hvacproz/public_html/acesys", 4096) = 34 <0.000009>
open("/home/hvacproz/public_html/acesys/cake/libs/class_registry.php", O_RDONLY) = 4 <0.000012>
fstat(4, {st_mode=S_IFREG|0644, st_size=2991, ...}) = 0 <0.000009>
close(4)                                = 0 <0.000009>
getcwd("/home/hvacproz/public_html/acesys", 4096) = 34 <0.000009>
lstat("/home", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz/public_html", {st_mode=S_IFDIR|0750, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz/public_html/acesys", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz/public_html/acesys/cake/libs", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake/libs/validators.php", {st_mode=S_IFREG|0644, st_size=1386, ...}) = 0 <0.000010>
open("/home/hvacproz/public_html/acesys/cake/libs/validators.php", O_RDONLY) = 4 <0.000011>
fstat(4, {st_mode=S_IFREG|0644, st_size=1386, ...}) = 0 <0.000009>
open("/home/hvacproz/public_html/acesys/cake/libs/validators.php", O_RDONLY) = 5 <0.000009>
fstat(5, {st_mode=S_IFREG|0644, st_size=1386, ...}) = 0 <0.000008>
mmap(NULL, 1386, PROT_READ, MAP_SHARED, 5, 0) = 0x7fe0abc47000 <0.000010>
munmap(0x7fe0abc47000, 1386)            = 0 <0.000011>
close(5)                                = 0 <0.000009>
fcntl(4, F_GETFL)                       = 0x8000 (flags O_RDONLY|O_LARGEFILE) <0.000008>
fstat(4, {st_mode=S_IFREG|0644, st_size=1386, ...}) = 0 <0.000008>
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe0abc47000 <0.000009>
lseek(4, 0, SEEK_CUR)                   = 0 <0.000008>
lseek(4, 0, SEEK_SET)                   = 0 <0.000009>
read(4, "<?php\n/* SVN FILE: $Id: validators.php 5117 2007-05-18 16:46:55Z phpnut $ */\n/**\n * Tort Validators\n *\n * Used to validate data in Models.\n *\n * PHP versions 4 and 5\n *\n * CakePHP(tm) :  Rapid Development Framework <http://www.cakephp.org/>\n * Copyright 2005-2007, Cake Software Foundation, Inc.\n *\t\t\t1785 E. Sahara Avenue, Suite 490-204\n *\t\t\tLas Vegas, Nevada 89104\n *\n * Licensed under The MIT License\n * Redistributions of files must retain the above copyright notice.\n *\n * @filesource\n * @copyright\t\tCopyright 2005-2007, Cake Software Foundation, Inc.\n * @link\t\t\t\thttp://www.cakefoundation.org/projects/info/cakephp CakePHP(tm) Project\n * @package\t\t\tcake\n * @subpackage\t\tcake.cake.libs\n * @since\t\t\tCakePHP(tm) v 0.2.9\n * @version\t\t\t$Revision: 5117 $\n * @modifiedby\t\t$LastChangedBy: phpnut $\n * @lastmodified\t$Date: 2007-05-18 11:46:55 -0500 (Fri, 18 May 2007) $\n * @license\t\t\thttp://www.opensource.org/licenses/mit-license.php The MIT License\n */\n/**\n * Not empty.\n */\n\tdefine('VALID_NOT_EMPTY', '/.+/');\n/**\n * Numbers [0-9] only.\n */\n\tdefine('VALID_NUMBER', '/^[-+]?\\\\b[0-9]*\\\\.?[0-9]+\\\\b$/');\n/**\n * A valid email address.\n */\n\tdefine('VALID_EMAIL', '/\\\\A(?:^([a-z0-9][a-z0-9_\\\\-\\\\.\\\\+]*)@([a-z0-9][a-z0-9\\\\.\\\\-]{0,63}\\\\.(com|org|net|biz|info|name|net|pro|aero|coop|museum|[a-z]{2,4}))$)\\\\z/i');\n/**\n * A valid year (1000-2999).\n */\n\tdefine('VALID_YEAR', '/^[12][0-9]{3}$/');\n?>", 4096) = 1386 <0.000012>
lseek(4, 1386, SEEK_SET)                = 1386 <0.000008>
read(4, "", 4096)                       = 0 <0.000008>
read(4, "", 8192)                       = 0 <0.000008>
read(4, "", 8192)                       = 0 <0.000008>
close(4)                                = 0 <0.000009>
munmap(0x7fe0abc47000, 4096)            = 0 <0.000013>
getcwd("/home/hvacproz/public_html/acesys", 4096) = 34 <0.000009>
lstat("/home", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz/public_html", {st_mode=S_IFDIR|0750, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz/public_html/acesys", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake/libs", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake/libs/model", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake/libs/model/connection_manager.php", {st_mode=S_IFREG|0644, st_size=7014, ...}) = 0 <0.000010>
open("/home/hvacproz/public_html/acesys/cake/libs/model/connection_manager.php", O_RDONLY) = 4 <0.000011>
fstat(4, {st_mode=S_IFREG|0644, st_size=7014, ...}) = 0 <0.000008>
open("/home/hvacproz/public_html/acesys/cake/libs/model/connection_manager.php", O_RDONLY) = 5 <0.000010>
fstat(5, {st_mode=S_IFREG|0644, st_size=7014, ...}) = 0 <0.000009>
mmap(NULL, 7014, PROT_READ, MAP_SHARED, 5, 0) = 0x7fe0abc46000 <0.000010>
munmap(0x7fe0abc46000, 7014)            = 0 <0.000010>
close(5)                                = 0 <0.000009>
fcntl(4, F_GETFL)                       = 0x8000 (flags O_RDONLY|O_LARGEFILE) <0.000008>
fstat(4, {st_mode=S_IFREG|0644, st_size=7014, ...}) = 0 <0.000008>
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe0abc47000 <0.000010>
lseek(4, 0, SEEK_CUR)                   = 0 <0.000008>
lseek(4, 0, SEEK_SET)                   = 0 <0.000009>
read(4, "<?php\n/* SVN FILE: $Id: connection_manager.php 5317 2007-06-20 08:28:35Z phpnut $ */\n\n/**\n * Short description for file.\n *\n * Long description for file\n *\n * PHP versions 4 and 5\n *\n * CakePHP(tm) :  Rapid Development Framework <http://www.cakephp.org/>\n * Copyright 2005-2007, Cake Software Foundation, Inc.\n *\t\t\t\t\t\t\t\t1785 E. Sahara Avenue, Suite 490-204\n *\t\t\t\t\t\t\t\tLas Vegas, Nevada 89104\n *\n * Licensed under The MIT License\n * Redistributions of files must retain the above copyright notice.\n *\n * @filesource\n * @copyright\t\tCopyright 2005-2007, Cake Software Foundation, Inc.\n * @link\t\t\t\thttp://www.cakefoundation.org/projects/info/cakephp CakePHP(tm) Project\n * @package\t\t\tcake\n * @subpackage\t\tcake.cake.libs.model\n * @since\t\t\tCakePHP(tm) v 0.10.x.1402\n * @version\t\t\t$Revision: 5317 $\n * @modifiedby\t\t$LastChangedBy: phpnut $\n * @lastmodified\t$Date: 2007-06-20 03:28:35 -0500 (Wed, 20 Jun 2007) $\n * @license\t\t\thttp://www.opensource.org/licenses/mit-license.php The MIT License\n */\n\n/**\n * Manages loaded instances of DataSource objects\n *\n * Long description for file\n *\n * @package\t\tcake\n * @subpackage\tcake.cake.libs.model\n */\n\nuses ('model' . DS . 'datasources' . DS . 'datasource');\nconfig('database');\n\nclass ConnectionManager extends Object {\n\n/**\n * Holds a loaded instance of the Connections object\n *\n * @var class:Connections\n * @access public\n */\n\tvar $config = null;\n/**\n * Holds instances DataSource objects\n *\n * @var array\n * @access private\n */\n\tvar $_dataSources = array();\n/**\n * Contains a list of all file and class names used in Connection settings\n *\n * @var array\n * @access private\n */\n\tvar $_connectionsEnum = array();\n/**\n * Constructor.\n *\n */\n\tfunction __construct() {\n\t\tif (class_exists('DATABASE_CONFIG')) {\n\t\t\t$this->config = new DATABASE_CONFIG();\n\t\t}\n\t}\n/**\n * Gets a reference to the ConnectionManger object instance\n *\n * @return object\n */\n\tfunction &getInstance() {\n\t\tstatic $instance = array();\n\n\t\tif (!isset($instance[0]) || !$instance[0]) {\n\t\t\t$instance[0] = &new ConnectionManager();\n\t\t}\n\n\t\treturn $i"..., 4096) = 4096 <0.000012>
lseek(4, 4096, SEEK_SET)                = 4096 <0.000009>
read(4, " $conn['filename'] . '.php')) {\n\t\t\trequire (MODELS . DS . $conn['filename'] . '.php');\n\t\t} elseif (fileExistsInPath(LIBS . 'model' . DS . $conn['filename'] . '.php')) {\n\t\t\trequire (LIBS . 'model' . DS . $conn['filename'] . '.php');\n\t\t} else {\n\t\t\ttrigger_error(sprintf(__('Unable to load DataSource file %s.php', true), $conn['filename']), E_USER_ERROR);\n\t\t\treturn null;\n\t\t}\n\t}\n/**\n * Gets a list of class and file names associated with the user-defined DataSource connections\n *\n * @return array An associative array of elements where the key is the connection name\n *               (as defined in Connections), and the value is an array with keys 'filename' and 'classname'.\n */\n\tfunction enumConnectionObjects() {\n\t\t$_this =& ConnectionManager::getInstance();\n\n\t\tif (!empty($_this->_connectionsEnum)) {\n\t\t\treturn $_this->_connectionsEnum;\n\t\t}\n\t\t$connections = get_object_vars($_this->config);\n\n\t\tif ($connections != null) {\n\t\t\tforeach ($connections as $name => $config) {\n\t\t\t\t$_this->_connectionsEnum[$name] = $_this->__getDriver($config);\n\t\t\t}\n\t\t\treturn $_this->_connectionsEnum;\n\t\t} else {\n\t\t\t$_this->cakeError('missingConnection', array(array('className' => 'ConnectionManager')));\n\t\t}\n\t}\n/**\n * Dynamically creates a DataSource object at runtime, with the given name and settings\n *\n * @param string $name The DataSource name\n * @param array $config The DataSource configuration settings\n * @return object A reference to the DataSource object, or null if creation failed\n */\n\tfunction &create($name = '', $config = array()) {\n\t\t$_this =& ConnectionManager::getInstance();\n\n\t\tif (empty($name) || empty($config) || array_key_exists($name, $_this->_connectionsEnum)) {\n\t\t\t$null = null;\n\t\t\treturn $null;\n\t\t}\n\n\t\t$_this->config->{$name} = $config;\n\t\t$_this->_connectionsEnum[$name] = $_this->__getDriver($config);\n\t\treturn $_this->getDataSource($name);\n\t}\n/**\n * Private method\n *\n * Returns the file and class name for the given driver\n */\n\tfunction __getDriver($config) {\n\t\t$_this =& ConnectionManager::getInstance();\n\n\t\tif (!isset($config['datas"..., 4096) = 2918 <0.000009>
read(4, "", 4096)                       = 0 <0.000009>
read(4, "", 8192)                       = 0 <0.000008>
read(4, "", 8192)                       = 0 <0.000008>
close(4)                                = 0 <0.000021>
munmap(0x7fe0abc47000, 4096)            = 0 <0.000013>
getcwd("/home/hvacproz/public_html/acesys", 4096) = 34 <0.000009>
lstat("/home", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html", {st_mode=S_IFDIR|0750, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake/libs", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake/libs/model", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake/libs/model/datasources", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake/libs/model/datasources/datasource.php", {st_mode=S_IFREG|0644, st_size=10195, ...}) = 0 <0.000010>
open("/home/hvacproz/public_html/acesys/cake/libs/model/datasources/datasource.php", O_RDONLY) = 4 <0.000011>
fstat(4, {st_mode=S_IFREG|0644, st_size=10195, ...}) = 0 <0.000008>
open("/home/hvacproz/public_html/acesys/cake/libs/model/datasources/datasource.php", O_RDONLY) = 5 <0.000010>
fstat(5, {st_mode=S_IFREG|0644, st_size=10195, ...}) = 0 <0.000009>
mmap(NULL, 10195, PROT_READ, MAP_SHARED, 5, 0) = 0x7fe0abc45000 <0.000010>
munmap(0x7fe0abc45000, 10195)           = 0 <0.000010>
close(5)                                = 0 <0.000009>
fcntl(4, F_GETFL)                       = 0x8000 (flags O_RDONLY|O_LARGEFILE) <0.000008>
fstat(4, {st_mode=S_IFREG|0644, st_size=10195, ...}) = 0 <0.000008>
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe0abc47000 <0.000010>
lseek(4, 0, SEEK_CUR)                   = 0 <0.000008>
lseek(4, 0, SEEK_SET)                   = 0 <0.000008>
read(4, "<?php\n/* SVN FILE: $Id: datasource.php 5317 2007-06-20 08:28:35Z phpnut $ */\n/**\n * DataSource base class\n *\n * Long description for file\n *\n * PHP versions 4 and 5\n *\n * CakePHP(tm) :  Rapid Development Framework <http://www.cakephp.org/>\n * Copyright 2005-2007, Cake Software Foundation, Inc.\n *\t\t\t\t\t\t\t\t1785 E. Sahara Avenue, Suite 490-204\n *\t\t\t\t\t\t\t\tLas Vegas, Nevada 89104\n *\n * Licensed under The MIT License\n * Redistributions of files must retain the above copyright notice.\n *\n * @filesource\n * @copyright\t\tCopyright 2005-2007, Cake Software Foundation, Inc.\n * @link\t\t\t\thttp://www.cakefoundation.org/projects/info/cakephp CakePHP(tm) Project\n * @package\t\t\tcake\n * @subpackage\t\tcake.cake.libs.model.datasources\n * @since\t\t\tCakePHP(tm) v 0.10.5.1790\n * @version\t\t\t$Revision: 5317 $\n * @modifiedby\t\t$LastChangedBy: phpnut $\n * @lastmodified\t$Date: 2007-06-20 03:28:35 -0500 (Wed, 20 Jun 2007) $\n * @license\t\t\thttp://www.opensource.org/licenses/mit-license.php The MIT License\n */\n/**\n * DataSource base class\n *\n * Long description for file\n *\n * @package\t\tcake\n * @subpackage\tcake.cake.libs.model.datasources\n */\nclass DataSource extends Object {\n/**\n * Are we connected to the DataSource?\n *\n * @var boolean\n * @access public\n */\n\tvar $connected = false;\n/**\n * Print debug info?\n *\n * @var boolean\n * @access public\n */\n\tvar $debug = false;\n/**\n * Print full query debug info?\n *\n * @var boolean\n * @access public\n */\n\tvar $fullDebug = false;\n/**\n * Error description of last query\n *\n * @var unknown_type\n * @access public\n */\n\tvar $error = null;\n/**\n * String to hold how many rows were affected by the last SQL operation.\n *\n * @var string\n * @access public\n */\n\tvar $affected = null;\n/**\n * Number of rows in current resultset\n *\n * @var int\n * @access public\n */\n\tvar $numRows = null;\n/**\n * Time the last query took\n *\n * @var int\n * @access public\n */\n\tvar $took = null;\n/**\n * Enter description here...\n *\n * @var boolean\n */\n\tvar $cacheSources = true;\n/**\n * Enter description here...\n *\n * @var array\n * @access private\n */\n\tvar $"..., 4096) = 4096 <0.000012>
lseek(4, 4096, SEEK_SET)                = 4096 <0.000008>
read(4, "($interface) {\n\t\t$methods = get_class_methods(get_class($this));\n\t\t$methods = strtolower(implode('|', $methods));\n\t\t$methods = explode('|', $methods);\n\t\t$return = in_array(strtolower($interface), $methods);\n\t\treturn $return;\n\t}\n/**\n * Sets the configuration for the DataSource\n *\n * @param array $config The configuration array\n * @return void\n */\n\tfunction setConfig($config) {\n\t\tif (is_array($this->_baseConfig)) {\n\t\t\t$this->config = $this->_baseConfig;\n\t\t\tforeach ($config as $key => $val) {\n\t\t\t\t$this->config[$key] = $val;\n\t\t\t}\n\t\t}\n\t}\n/**\n * Cache the DataSource description\n *\n * @param string $object The name of the object (model) to cache\n * @param mixed $data The description of the model, usually a string or array\n * @return void\n */\n\tfunction __cacheDescription($object, $data = null) {\n\t\tif ($this->cacheSources === false) {\n\t\t\treturn null;\n\t\t}\n\t\tif (Configure::read() > 0) {\n\t\t\t$expires = \"+15 seconds\";\n\t\t} else {\n\t\t\t$expires = \"+999 days\";\n\t\t}\n\n\t\tif ($data !== null) {\n\t\t\t$this->__descriptions[$object] =& $data;\n\t\t\t$cache = serialize($data);\n\t\t} else {\n\t\t\t$cache = null;\n\t\t}\n\t\t$new = cache('models' . DS . ConnectionManager::getSourceName($this) . '_' . $object, $cache, $expires);\n\n\t\tif ($new != null) {\n\t\t\t$new = unserialize($new);\n\t\t}\n\t\treturn $new;\n\t}\n/**\n * To-be-overridden in subclasses.\n *\n * @return string\n */\n\tfunction conditions($conditions) {\n\t\treturn $conditions;\n\t}\n/**\n * To-be-overridden in subclasses.\n *\n * @param unknown_type $name\n * @return unknown\n */\n\tfunction name($name) {\n\t\treturn $name;\n\t}\n/**\n * To-be-overridden in subclasses.\n *\n * @param unknown_type $value\n * @return unknown\n */\n\tfunction value($value) {\n\t\treturn $value;\n\t}\n/**\n * Returns a Model description (metadata) or null if none found.\n *\n * @param Model $model\n * @return mixed\n */\n\tfunction describe($model) {\n\t\tif ($this->cacheSources === false) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (isset($this->__descriptions[$model->tablePrefix.$model->table])) {\n\t\t\treturn $this->__descriptions[$model->tablePrefix.$model->table];\n\t\t}\n\t\t$cache = $this->__ca"..., 4096) = 4096 <0.000010>
read(4, ") {\n\t\t\t\t\t\t\t\t$val = $data[$model->name][$model->primaryKey];\n\t\t\t\t\t\t\t} elseif (isset($data[$association][$model->primaryKey])) {\n\t\t\t\t\t\t\t\t$val = $data[$association][$model->primaryKey];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$found = false;\n\t\t\t\t\t\t\tforeach (array_reverse($stack) as $assoc) {\n\t\t\t\t\t\t\t\tif (isset($data[$assoc]) && isset($data[$assoc][$model->primaryKey])) {\n\t\t\t\t\t\t\t\t\t$val = $data[$assoc][$model->primaryKey];\n\t\t\t\t\t\t\t\t\t$found = true;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!$found) {\n\t\t\t\t\t\t\t\t$val = '';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase '{$__cakeForeignKey__$}':\n\t\t\t\t\t\tforeach ($model->__associations as $id => $name) {\n\t\t\t\t\t\t\tforeach ($model->$name as $assocName => $assoc) {\n\t\t\t\t\t\t\t\tif ($assocName === $association) {\n\t\t\t\t\t\t\t\t\tif (isset($assoc['foreignKey'])) {\n\t\t\t\t\t\t\t\t\t\t$foreignKey = $assoc['foreignKey'];\n\n\t\t\t\t\t\t\t\t\t\tif (isset($data[$model->name][$foreignKey])) {\n\t\t\t\t\t\t\t\t\t\t\t$val = $data[$model->name][$foreignKey];\n\t\t\t\t\t\t\t\t\t\t} elseif (isset($data[$association][$foreignKey])) {\n\t\t\t\t\t\t\t\t\t\t\t$val = $data[$association][$foreignKey];\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t$found = false;\n\t\t\t\t\t\t\t\t\t\t\tforeach (array_reverse($stack) as $assoc) {\n\t\t\t\t\t\t\t\t\t\t\t\tif (isset($data[$assoc]) && isset($data[$assoc][$foreignKey])) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t$val = $data[$assoc][$foreignKey];\n\t\t\t\t\t\t\t\t\t\t\t\t\t$found = true;\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tif (!$found) {\n\t\t\t\t\t\t\t\t\t\t\t\t$val = '';\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak 3;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (empty($val) && $val !== '0') {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\t$query = r($key, $this->value($val, $model->getColumnType($model->primaryKey)), $query);\n\t\t\t}\n\t\t}\n\t\treturn $query;\n\t}\n/**\n * To-be-overridden in subclasses.\n *\n * @param unknown_type $model\n * @param unknown_type $key\n * @return unknown\n */\n\tfunction resolveKey($model, $key) {\n\t\treturn $model->name . $key;\n\t}\n/**\n * Closes the current datasource.\n *\n */\n\tfunction __destruct() {\n\t\tif ($this->connected) {\n\t\t\t$this->close();\n\t\t}\n\t}\n}\n?>", 8192) = 2003 <0.000009>
read(4, "", 4096)                       = 0 <0.000008>
read(4, "", 8192)                       = 0 <0.000009>
read(4, "", 8192)                       = 0 <0.000009>
brk(0x1e6b000)                          = 0x1e6b000 <0.000011>
close(4)                                = 0 <0.000010>
munmap(0x7fe0abc47000, 4096)            = 0 <0.000014>
access("/home/hvacproz/public_html/acesys/app/config/database.php", F_OK) = 0 <0.000011>
lstat("/home", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html", {st_mode=S_IFDIR|0750, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/app", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/app/config", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz/public_html/acesys/app/config/database.php", {st_mode=S_IFREG|0644, st_size=2706, ...}) = 0 <0.000010>
open("/home/hvacproz/public_html/acesys/app/config/database.php", O_RDONLY) = 4 <0.000010>
fstat(4, {st_mode=S_IFREG|0644, st_size=2706, ...}) = 0 <0.000008>
open("/home/hvacproz/public_html/acesys/app/config/database.php", O_RDONLY) = 5 <0.000010>
fstat(5, {st_mode=S_IFREG|0644, st_size=2706, ...}) = 0 <0.000008>
mmap(NULL, 2706, PROT_READ, MAP_SHARED, 5, 0) = 0x7fe0abc47000 <0.000011>
munmap(0x7fe0abc47000, 2706)            = 0 <0.000011>
close(5)                                = 0 <0.000009>
fcntl(4, F_GETFL)                       = 0x8000 (flags O_RDONLY|O_LARGEFILE) <0.000009>
fstat(4, {st_mode=S_IFREG|0644, st_size=2706, ...}) = 0 <0.000008>
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe0abc47000 <0.000009>
lseek(4, 0, SEEK_CUR)                   = 0 <0.000009>
lseek(4, 0, SEEK_SET)                   = 0 <0.000008>
read(4, "<?php\nerror_reporting(0);\n/* SVN FILE: $Id: database.php.default 4409 2007-02-02 13:20:59Z phpnut $ */\n/**\n * This is core configuration file.\n *\n * Use it to configure core behaviour ofCake.\n *\n * PHP versions 4 and 5\n *\n * CakePHP(tm) :  Rapid Development Framework <http://www.cakephp.org/>\n * Copyright 2005-2007, Cake Software Foundation, Inc.\n *\t\t\t\t\t\t\t\t1785 E. Sahara Avenue, Suite 490-204\n *\t\t\t\t\t\t\t\tLas Vegas, Nevada 89104\n *\n * Licensed under The MIT License\n * Redistributions of files must retain the above copyright notice.\n *\n * @filesource\n * @copyright\t\tCopyright 2005-2007, Cake Software Foundation, Inc.\n * @link\t\t\t\thttp://www.cakefoundation.org/projects/info/cakephp CakePHP(tm) Project\n * @package\t\t\tcake\n * @subpackage\t\tcake.app.config\n * @since\t\t\tCakePHP(tm) v 0.2.9\n * @version\t\t\t$Revision: 4409 $\n * @modifiedby\t\t$LastChangedBy: phpnut $\n * @lastmodified\t$Date: 2007-02-02 07:20:59 -0600 (Fri, 02 Feb 2007) $\n * @license\t\t\thttp://www.opensource.org/licenses/mit-license.php The MIT License\n */\n/**\n * In this file you set up your database connection details.\n *\n * @package\t\tcake\n * @subpackage\tcake.config\n */\n/**\n * Database configuration class.\n * You can specify multiple configurations for production, development and testing.\n *\n * driver =>\n * mysql, postgres, sqlite, adodb, pear-drivername\n *\n * connect =>\n * MySQL set the connect to either mysql_pconnect of mysql_connect\n * PostgreSQL set the connect to either pg_pconnect of pg_connect\n * SQLite set the connect to sqlite_popen  sqlite_open\n * ADOdb set the connect to one of these\n *\t(http://phplens.com/adodb/supported.databases.html) and\n *\tappend it '|p' for persistent connection. (mssql|p for example, or just mssql for not persistent)\n *\n * host =>\n * the host you connect to the database\n * MySQL 'localhost' to add a port number use 'localhost:port#'\n * PostgreSQL 'localhost' to add a port number use 'localhost port=5432'\n *\n */\nclass DATABASE_CONFIG\n{\n\n\n\tvar $test = array('driver' => 'mysql',\n\t\t\t\t\t\t\t'connect' => 'mysql_connect',\n\t\t\t\t\t\t\t'host' => 'lo"..., 4096) = 2706 <0.000012>
lseek(4, 2706, SEEK_SET)                = 2706 <0.000008>
read(4, "", 4096)                       = 0 <0.000008>
read(4, "", 8192)                       = 0 <0.000008>
read(4, "", 8192)                       = 0 <0.000009>
close(4)                                = 0 <0.000009>
munmap(0x7fe0abc47000, 4096)            = 0 <0.000013>
getcwd("/home/hvacproz/public_html/acesys", 4096) = 34 <0.000009>
open("/home/hvacproz/public_html/acesys/cake/libs/set.php", O_RDONLY) = 4 <0.000012>
fstat(4, {st_mode=S_IFREG|0644, st_size=19656, ...}) = 0 <0.000008>
close(4)                                = 0 <0.000009>
access("/home/hvacproz/public_html/acesys/app/app_model.php", F_OK) = -1 ENOENT (No such file or directory) <0.000011>
getcwd("/home/hvacproz/public_html/acesys", 4096) = 34 <0.000008>
lstat("/home", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html", {st_mode=S_IFDIR|0750, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz/public_html/acesys/cake/app_model.php", {st_mode=S_IFREG|0644, st_size=1322, ...}) = 0 <0.000010>
stat("/home/hvacproz/public_html/acesys/cake/app_model.php", {st_mode=S_IFREG|0644, st_size=1322, ...}) = 0 <0.000010>
getcwd("/home/hvacproz/public_html/acesys", 4096) = 34 <0.000009>
open("/home/hvacproz/public_html/acesys/cake/app_model.php", O_RDONLY) = 4 <0.000010>
fstat(4, {st_mode=S_IFREG|0644, st_size=1322, ...}) = 0 <0.000009>
open("/home/hvacproz/public_html/acesys/cake/app_model.php", O_RDONLY) = 5 <0.000010>
fstat(5, {st_mode=S_IFREG|0644, st_size=1322, ...}) = 0 <0.000008>
mmap(NULL, 1322, PROT_READ, MAP_SHARED, 5, 0) = 0x7fe0abc47000 <0.000010>
munmap(0x7fe0abc47000, 1322)            = 0 <0.000011>
close(5)                                = 0 <0.000009>
fcntl(4, F_GETFL)                       = 0x8000 (flags O_RDONLY|O_LARGEFILE) <0.000009>
fstat(4, {st_mode=S_IFREG|0644, st_size=1322, ...}) = 0 <0.000008>
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe0abc47000 <0.000010>
lseek(4, 0, SEEK_CUR)                   = 0 <0.000009>
lseek(4, 0, SEEK_SET)                   = 0 <0.000010>
read(4, "<?php\n/* SVN FILE: $Id: app_model.php 4409 2007-02-02 13:20:59Z phpnut $ */\n/**\n * Application model for Cake.\n *\n * This file is application-wide model file. You can put all\n * application-wide model-related methods here.\n *\n * PHP versions 4 and 5\n *\n * CakePHP(tm) :  Rapid Development Framework <http://www.cakephp.org/>\n * Copyright 2005-2007, Cake Software Foundation, Inc.\n *\t\t\t\t\t\t\t\t1785 E. Sahara Avenue, Suite 490-204\n *\t\t\t\t\t\t\t\tLas Vegas, Nevada 89104\n *\n * Licensed under The MIT License\n * Redistributions of files must retain the above copyright notice.\n *\n * @filesource\n * @copyright\t\tCopyright 2005-2007, Cake Software Foundation, Inc.\n * @link\t\t\t\thttp://www.cakefoundation.org/projects/info/cakephp CakePHP(tm) Project\n * @package\t\t\tcake\n * @subpackage\t\tcake.cake\n * @since\t\t\tCakePHP(tm) v 0.2.9\n * @version\t\t\t$Revision: 4409 $\n * @modifiedby\t\t$LastChangedBy: phpnut $\n * @lastmodified\t$Date: 2007-02-02 07:20:59 -0600 (Fri, 02 Feb 2007) $\n * @license\t\t\thttp://www.opensource.org/licenses/mit-license.php The MIT License\n */\n/**\n * Application model for Cake.\n *\n * This is a placeholder class.\n * Create the same file in app/app_model.php\n * Add your application-wide methods to the class, your models will inherit them.\n *\n * @package\t\tcake\n * @subpackage\tcake.cake\n */\nclass AppModel extends Model{\n}\n?>", 4096) = 1322 <0.000013>
lseek(4, 1322, SEEK_SET)                = 1322 <0.000008>
read(4, "", 4096)                       = 0 <0.000008>
read(4, "", 8192)                       = 0 <0.000008>
read(4, "", 8192)                       = 0 <0.000008>
close(4)                                = 0 <0.000010>
munmap(0x7fe0abc47000, 4096)            = 0 <0.000013>
access("/home/hvacproz/public_html/acesys/app/models/login.php", F_OK) = 0 <0.000013>
lstat("/home", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html", {st_mode=S_IFDIR|0750, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000008>
lstat("/home/hvacproz/public_html/acesys/app", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/app/models", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/app/models/login.php", {st_mode=S_IFREG|0644, st_size=68, ...}) = 0 <0.000009>
stat("/home/hvacproz/public_html/acesys/app/models/login.php", {st_mode=S_IFREG|0644, st_size=68, ...}) = 0 <0.000009>
open("/home/hvacproz/public_html/acesys/app/models/login.php", O_RDONLY) = 4 <0.000010>
fstat(4, {st_mode=S_IFREG|0644, st_size=68, ...}) = 0 <0.000008>
open("/home/hvacproz/public_html/acesys/app/models/login.php", O_RDONLY) = 5 <0.000010>
fstat(5, {st_mode=S_IFREG|0644, st_size=68, ...}) = 0 <0.000008>
mmap(NULL, 68, PROT_READ, MAP_SHARED, 5, 0) = 0x7fe0abc47000 <0.000010>
munmap(0x7fe0abc47000, 68)              = 0 <0.000010>
close(5)                                = 0 <0.000009>
fcntl(4, F_GETFL)                       = 0x8000 (flags O_RDONLY|O_LARGEFILE) <0.000008>
fstat(4, {st_mode=S_IFREG|0644, st_size=68, ...}) = 0 <0.000009>
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe0abc47000 <0.000009>
lseek(4, 0, SEEK_CUR)                   = 0 <0.000008>
lseek(4, 0, SEEK_SET)                   = 0 <0.000008>
read(4, "<?php\nclass Login extends AppModel\n{\n\tvar $useTable = 'users';\n}\n?>\n", 4096) = 68 <0.000011>
lseek(4, 68, SEEK_SET)                  = 68 <0.000008>
read(4, "", 4096)                       = 0 <0.000009>
read(4, "", 8192)                       = 0 <0.000008>
read(4, "", 8192)                       = 0 <0.000008>
close(4)                                = 0 <0.000009>
munmap(0x7fe0abc47000, 4096)            = 0 <0.000013>
access("/home/hvacproz/public_html/acesys/app/models//datasources/dbo_source.php", F_OK) = -1 ENOENT (No such file or directory) <0.000012>
access("./cake/libs/model/datasources/dbo_source.php", F_OK) = 0 <0.000010>
getcwd("/home/hvacproz/public_html/acesys", 4096) = 34 <0.000009>
lstat("/home", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html", {st_mode=S_IFDIR|0750, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake/libs", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz/public_html/acesys/cake/libs/model", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake/libs/model/datasources", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake/libs/model/datasources/dbo_source.php", {st_mode=S_IFREG|0644, st_size=53305, ...}) = 0 <0.000010>
stat("/home/hvacproz/public_html/acesys/cake/libs/model/datasources/dbo_source.php", {st_mode=S_IFREG|0644, st_size=53305, ...}) = 0 <0.000009>
getcwd("/home/hvacproz/public_html/acesys", 4096) = 34 <0.000008>
open("/home/hvacproz/public_html/acesys/cake/libs/model/datasources/dbo_source.php", O_RDONLY) = 4 <0.000011>
fstat(4, {st_mode=S_IFREG|0644, st_size=53305, ...}) = 0 <0.000009>
open("/home/hvacproz/public_html/acesys/cake/libs/model/datasources/dbo_source.php", O_RDONLY) = 5 <0.000010>
fstat(5, {st_mode=S_IFREG|0644, st_size=53305, ...}) = 0 <0.000008>
mmap(NULL, 53305, PROT_READ, MAP_SHARED, 5, 0) = 0x7fe0abc3a000 <0.000011>
munmap(0x7fe0abc3a000, 53305)           = 0 <0.000013>
close(5)                                = 0 <0.000009>
fcntl(4, F_GETFL)                       = 0x8000 (flags O_RDONLY|O_LARGEFILE) <0.000009>
fstat(4, {st_mode=S_IFREG|0644, st_size=53305, ...}) = 0 <0.000009>
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe0abc47000 <0.000009>
lseek(4, 0, SEEK_CUR)                   = 0 <0.000009>
lseek(4, 0, SEEK_SET)                   = 0 <0.000009>
read(4, "<?php\n/* SVN FILE: $Id: dbo_source.php 5421 2007-07-09 04:58:57Z phpnut $ */\n/**\n * Short description for file.\n *\n * Long description for file\n *\n * PHP versions 4 and 5\n *\n * CakePHP(tm) :  Rapid Development Framework <http://www.cakephp.org/>\n * Copyright 2005-2007, Cake Software Foundation, Inc.\n *\t\t\t\t\t\t\t\t1785 E. Sahara Avenue, Suite 490-204\n *\t\t\t\t\t\t\t\tLas Vegas, Nevada 89104\n *\n * Licensed under The MIT License\n * Redistributions of files must retain the above copyright notice.\n *\n * @filesource\n * @copyright\t\tCopyright 2005-2007, Cake Software Foundation, Inc.\n * @link\t\t\t\thttp://www.cakefoundation.org/projects/info/cakephp CakePHP(tm) Project\n * @package\t\t\tcake\n * @subpackage\t\tcake.cake.libs.model.datasources\n * @since\t\t\tCakePHP(tm) v 0.10.0.1076\n * @version\t\t\t$Revision: 5421 $\n * @modifiedby\t\t$LastChangedBy: phpnut $\n * @lastmodified\t$Date: 2007-07-08 23:58:57 -0500 (Sun, 08 Jul 2007) $\n * @license\t\t\thttp://www.opensource.org/licenses/mit-license.php The MIT License\n */\nuses('set');\n/**\n * DboSource\n *\n * Creates DBO-descendant objects from a given db connection configuration\n *\n * @package\t\tcake\n * @subpackage\tcake.cake.libs.model.datasources\n */\nclass DboSource extends DataSource {\n/**\n * Description string for this Database Data Source.\n *\n * @var unknown_type\n */\n\tvar $description = \"Database Data Source\";\n/**\n * Enter description here...\n *\n * @var unknown_type\n */\n\tvar $__bypass = false;\n/**\n * Enter description here...\n *\n * @var unknown_type\n */\n\tvar $startQuote = null;\n/**\n * Enter description here...\n *\n * @var unknown_type\n */\n\tvar $endQuote = null;\n/**\n * Enter description here...\n *\n * @var unknown_type\n */\n\tvar $alias = 'AS ';\n/**\n * The set of valid SQL operations usable in a WHERE statement\n *\n * @var array\n */\n\tvar $__sqlOps = array('like', 'ilike', 'or', 'not', 'in', 'between', 'regexp', 'similar to');\n/**\n * Enter description here...\n *\n * @var unknown_type\n */\n\tvar $goofyLimit = false;\n/**\n * Constructor\n */\n\tfunction __construct($config = null, $autoConnect = true) {\n\t\t$this->debug = Co"..., 4096) = 4096 <0.000012>
lseek(4, 4096, SEEK_SET)                = 4096 <0.000009>
read(4, "stSources());\n\t\treturn $return;\n\t}\n/**\n * SQL Query abstraction\n *\n * @return resource Result resource identifier\n */\n\tfunction query() {\n\t\t$args     = func_get_args();\n\t\t$fields   = null;\n\t\t$order    = null;\n\t\t$limit    = null;\n\t\t$page     = null;\n\t\t$recursive = null;\n\n\t\tif (count($args) == 1) {\n\t\t\treturn $this->fetchAll($args[0]);\n\n\t\t} elseif (count($args) > 1 && (strpos(low($args[0]), 'findby') === 0 || strpos(low($args[0]), 'findallby') === 0)) {\n\t\t\t$params = $args[1];\n\n\t\t\tif (strpos(strtolower($args[0]), 'findby') === 0) {\n\t\t\t\t$all  = false;\n\t\t\t\t$field = Inflector::underscore(preg_replace('/findBy/i', '', $args[0]));\n\t\t\t} else {\n\t\t\t\t$all  = true;\n\t\t\t\t$field = Inflector::underscore(preg_replace('/findAllBy/i', '', $args[0]));\n\t\t\t}\n\n\t\t\t$or = (strpos($field, '_or_') !== false);\n\t\t\tif ($or) {\n\t\t\t\t$field = explode('_or_', $field);\n\t\t\t} else {\n\t\t\t\t$field = explode('_and_', $field);\n\t\t\t}\n\t\t\t$off = count($field) - 1;\n\n\t\t\tif (isset($params[1 + $off])) {\n\t\t\t\t$fields = $params[1 + $off];\n\t\t\t}\n\n\t\t\tif (isset($params[2 + $off])) {\n\t\t\t\t$order = $params[2 + $off];\n\t\t\t}\n\n\t\t\tif (!array_key_exists(0, $params)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t$c = 0;\n\t\t\t$query = array();\n\t\t\tforeach ($field as $f) {\n\t\t\t\tif (!is_array($params[$c]) && !empty($params[$c]) && $params[$c] !== true && $params[$c] !== false) {\n\t\t\t\t\t$query[$args[2]->name . '.' . $f] = '= ' . $params[$c];\n\t\t\t\t} else {\n\t\t\t\t\t$query[$args[2]->name . '.' . $f] = $params[$c];\n\t\t\t\t}\n\t\t\t\t$c++;\n\t\t\t}\n\n\t\t\tif ($or) {\n\t\t\t\t$query = array('OR' => $query);\n\t\t\t}\n\n\t\t\tif ($all) {\n\n\t\t\t\tif (isset($params[3 + $off])) {\n\t\t\t\t\t$limit = $params[3 + $off];\n\t\t\t\t}\n\n\t\t\t\tif (isset($params[4 + $off])) {\n\t\t\t\t\t$page = $params[4 + $off];\n\t\t\t\t}\n\n\t\t\t\tif (isset($params[5 + $off])) {\n\t\t\t\t\t$recursive = $params[5 + $off];\n\t\t\t\t}\n\t\t\t\treturn $args[2]->findAll($query, $fields, $order, $limit, $page, $recursive);\n\t\t\t} else {\n\t\t\t\tif (isset($params[3 + $off])) {\n\t\t\t\t\t$recursive = $params[3 + $off];\n\t\t\t\t}\n\t\t\t\treturn $args[2]->find($query, $fields, $order, $recursive);\n\t\t\t}\n\t\t} else {\n\t\t\tif (isset($args[1]) && $args[1] =="..., 4096) = 4096 <0.000010>
read(4, "_queryCache[$sql];\n\t\t\t}\n\t\t}\n\n\t\tif ($this->execute($sql)) {\n\t\t\t$out = array();\n\n\t\t\twhile ($item = $this->fetchRow()) {\n\t\t\t\t$out[] = $item;\n\t\t\t}\n\n\t\t\tif ($cache) {\n\t\t\t\tif (strpos(trim(strtolower($sql)), 'select') !== false) {\n\t\t\t\t\t$this->_queryCache[$sql] = $out;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn $out;\n\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n/**\n * Returns a single field of the first of query results for a given SQL query, or false if empty.\n *\n * @param string $name Name of the field\n * @param string $sql SQL query\n * @return unknown\n */\n\tfunction field($name, $sql) {\n\t\t$data = $this->fetchRow($sql);\n\n\t\tif (!isset($data[$name]) || empty($data[$name])) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn $data[$name];\n\t\t}\n\t}\n/**\n * Returns a quoted name of $data for use in an SQL statement.\n * Strips fields out of SQL functions before quoting.\n *\n * @param string $data\n * @return string SQL field\n */\n\tfunction name($data) {\n\t\tif (preg_match_all('/(.*)\\((.*)\\)(.*)/', $data, $fields)) {\n\t\t\t$fields = Set::extract($fields, '{n}.0');\n\t\t\tif (isset($fields[1]) && isset($fields[2])) {\n\t\t\t\treturn $fields[1] . '(' . $this->name($fields[2]) . ')' . $fields[3];\n\t\t\t}\n\t\t}\n\t\tif ($data == '*') {\n\t\t\treturn '*';\n\t\t}\n\t\t$data = $this->startQuote . str_replace('.', $this->endQuote . '.' . $this->startQuote, $data) . $this->endQuote;\n\t\t$data = str_replace($this->startQuote . $this->startQuote, $this->startQuote, $data);\n\t\treturn str_replace($this->endQuote . $this->endQuote, $this->endQuote, $data);\n\t}\n/**\n * Checks if it's connected to the database\n *\n * @return boolean True if the database is connected, else false\n */\n\tfunction isConnected() {\n\t\treturn $this->connected;\n\t}\n/**\n * Outputs the contents of the queries log.\n *\n * @param boolean $sorted\n */\n\tfunction showLog($sorted = false) {\n\t\tif ($sorted) {\n\t\t\t$log = sortByKey($this->_queriesLog, 'took', 'desc', SORT_NUMERIC);\n\t\t} else {\n\t\t\t$log = $this->_queriesLog;\n\t\t}\n\n\t\tif ($this->_queriesCnt > 1) {\n\t\t\t$text = 'queries';\n\t\t} else {\n\t\t\t$text = 'query';\n\t\t}\n\n\t\tif (php_sapi_name() != 'cli') {\n\t\t\tprint (\"<table class"..., 8192) = 8192 <0.000010>
read(4, "=& ConnectionManager::getDataSource($linkModel->useDbConfig);\n\t\t\t\t\t\t}\n\t\t\t\t\t} elseif ($model->recursive > 1 && ($type == 'belongsTo' || $type == 'hasOne')) {\n\t\t\t\t\t\t// Do recursive joins on belongsTo and hasOne relationships\n\t\t\t\t\t\t$db =& $this;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tunset ($db);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isset($db) && $db != null) {\n\t\t\t\t\t\t$stack = array($assoc);\n\t\t\t\t\t\t$db->queryAssociation($model, $linkModel, $type, $assoc, $assocData, $array, true, $resultSet, $model->recursive - 1, $stack);\n\t\t\t\t\t\tunset($db);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t$this->__filterResults($resultSet, $model, $filtered);\n\t\t}\n\n\t\tif (!is_null($recursive)) {\n\t\t\t$model->recursive = $_recursive;\n\t\t}\n\t\treturn $resultSet;\n\t}\n/**\n * Private method.  Passes association results thru afterFind filter of corresponding model\n *\n * @param unknown_type $results\n * @param unknown_type $model\n * @param unknown_type $filtered\n * @return unknown\n */\n\tfunction __filterResults(&$results, &$model, $filtered = array()) {\n\n\t\t$filtering = array();\n\t\t$associations = am($model->belongsTo, $model->hasOne, $model->hasMany, $model->hasAndBelongsToMany);\n\t\t$count = count($results);\n\n\t\tfor ($i = 0; $i < $count; $i++) {\n\t\t\tif (is_array($results[$i])) {\n\t\t\t\t$keys = array_keys($results[$i]);\n\t\t\t\t$count2 = count($keys);\n\n\t\t\t\tfor ($j = 0; $j < $count2; $j++) {\n\n\t\t\t\t\t$key = $keys[$j];\n\t\t\t\t\tif (isset($associations[$key])) {\n\t\t\t\t\t\t$className = $associations[$key]['className'];\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$className = $key;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($model->name != $className && !in_array($key, $filtered)) {\n\t\t\t\t\t\tif (!in_array($key, $filtering)) {\n\t\t\t\t\t\t\t$filtering[] = $key;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (isset($model->{$className}) && is_object($model->{$className})) {\n\t\t\t\t\t\t\t$data = $model->{$className}->afterFind(array(array($key => $results[$i][$key])), false);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (isset($data[0][$key])) {\n\t\t\t\t\t\t\t$results[$i][$key] = $data[0][$key];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn $filtering;\n\t}\n/**\n * Enter description here...\n *\n * @param Model $model\n * @param unknown_type $linkModel\n * @param string $type Association "..., 8192) = 8192 <0.000010>
read(4, "ount($row) == 1) {\n\t\t\t\t\t\t$data[$association][] = $row[$association];\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$tmp = array_merge($row[$association], $row);\n\t\t\t\t\t\tunset($tmp[$association]);\n\t\t\t\t\t\t$data[$association][] = $tmp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n/**\n * Enter description here...\n *\n * @param unknown_type $model\n * @param unknown_type $linkModel\n * @param unknown_type $type\n * @param unknown_type $association\n * @param unknown_type $assocData\n * @param unknown_type $queryData\n * @param unknown_type $external\n * @param unknown_type $resultSet\n * @return unknown\n */\n\tfunction generateSelfAssociationQuery(&$model, &$linkModel, $type, $association = null, $assocData = array(), &$queryData, $external = false, &$resultSet) {\n\t\t$alias = $association;\n\t\tif (empty($alias) && !empty($linkModel)) {\n\t\t\t$alias = $linkModel->name;\n\t\t}\n\n\t\tif (!isset($queryData['selfJoin'])) {\n\t\t\t$queryData['selfJoin'] = array();\n\n\t\t\t$self = array('fields'\t=> $this->fields($model, null, $queryData['fields']),\n\t\t\t\t\t\t\t'joins' => array(array(\n\t\t\t\t\t\t\t\t'table' => $this->fullTableName($linkModel),\n\t\t\t\t\t\t\t\t'alias' => $alias,\n\t\t\t\t\t\t\t\t'type' => 'LEFT',\n\t\t\t\t\t\t\t\t'conditions' => array($model->escapeField($assocData['foreignKey']) =>\n\t\t\t\t\t\t\t\t\t\t'{$__cakeIdentifier[' . \"{$alias}.{$linkModel->primaryKey}\" . ']__$}'))),\n\t\t\t\t\t\t\t'table' => $this->fullTableName($model),\n\t\t\t\t\t\t\t'alias' => $model->name,\n\t\t\t\t\t\t\t'limit' => $queryData['limit'],\n\t\t\t\t\t\t\t'offset'\t=> $queryData['offset'],\n\t\t\t\t\t\t\t'conditions'=> $queryData['conditions'],\n\t\t\t\t\t\t\t'order' => $queryData['order']);\n\n\t\t\tif (!empty($assocData['conditions'])) {\n\t\t\t\t$self['joins'][0]['conditions'] = trim($this->conditions(am($self['joins'][0]['conditions'], $assocData['conditions']), true, false));\n\t\t\t}\n\n\t\t\tif (!empty($queryData['joins'])) {\n\t\t\t\tforeach ($queryData['joins'] as $join) {\n\t\t\t\t\t$self['joins'][] = $join;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($this->__bypass === false) {\n\t\t\t\t$self['fields'] = am($self['fields'], $this->fields($linkModel, $alias, (isset($assocData['fields']) ? $assocData['fields'] : '')));\n\t\t\t}\n\n\t\t\tif (!in_array($self, $queryDat"..., 8192) = 8192 <0.000010>
read(4, "le' => $this->fullTableName($linkModel),\n\t\t\t\t\t'alias' => $alias,\n\t\t\t\t\t'order' => $assocData['order'],\n\t\t\t\t\t'limit' => $limit\n\t\t\t\t);\n\t\t\tbreak;\n\t\t\tcase 'hasAndBelongsToMany':\n\t\t\t\t$joinTbl = $this->fullTableName($assocData['joinTable']);\n\t\t\t\t$joinFields = array();\n\t\t\t\t$joinAssoc = null;\n\t\t\t\t$joinAlias = $joinTbl;\n\n\t\t\t\tif (isset($assocData['with']) && !empty($assocData['with'])) {\n\t\t\t\t\t$joinAssoc = $joinAlias = $model->{$assocData['with']}->name;\n\t\t\t\t\t$joinFields = $model->{$assocData['with']}->loadInfo();\n\t\t\t\t\t$joinFields = $joinFields->extract('{n}.name');\n\t\t\t\t\tif (is_array($joinFields) && !empty($joinFields)) {\n\t\t\t\t\t\t$joinFields = $this->fields($model->{$assocData['with']}, $model->{$assocData['with']}->name, $joinFields);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$query = array(\n\t\t\t\t\t'conditions' => $assocData['conditions'],\n\t\t\t\t\t'limit' => $limit,\n\t\t\t\t\t'table' => $this->fullTableName($linkModel),\n\t\t\t\t\t'alias' => $alias,\n\t\t\t\t\t'fields' => am($this->fields($linkModel, $alias, $assocData['fields']), $joinFields),\n\t\t\t\t\t'order' => $assocData['order'],\n\t\t\t\t\t'joins' => array(array(\n\t\t\t\t\t\t'table' => $joinTbl,\n\t\t\t\t\t\t'alias' => $joinAssoc,\n\t\t\t\t\t\t'conditions' => array(\n\t\t\t\t\t\t\tarray(\"{$joinAlias}.{$assocData['foreignKey']}\" => '{$__cakeID__$}'),\n\t\t\t\t\t\t\tarray(\"{$joinAlias}.{$assocData['associationForeignKey']}\" => '{$__cakeIdentifier['.\"{$alias}.{$linkModel->primaryKey}\".']__$}')\n\t\t\t\t\t\t))\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\tbreak;\n\t\t}\n\t\tif (isset($query)) {\n\t\t\treturn $this->buildStatement($query, $model);\n\t\t}\n\t\treturn null;\n\t}\n\n\tfunction buildJoinStatement($join) {\n\t\t$data = am(array(\n\t\t\t'type' => null,\n\t\t\t'alias' => null,\n\t\t\t'table' => 'join_table',\n\t\t\t'conditions' => array()\n\t\t), $join);\n\n\t\tif (!empty($data['alias'])) {\n\t\t\t$data['alias'] = $this->alias . $this->name($data['alias']);\n\t\t}\n\t\tif (!empty($data['conditions'])) {\n\t\t\t$data['conditions'] = trim($this->conditions($data['conditions'], true, false));\n\t\t}\n\t\treturn $this->renderJoinStatement($data);\n\t}\n\n\tfunction buildStatement($query, $model) {\n\t\t$query = am(array('offset' => null, 'joins' => array()), $query);\n"..., 8192) = 8192 <0.000010>
read(4, "turn $fields;\n\t\t}\n\t\t$count = count($fields);\n\n\t\tif ($count >= 1 && !in_array($fields[0], array('*', 'COUNT(*)'))) {\n\t\t\tfor ($i = 0; $i < $count; $i++) {\n\t\t\t\tif (!preg_match('/^.+\\\\(.*\\\\)/', $fields[$i])) {\n\t\t\t\t\t$prepend = '';\n\n\t\t\t\t\tif (strpos($fields[$i], 'DISTINCT') !== false) {\n\t\t\t\t\t\t$prepend   = 'DISTINCT ';\n\t\t\t\t\t\t$fields[$i] = trim(r('DISTINCT', '', $fields[$i]));\n\t\t\t\t\t}\n\t\t\t\t\t$dot = strpos($fields[$i], '.');\n\n\t\t\t\t\tif ($dot === false) {\n\t\t\t\t\t\t$fields[$i] = $prepend . $this->name($alias) . '.' . $this->name($fields[$i]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$comma = strpos($fields[$i], ',');\n\t\t\t\t\t\tif ($comma === false) {\n\t\t\t\t\t\t\t$build = explode('.', $fields[$i]);\n\t\t\t\t\t\t\tif (!Set::numeric($build)) {\n\t\t\t\t\t\t\t\t$fields[$i] = $prepend . $this->name($build[0]) . '.' . $this->name($build[1]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$comma = explode(',', $fields[$i]);\n\t\t\t\t\t\t\tforeach ($comma as $string) {\n\t\t\t\t\t\t\t\t$build = explode('.', $string);\n\t\t\t\t\t\t\t\tif (!Set::numeric($build)) {\n\t\t\t\t\t\t\t\t\t$value[] = $prepend . $this->name(trim($build[0])) . '.' . $this->name(trim($build[1]));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$fields[$i] = implode(', ', $value);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} elseif (preg_match('/\\(([\\.\\w]+)\\)/', $fields[$i], $field)) {\n\t\t\t\t\tif (isset($field[1])) {\n\t\t\t\t\t\tif (strpos($field[1], '.') === false) {\n\t\t\t\t\t\t\t$field[1] = $this->name($alias) . '.' . $this->name($field[1]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$field[0] = explode('.', $field[1]);\n\t\t\t\t\t\t\tif (!Set::numeric($field[0])) {\n\t\t\t\t\t\t\t\t$field[0] = join('.', array_map(array($this, 'name'), $field[0]));\n\t\t\t\t\t\t\t\t$fields[$i] = preg_replace('/\\(' . $field[1] . '\\)/', '(' . $field[0] . ')', $fields[$i], 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn $fields;\n\t}\n/**\n * Creates a WHERE clause by parsing given conditions data.\n *\n * @param mixed $conditions Array or string of conditions\n * @return string SQL fragment\n */\n\tfunction conditions($conditions, $quoteValues = true, $where = true) {\n\t\t$clause = $out = '';\n\t\tif (is_string($conditions) || empty($conditions) || $conditions === true) {\n\t\t\tif (empty($conditions) ||"..., 8192) = 8192 <0.000010>
read(4, " LIMIT';\n\t\t\t}\n\n\t\t\tif ($offset) {\n\t\t\t\t$rt .= ' ' . $offset . ',';\n\t\t\t}\n\n\t\t\t$rt .= ' ' . $limit;\n\t\t\treturn $rt;\n\t\t}\n\t\treturn null;\n\t}\n/**\n * Returns an ORDER BY clause as a string.\n *\n * @param string $key Field reference, as a key (i.e. Post.title)\n * @param string $direction Direction (ASC or DESC)\n * @return string ORDER BY clause\n */\n\tfunction order($keys, $direction = 'ASC') {\n\t\tif (is_string($keys) && strpos($keys, ',') && !preg_match('/\\(.+\\,.+\\)/', $keys)) {\n\t\t\t$keys = explode(',', $keys);\n\t\t\tarray_map('trim', $keys);\n\t\t}\n\n\t\tif (is_array($keys)) {\n\t\t\tforeach ($keys as $key => $val) {\n\t\t\t\tif (is_numeric($key) && empty($val)) {\n\t\t\t\t\tunset ($keys[$key]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (empty($keys) || (is_array($keys) && count($keys) && isset($keys[0]) && empty($keys[0]))) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (is_array($keys)) {\n\t\t\tif (Set::countDim($keys) > 1) {\n\t\t\t\t$new = array();\n\n\t\t\t\tforeach ($keys as $val) {\n\t\t\t\t\t$val = $this->order($val);\n\t\t\t\t\t$new[] = $val;\n\t\t\t\t}\n\n\t\t\t\t$keys = $new;\n\t\t\t}\n\n\t\t\tforeach ($keys as $key => $value) {\n\t\t\t\tif (is_numeric($key)) {\n\t\t\t\t\t$value = ltrim(r('ORDER BY ', '', $this->order($value)));\n\t\t\t\t\t$key  = $value;\n\n\t\t\t\t\tif (!preg_match('/\\\\x20ASC|\\\\x20DESC/i', $key)) {\n\t\t\t\t\t\t$value = ' ' . $direction;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$value = '';\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$value = ' ' . $value;\n\t\t\t\t}\n\n\t\t\t\tif (!preg_match('/^.+\\\\(.*\\\\)/', $key) && !strpos($key, ',')) {\n\t\t\t\t\t$dir   = '';\n\t\t\t\t\t$hasDir = preg_match('/\\\\x20ASC|\\\\x20DESC/i', $key, $dir);\n\n\t\t\t\t\tif ($hasDir) {\n\t\t\t\t\t\t$dir = $dir[0];\n\t\t\t\t\t\t$key = preg_replace('/\\\\x20ASC|\\\\x20DESC/i', '', $key);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$dir = '';\n\t\t\t\t\t}\n\t\t\t\t\t$key = trim($this->name(trim($key)) . ' ' . trim($dir));\n\t\t\t\t}\n\t\t\t\t$order[] = $this->order($key . $value);\n\t\t\t}\n\n\t\t\treturn ' ORDER BY ' . trim(r('ORDER BY', '', join(',', $order)));\n\t\t} else {\n\t\t\t$keys = preg_replace('/ORDER\\\\x20BY/i', '', $keys);\n\n\t\t\tif (strpos($keys, '.')) {\n\t\t\t\tpreg_match_all('/([a-zA-Z0-9_]{1,})\\\\.([a-zA-Z0-9_]{1,})/', $keys, $result,\n\t\t\t\t\t\t\t\t\tPREG_PATTERN_ORDER);\n\t\t\t\t$pregCount = count($result['0']);\n\n\t\t\t"..., 8192) = 4153 <0.000010>
read(4, "", 4096)                       = 0 <0.000008>
read(4, "", 8192)                       = 0 <0.000008>
read(4, "", 8192)                       = 0 <0.000009>
brk(0x1eac000)                          = 0x1eac000 <0.000010>
brk(0x1eec000)                          = 0x1eec000 <0.000013>
brk(0x1f2c000)                          = 0x1f2c000 <0.000012>
close(4)                                = 0 <0.000011>
munmap(0x7fe0abc47000, 4096)            = 0 <0.000014>
getcwd("/home/hvacproz/public_html/acesys", 4096) = 34 <0.000009>
open("/home/hvacproz/public_html/acesys/cake/libs/set.php", O_RDONLY) = 4 <0.000012>
fstat(4, {st_mode=S_IFREG|0644, st_size=19656, ...}) = 0 <0.000009>
close(4)                                = 0 <0.000009>
access("/home/hvacproz/public_html/acesys/app/models//dbo/dbo_mysql.php", F_OK) = -1 ENOENT (No such file or directory) <0.000011>
access("./cake/libs/model/dbo/dbo_mysql.php", F_OK) = 0 <0.000011>
getcwd("/home/hvacproz/public_html/acesys", 4096) = 34 <0.000009>
lstat("/home", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html", {st_mode=S_IFDIR|0750, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake/libs", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake/libs/model", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake/libs/model/dbo", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake/libs/model/dbo/dbo_mysql.php", {st_mode=S_IFREG|0644, st_size=15214, ...}) = 0 <0.000010>
stat("/home/hvacproz/public_html/acesys/cake/libs/model/dbo/dbo_mysql.php", {st_mode=S_IFREG|0644, st_size=15214, ...}) = 0 <0.000066>
getcwd("/home/hvacproz/public_html/acesys", 4096) = 34 <0.000023>
open("/home/hvacproz/public_html/acesys/cake/libs/model/dbo/dbo_mysql.php", O_RDONLY) = 4 <0.001101>
fstat(4, {st_mode=S_IFREG|0644, st_size=15214, ...}) = 0 <0.000025>
open("/home/hvacproz/public_html/acesys/cake/libs/model/dbo/dbo_mysql.php", O_RDONLY) = 5 <0.000043>
fstat(5, {st_mode=S_IFREG|0644, st_size=15214, ...}) = 0 <0.000019>
mmap(NULL, 15214, PROT_READ, MAP_SHARED, 5, 0) = 0x7fe0abc44000 <0.000013>
munmap(0x7fe0abc44000, 15214)           = 0 <0.000016>
close(5)                                = 0 <0.000009>
fcntl(4, F_GETFL)                       = 0x8000 (flags O_RDONLY|O_LARGEFILE) <0.000010>
fstat(4, {st_mode=S_IFREG|0644, st_size=15214, ...}) = 0 <0.000008>
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe0abc47000 <0.000010>
lseek(4, 0, SEEK_CUR)                   = 0 <0.000009>
lseek(4, 0, SEEK_SET)                   = 0 <0.000008>
read(4, "<?php\n/* SVN FILE: $Id: dbo_mysql.php 5317 2007-06-20 08:28:35Z phpnut $ */\n/**\n * MySQL layer for DBO\n *\n * Long description for file\n *\n * PHP versions 4 and 5\n *\n * CakePHP(tm) :  Rapid Development Framework <http://www.cakephp.org/>\n * Copyright 2005-2007, Cake Software Foundation, Inc.\n *\t\t\t\t\t\t\t\t1785 E. Sahara Avenue, Suite 490-204\n *\t\t\t\t\t\t\t\tLas Vegas, Nevada 89104\n *\n * Licensed under The MIT License\n * Redistributions of files must retain the above copyright notice.\n *\n * @filesource\n * @copyright\t\tCopyright 2005-2007, Cake Software Foundation, Inc.\n * @link\t\t\t\thttp://www.cakefoundation.org/projects/info/cakephp CakePHP(tm) Project\n * @package\t\t\tcake\n * @subpackage\t\tcake.cake.libs.model.dbo\n * @since\t\t\tCakePHP(tm) v 0.10.5.1790\n * @version\t\t\t$Revision: 5317 $\n * @modifiedby\t\t$LastChangedBy: phpnut $\n * @lastmodified\t$Date: 2007-06-20 03:28:35 -0500 (Wed, 20 Jun 2007) $\n * @license\t\t\thttp://www.opensource.org/licenses/mit-license.php The MIT License\n */\n\n/**\n * Short description for class.\n *\n * Long description for class\n *\n * @package\t\tcake\n * @subpackage\tcake.cake.libs.model.dbo\n */\nclass DboMysql extends DboSource {\n/**\n * Enter description here...\n *\n * @var unknown_type\n */\n\tvar $description = \"MySQL DBO Driver\";\n/**\n * Enter description here...\n *\n * @var unknown_type\n */\n\tvar $startQuote = \"`\";\n/**\n * Enter description here...\n *\n * @var unknown_type\n */\n\tvar $endQuote = \"`\";\n/**\n * Base configuration settings for MySQL driver\n *\n * @var array\n */\n\tvar $_baseConfig = array(\n\t\t'persistent' => true,\n\t\t'host' => 'localhost',\n\t\t'login' => 'root',\n\t\t'password' => '',\n\t\t'database' => 'cake',\n\t\t'port' => '3306',\n\t\t'connect' => 'mysql_pconnect'\n\t);\n/**\n * MySQL column definition\n *\n * @var array\n */\n\tvar $columns = array(\n\t\t'primary_key' => array('name' => 'int(11) DEFAULT NULL auto_increment'),\n\t\t'string' => array('name' => 'varchar', 'limit' => '255'),\n\t\t'text' => array('name' => 'text'),\n\t\t'integer' => array('name' => 'int', 'limit' => '11', 'formatter' => 'intval'),\n\t\t'float' => array('name' => 'float',"..., 4096) = 4096 <0.000014>
lseek(4, 4096, SEEK_SET)                = 4096 <0.000008>
read(4, "base.\n *\n * @return array Array of tablenames in the database\n */\n\tfunction listSources() {\n\t\t$cache = parent::listSources();\n\t\tif ($cache != null) {\n\t\t\treturn $cache;\n\t\t}\n\t\t$result = $this->_execute('SHOW TABLES FROM ' . $this->name($this->config['database']) . ';');\n\n\t\tif (!$result) {\n\t\t\treturn array();\n\t\t} else {\n\t\t\t$tables = array();\n\n\t\t\twhile ($line = mysql_fetch_array($result)) {\n\t\t\t\t$tables[] = $line[0];\n\t\t\t}\n\t\t\tparent::listSources($tables);\n\t\t\treturn $tables;\n\t\t}\n\t}\n/**\n * Returns an array of the fields in given table name.\n *\n * @param string $tableName Name of database table to inspect\n * @return array Fields in table. Keys are name and type\n */\n\tfunction describe(&$model) {\n\n\t\t$cache = parent::describe($model);\n\t\tif ($cache != null) {\n\t\t\treturn $cache;\n\t\t}\n\n\t\t$fields = false;\n\t\t$cols = $this->query('DESCRIBE ' . $this->fullTableName($model));\n\n\t\tforeach ($cols as $column) {\n\t\t\t$colKey = array_keys($column);\n\t\t\tif (isset($column[$colKey[0]]) && !isset($column[0])) {\n\t\t\t\t$column[0] = $column[$colKey[0]];\n\t\t\t}\n\t\t\tif (isset($column[0])) {\n\t\t\t\t$fields[] = array(\n\t\t\t\t\t'name'\t\t=> $column[0]['Field'],\n\t\t\t\t\t'type'\t\t=> $this->column($column[0]['Type']),\n\t\t\t\t\t'null'\t\t=> ($column[0]['Null'] == 'YES' ? true : false),\n\t\t\t\t\t'default'\t=> $column[0]['Default'],\n\t\t\t\t\t'length'\t=> $this->length($column[0]['Type'])\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t$this->__cacheDescription($this->fullTableName($model, false), $fields);\n\t\treturn $fields;\n\t}\n/**\n * Returns a quoted and escaped string of $data for use in an SQL statement.\n *\n * @param string $data String to be prepared for use in an SQL statement\n * @param string $column The column into which this data will be inserted\n * @param boolean $safe Whether or not numeric data should be handled automagically if no column data is provided\n * @return string Quoted and escaped data\n */\n\tfunction value($data, $column = null, $safe = false) {\n\t\t$parent = parent::value($data, $column, $safe);\n\n\t\tif ($parent != null) {\n\t\t\treturn $parent;\n\t\t}\n\n\t\tif ($data === null) {\n\t\t\treturn 'NULL';\n\t\t}\n\n\t\tif ($data =="..., 4096) = 4096 <0.000010>
read(4, "previous resultset. If no previous resultset exists,\n * this returns false.\n *\n * @return int Number of rows in resultset\n */\n\tfunction lastNumRows() {\n\t\tif ($this->_result and is_resource($this->_result)) {\n\t\t\treturn @mysql_num_rows($this->_result);\n\t\t}\n\t\treturn null;\n\t}\n/**\n * Returns the ID generated from the previous INSERT operation.\n *\n * @param unknown_type $source\n * @return in\n */\n\tfunction lastInsertId($source = null) {\n\t\t$id = $this->fetchRow('SELECT LAST_INSERT_ID() AS insertID', false);\n\t\tif ($id !== false && !empty($id) && !empty($id[0]) && isset($id[0]['insertID'])) {\n\t\t\treturn $id[0]['insertID'];\n\t\t}\n\n\t\treturn null;\n\t}\n/**\n * Converts database-layer column types to basic types\n *\n * @param string $real Real database-layer column type (i.e. \"varchar(255)\")\n * @return string Abstract column type (i.e. \"string\")\n */\n\tfunction column($real) {\n\t\tif (is_array($real)) {\n\t\t\t$col = $real['name'];\n\t\t\tif (isset($real['limit'])) {\n\t\t\t\t$col .= '('.$real['limit'].')';\n\t\t\t}\n\t\t\treturn $col;\n\t\t}\n\n\t\t$col = r(')', '', $real);\n\t\t$limit = $this->length($real);\n\t\t@list($col,$vals) = explode('(', $col);\n\n\t\tif (in_array($col, array('date', 'time', 'datetime', 'timestamp'))) {\n\t\t\treturn $col;\n\t\t}\n\t\tif ($col == 'tinyint' && $limit == 1) {\n\t\t\treturn 'boolean';\n\t\t}\n\t\tif (strpos($col, 'int') !== false) {\n\t\t\treturn 'integer';\n\t\t}\n\t\tif (strpos($col, 'char') !== false || $col == 'tinytext') {\n\t\t\treturn 'string';\n\t\t}\n\t\tif (strpos($col, 'text') !== false) {\n\t\t\treturn 'text';\n\t\t}\n\t\tif (strpos($col, 'blob') !== false) {\n\t\t\treturn 'binary';\n\t\t}\n\t\tif (in_array($col, array('float', 'double', 'decimal'))) {\n\t\t\treturn 'float';\n\t\t}\n\t\tif (strpos($col, 'enum') !== false) {\n\t\t\treturn \"enum($vals)\";\n\t\t}\n\t\tif ($col == 'boolean') {\n\t\t\treturn $col;\n\t\t}\n\t\treturn 'text';\n\t}\n/**\n * Gets the length of a database-native column description, or null if no length\n *\n * @param string $real Real database-layer column type (i.e. \"varchar(255)\")\n * @return int An integer representing the length of the column\n */\n\tfunction length($real) {\n\t\t$col = r(array(')"..., 8192) = 7022 <0.000010>
read(4, "", 4096)                       = 0 <0.000009>
read(4, "", 8192)                       = 0 <0.000008>
read(4, "", 8192)                       = 0 <0.000008>
close(4)                                = 0 <0.000013>
munmap(0x7fe0abc47000, 4096)            = 0 <0.000015>
socket(PF_LOCAL, SOCK_STREAM, 0)        = 4 <0.000018>
fcntl(4, F_SETFL, O_RDONLY)             = 0 <0.000009>
fcntl(4, F_GETFL)                       = 0x2 (flags O_RDWR) <0.000009>
fcntl(4, F_GETFL)                       = 0x2 (flags O_RDWR) <0.000008>
fcntl(4, F_SETFL, O_RDWR|O_NONBLOCK)    = 0 <0.000010>
connect(4, {sa_family=AF_LOCAL, sun_path="/var/lib/mysql/mysql.sock"}, 110) = 0 <0.000030>
fcntl(4, F_SETFL, O_RDWR)               = 0 <0.000009>
setsockopt(4, SOL_SOCKET, SO_RCVTIMEO, "\2003\341\1\0\0\0\0\0\0\0\0\0\0\0\0", 16) = 0 <0.000010>
setsockopt(4, SOL_SOCKET, SO_SNDTIMEO, "\2003\341\1\0\0\0\0\0\0\0\0\0\0\0\0", 16) = 0 <0.000009>
setsockopt(4, SOL_IP, IP_TOS, [8], 4)   = -1 EOPNOTSUPP (Operation not supported) <0.000009>
setsockopt(4, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0 <0.000009>
poll([{fd=4, events=POLLIN}], 1, 20000) = 1 ([{fd=4, revents=POLLIN}]) <0.000010>
read(4, "S\0\0\0\n5.6.40-84.0-log\0\24\314\0\0008:]D|c](\0\377\367!\2\0\177\200\25\0\0\0\0\0\0\0\0\0\0O3R$Z{{wclqu\0mysql_native_password\0", 16384) = 87 <0.000011>
stat("/usr/share/mysql/charsets/Index.xml", 0x7ffdb566b4c0) = -1 ENOENT (No such file or directory) <0.000011>
write(4, "E\0\0\1\205\242\0\0\0\0\0@\10\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0hvacproz_acesys\0\24\364\220\370Rd\205\356\234~u\330\234\264\330\253\230/\273sk", 73) = 73 <0.000014>
read(4, "\7\0\0\2\0\0\0\2\0\0\0", 16384) = 11 <0.000030>
poll([{fd=4, events=POLLIN|POLLPRI}], 1, 0) = 0 (Timeout) <0.000009>
write(4, "\20\0\0\0\2hvacproz_acesys", 20) = 20 <0.000011>
read(4, "\7\0\0\1\0\0\0\2\0\0\0", 16384) = 11 <0.000016>
access("/home/hvacproz/public_html/acesys/app/tmp/cache/models/default_hvacproz_acesys_list", F_OK) = -1 ENOENT (No such file or directory) <0.000012>
access("/home/hvacproz/public_html/acesys/app/tmp/cache/models/default_hvacproz_acesys_list", F_OK) = -1 ENOENT (No such file or directory) <0.000009>
poll([{fd=4, events=POLLIN|POLLPRI}], 1, 0) = 0 (Timeout) <0.000009>
write(4, "$\0\0\0\3SHOW TABLES FROM `hvacproz_acesys`;", 40) = 40 <0.000012>
read(4, "\1\0\0\1\1a\0\0\2\3def\22information_schema\vTABLE_NAMES\vTABLE_NAMES\31Tables_in_hvacproz_acesys\nTABLE_NAME\f\10\0@\0\0\0\375\1\0\0\0\0\5\0\0\3\376\0\0\"\0\17\0\0\4\16ace_ac_heading\20\0\0\5\17ace_ac_headings\r\0\0\6\face_ac_pages\23\0\0\7\22ace_ac_pages_users\20\0\0\10\17ace_ac_switches\26\0\0\t\25ace_ac_switches_users\r\0\0\n\face_ac_users\10\0\0\v\7ace_dnc\16\0\0\f\race_iv_assets\16\0\0\r\race_iv_brands\22\0\0\16\21ace_iv_categories\31\0\0\17\30ace_iv_category_settings\17\0\0\20\16ace_iv_invoice\26\0\0\21\25ace_iv_invoice_status\r\0\0\22\face_iv_items\22\0\0\23\21ace_iv_items_sold\21\0\0\24\20ace_iv_locations\21\0\0\25\20ace_iv_movements\24\0\0\26\23ace_iv_refund_price\v\0\0\27\nace_iv_sku\21\0\0\30\20ace_iv_suppliers \0\0\31\37ace_iv_transaction_summary_view\24\0\0\32\23ace_iv_transactions\r\0\0\33\face_iv_types\24\0\0\34\23ace_latest_done_job\21\0\0\35\20ace_mailgun_elog\17\0\0\36\16ace_rp_answers\30\0\0\37\27ace_rp_answers_invoices\26\0\0 \25ace_rp_answers_orders\25\0\0!\24ace_rp_apply_methods\21\0\0\"\20ace_rp_behaviors\r\0\0#\face_rp_board\24\0\0$\23ace_rp_call_history\24\0\0%\23ace_rp_call_results\34\0\0&\33ace_rp_cancellation_reasons\r\0\0'\face_rp_cards\f\0\0(\vace_rp_chat\16\0\0)\race_rp_cities\22\0\0*\21ace_rp_city_areas\31\0\0+\30ace_rp_comm_total_adjust\33\0\0,\32ace_rp_commission_division\36\0\0-\35ace_rp_commission_person_type\30\0\0.\27ace_rp_commission_roles\33\0\0/\32ace_rp_commission_settings\30\0\0000\27ace_rp_commission_types\23\0\0001\22ace_rp_commissions\31\0\0002\30ace_rp_commissions_roles\31\0\0003\30ace_rp_commissions_types\31\0\0004\30ace_rp_commissions_users\17\0\0005\16ace_rp_coupons\f\0\0006\vace_rp_crtc\21\0\0007\20ace_rp_customers\36\0\0008\35ace_rp_customers_combined_ids\16\0\0009\race_rp_cyphon\23\0\0:\22ace_rp_cyphon_seed\21\0\0;\20ace_rp_decisions\22\0\0<\21ace_rp_descriptor\v\0\0=\nace_rp_dnc\30\0\0>\27ace_rp_efficiency_ratio\33\0\0?\32ace_rp_email_confirmations\30\0\0@\27ace_rp_email_portfolios\16\0\0A\race_rp_eprint\20\0\0B\17ace_rp_expenses\26\0\0C\25ace_rp_feedback_types\21\0\0D\20ace_rp_feedbacks\16\0\0E\race_rp_groups\24\0\0F\23ace_rp_groups_users\21\0\0G\20ace_rp_hourslots\22\0\0H\21ace_rp_hourslots2\21\0\0I\20ace_rp_interface\31\0\0J\30ace_rp_inventory_changes\31\0\0K\30ace_rp_inventory_default\32\0\0L\31ace_rp_inventory_docitems\33\0\0M\32ace_rp_inventory_documents\33\0\0N\32ace_rp_inventory_locations\37\0\0O\36ace_rp_inventory_request_items\32\0\0P\31ace_rp_inventory_requests\27\0\0Q\26ace_rp_inventory_start\30\0\0R\27ace_rp_inventory_states\20\0\0S\17ace_rp_invoices\32\0\0T\31ace_rp_invoices_questions\27\0\0U\26ace_rp_item_"..., 16384) = 4766 <0.000703>
access("/home/hvacproz/public_html/acesys/app/tmp/cache/models/default_hvacproz_acesys_list", F_OK) = -1 ENOENT (No such file or directory) <0.000015>
lstat("/home", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz/public_html", {st_mode=S_IFDIR|0750, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/app", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz/public_html/acesys/app/tmp", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz/public_html/acesys/app/tmp/cache", 0x7ffdb5668fb0) = -1 ENOENT (No such file or directory) <0.000009>
open("/home/hvacproz/public_html/acesys/app/tmp/cache/models/default_hvacproz_acesys_list", O_WRONLY|O_CREAT|O_TRUNC, 0666) = -1 ENOENT (No such file or directory) <0.000011>
brk(0x1f81000)                          = 0x1f81000 <0.000011>
access("/home/hvacproz/public_html/acesys/app/tmp/cache/models/default_ace_rp_users", F_OK) = -1 ENOENT (No such file or directory) <0.000012>
access("/home/hvacproz/public_html/acesys/app/tmp/cache/models/default_ace_rp_users", F_OK) = -1 ENOENT (No such file or directory) <0.000010>
poll([{fd=4, events=POLLIN|POLLPRI}], 1, 0) = 0 (Timeout) <0.000009>
write(4, "\30\0\0\0\3DESCRIBE `ace_rp_users`", 28) = 28 <0.000013>
read(4, "\1\0\0\1\6F\0\0\2\3def\22information_schema\7COLUMNS\7COLUMNS\5Field\vCOLUMN_NAME\f\10\0@\0\0\0\375\1\0\0\0\0E\0\0\3\3def\22information_schema\7COLUMNS\7COLUMNS\4Type\vCOLUMN_TYPE\f\10\0\375\377\2\0\374\21\0\0\0\0E\0\0\4\3def\22information_schema\7COLUMNS\7COLUMNS\4Null\vIS_NULLABLE\f\10\0\3\0\0\0\375\1\0\0\0\0C\0\0\5\3def\22information_schema\7COLUMNS\7COLUMNS\3Key\nCOLUMN_KEY\f\10\0\3\0\0\0\375\1\0\0\0\0K\0\0\6\3def\22information_schema\7COLUMNS\7COLUMNS\7Default\16COLUMN_DEFAULT\f\10\0\375\377\2\0\374\20\0\0\0\0@\0\0\7\3def\22information_schema\7COLUMNS\7COLUMNS\5Extra\5EXTRA\f\10\0\36\0\0\0\375\1\0\0\0\0\5\0\0\10\376\0\0\"\0+\0\0\t\2id\20int(10) unsigned\2NO\3PRI\373\16auto_increment!\0\0\n\vcard_number\vvarchar(50)\2NO\3MUL\0\0\25\0\0\v\10card_exp\4date\3YES\0\373\0\31\0\0\f\fnext_service\4date\3YES\0\373\0\36\0\0\r\nfirst_name\fvarchar(255)\2NO\0\0\0\35\0\0\16\tlast_name\fvarchar(255)\2NO\0\0\0\36\0\0\17\vpostal_code\vvarchar(10)\2NO\0\0\0\31\0\0\20\5email\fvarchar(255)\2NO\0\0\0\33\0\0\21\7address\fvarchar(255)\2NO\0\0\0\27\0\0\22\4city\vvarchar(20)\2NO\0\0\0\30\0\0\23\5state\vvarchar(20)\2NO\0\0\0\33\0\0\24\5phone\vvarchar(20)\2NO\3MUL\0\0\35\0\0\25\ncell_phone\vvarchar(20)\2NO\0\0\0\25\0\0\26\6credit\5float\3YES\0\0010\0\30\0\0\27\7created\10datetime\3YES\0\373\0\31\0\0\30\10modified\10datetime\3YES\0\373\0\34\0\0\31\10username\vvarchar(50)\3YES\0\373\0\34\0\0\32\10password\vvarchar(50)\3YES\0\373\0+\0\0\33\17telemarketer_id\20int(11) unsigned\2NO\3MUL\0010\0\32\0\0\34\rcallback_date\4date\3YES\0\373\0\32\0\0\35\rcallback_time\4time\3YES\0\373\0\32\0\0\36\rlastcall_date\4date\3YES\0\373\0\31\0\0\37\rcallback_note\4text\2NO\0\373\0\32\0\0 \ncallresult\7int(11)\2NO\0\0010\0%\0\0!\tis_active\23tinyint(1) unsigned\2NO\0\0011\0\32\0\0\"\7role_id\7int(10)\3YES\3MUL\373\0#\0\0#\17commission_type\ntinyint(4)\3YES\0\0011\0\36\0\0$\vtech_status\ntinyint(2)\2NO\0\0010\0\"\0\0%\16business_phone\vvarchar(20)\3YES\0\373\0\27\0\0&\nbirth_date\4date\3YES\0\373\0\30\0\0'\vhiring_date\4date\3YES\0\373\0\"\0\0(\remployer_name\fvarchar(100)\3YES\0\373\0&\0\0)\nhouse_type\23tinyint(1) unsigned\3YES\0\373\0%\0\0*\21warranty_contract\vvarchar(32)\3YES\0\373\0\37\0\0+\16binary_picture\10longtext\3YES\0\373\0\33\0\0,\16qualifications\4text\3YES\0\373\0\31\0\0-\fintroduction\4text\3YES\0\373\0\27\0\0.\nexperience\4text\3YES\0\373\0\23\0\0/\6skills\4text\3YES\0\373\0\22\0\0000\5about\4text\3YES\0\373\0\22\0\0001\5goals\4text\3YES\0\373\0\24\0\0002\7hobbies\4text\3YES\0\373\0%\0\0003\fextension_id\20int(10) unsigned\3YES\0\373\0&\0\0004\finterface_id\20int(10) unsigned\3YES\0\0011\0#\0\0005\teprint_id\20int(10) unsigned\3YES\0\0011\0$\0\0006\17vicidial_userid\fvarchar(200)\3YES\0\373\0\33\0\0007\6pitach\fvarchar(225)\3YES\0\373\0\33\0\0008\7phoneid\fvarchar(225)\2NO\0\373\0!\0\0009\rphonepassword\fvarchar(225)\2NO\0\373\0\35\0\0:"..., 16384) = 2153 <0.000641>
access("/home/hvacproz/public_html/acesys/app/tmp/cache/models/default_ace_rp_users", F_OK) = -1 ENOENT (No such file or directory) <0.000015>
lstat("/home", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz/public_html", {st_mode=S_IFDIR|0750, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/app", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/app/tmp", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz/public_html/acesys/app/tmp/cache", 0x7ffdb5668700) = -1 ENOENT (No such file or directory) <0.000009>
open("/home/hvacproz/public_html/acesys/app/tmp/cache/models/default_ace_rp_users", O_WRONLY|O_CREAT|O_TRUNC, 0666) = -1 ENOENT (No such file or directory) <0.000010>
poll([{fd=4, events=POLLIN|POLLPRI}], 1, 0) = 0 (Timeout) <0.000012>
write(4, "\307\1\0\0\3SELECT a.id,a.show_board,concat(a.first_name,' ',a.last_name) as name ,a.email,b.role_id as role_id, a.interface_id, c.style_sheet,a.vicidial_userid,\n\t\t\t\t\t\t\t\t\tCONCAT(HEX(a.id), HEX(a.username)) web_key, eprint_id\n\t\t\t\t\t\t\t\t\tFROM ace_rp_users as a\n\t\t\t\t\t\t\t\t\tINNER JOIN ace_rp_users_roles as b ON (a.id = b.user_id)\n\t\t\t\t\t\t\t\t\tLEFT JOIN ace_rp_interface c ON a.interface_id = c.id\n\t\t\t\t\t\t\t\t\tWHERE a.username = 'ali' and is_active=1 AND a.password = 'Pro' limit 1", 459) = 459 <0.000014>
read(4, "\1\0\0\1\n6\0\0\2\3def\17hvacproz_acesys\1a\face_rp_users\2id\2id\f?\0\n\0\0\0\3#B\0\0\0F\0\0\3\3def\17hvacproz_acesys\1a\face_rp_users\nshow_board\nshow_board\f?\0\4\0\0\0\1\1\0\0\0\0\32\0\0\4\3def\0\0\0\4name\0\f\10\0\377\1\0\0\375\1\0\37\0\0<\0\0\5\3def\17hvacproz_acesys\1a\face_rp_users\5email\5email\f\10\0\377\0\0\0\375\1\0\0\0\0F\0\0\6\3def\17hvacproz_acesys\1b\22ace_rp_users_roles\7role_id\7role_id\f?\0\n\0\0\0\3#@\0\0\0J\0\0\7\3def\17hvacproz_acesys\1a\face_rp_users\finterface_id\finterface_id\f?\0\n\0\0\0\3 \0\0\0\0L\0\0\10\3def\17hvacproz_acesys\1c\20ace_rp_interface\vstyle_sheet\vstyle_sheet\f\10\0\377\377\0\0\374\20\20\0\0\0P\0\0\t\3def\17hvacproz_acesys\1a\face_rp_users\17vicidial_userid\17vicidial_userid\f\10\0\310\0\0\0\375\0\0\0\0\0\35\0\0\n\3def\0\0\0\7web_key\0\f\10\0x\0\0\0\375\0\0\37\0\0D\0\0\v\3def\17hvacproz_acesys\1a\face_rp_users\teprint_id\teprint_id\f?\0\n\0\0\0\3 \0\0\0\0\5\0\0\f\376\0\0\"\0\5\0\0\r\376\0\0\"\0", 16384) = 670 <0.000016>
access("/home/hvacproz/public_html/acesys/app/views/login/index.thtml", F_OK) = 0 <0.000013>
stat("/home/hvacproz/public_html/acesys/app/views/login/index.thtml", {st_mode=S_IFREG|0644, st_size=717, ...}) = 0 <0.000015>
access("/home/hvacproz/public_html/acesys/app/config/tags.ini.php", F_OK) = -1 ENOENT (No such file or directory) <0.000012>
access("/home/hvacproz/public_html/acesys/app/views/helpers/html.php", F_OK) = -1 ENOENT (No such file or directory) <0.000012>
access("./cake/libs/view/helpers/html.php", F_OK) = 0 <0.000012>
access("./cake/libs/view/helpers/html.php", F_OK) = 0 <0.000010>
getcwd("/home/hvacproz/public_html/acesys", 4096) = 34 <0.000009>
lstat("/home", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html", {st_mode=S_IFDIR|0750, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz/public_html/acesys", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake/libs", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake/libs/view", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake/libs/view/helpers", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz/public_html/acesys/cake/libs/view/helpers/html.php", {st_mode=S_IFREG|0644, st_size=48983, ...}) = 0 <0.000009>
stat("/home/hvacproz/public_html/acesys/cake/libs/view/helpers/html.php", {st_mode=S_IFREG|0644, st_size=48983, ...}) = 0 <0.000017>
getcwd("/home/hvacproz/public_html/acesys", 4096) = 34 <0.000009>
open("/home/hvacproz/public_html/acesys/cake/libs/view/helpers/html.php", O_RDONLY) = 5 <0.000012>
fstat(5, {st_mode=S_IFREG|0644, st_size=48983, ...}) = 0 <0.000008>
open("/home/hvacproz/public_html/acesys/cake/libs/view/helpers/html.php", O_RDONLY) = 6 <0.000010>
fstat(6, {st_mode=S_IFREG|0644, st_size=48983, ...}) = 0 <0.000008>
mmap(NULL, 48983, PROT_READ, MAP_SHARED, 6, 0) = 0x7fe0abc3c000 <0.000012>
munmap(0x7fe0abc3c000, 48983)           = 0 <0.000014>
close(6)                                = 0 <0.000009>
fcntl(5, F_GETFL)                       = 0x8000 (flags O_RDONLY|O_LARGEFILE) <0.000008>
fstat(5, {st_mode=S_IFREG|0644, st_size=48983, ...}) = 0 <0.000009>
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe0abc47000 <0.000010>
lseek(5, 0, SEEK_CUR)                   = 0 <0.000008>
lseek(5, 0, SEEK_SET)                   = 0 <0.000008>
read(5, "<?php\r\n/* SVN FILE: $Id: html.php 5317 2007-06-20 08:28:35Z phpnut $ */\r\n/**\r\n * Html Helper class file.\r\n *\r\n * Simplifies the construction of HTML elements.\r\n *\r\n * CakePHP(tm) :  Rapid Development Framework <http://www.cakephp.org/>\r\n * Copyright 2005-2007, Cake Software Foundation, Inc.\r\n *\t\t\t\t\t\t\t\t1785 E. Sahara Avenue, Suite 490-204\r\n *\t\t\t\t\t\t\t\tLas Vegas, Nevada 89104\r\n *\r\n * Licensed under The MIT License\r\n * Redistributions of files must retain the above copyright notice.\r\n *\r\n * @filesource\r\n * @copyright\t\tCopyright 2005-2007, Cake Software Foundation, Inc.\r\n * @link\t\t\t\thttp://www.cakefoundation.org/projects/info/cakephp CakePHP(tm) Project\r\n * @package\t\t\tcake\r\n * @subpackage\t\tcake.cake.libs.view.helpers\r\n * @since\t\t\tCakePHP(tm) v 0.9.1\r\n * @version\t\t\t$Revision: 5317 $\r\n * @modifiedby\t\t$LastChangedBy: phpnut $\r\n * @lastmodified\t$Date: 2007-06-20 03:28:35 -0500 (Wed, 20 Jun 2007) $\r\n * @license\t\t\thttp://www.opensource.org/licenses/mit-license.php The MIT License\r\n */\r\n/**\r\n * Html Helper class for easy use of HTML widgets.\r\n *\r\n * HtmlHelper encloses all methods needed while working with HTML pages.\r\n *\r\n * @package\t\tcake\r\n * @subpackage\tcake.cake.libs.view.helpers\r\n */\r\nclass HtmlHelper extends Helper {\r\n/**\r\n * Base URL\r\n *\r\n * @var string\r\n * @access public\r\n */\r\n\tvar $base = null;\r\n/**\r\n * URL to current action.\r\n *\r\n * @var string\r\n * @access public\r\n */\r\n\tvar $here = null;\r\n/**\r\n * Parameter array.\r\n *\r\n * @var array\r\n * @access public\r\n */\r\n\tvar $params = array();\r\n/**\r\n * Current action.\r\n *\r\n * @var string\r\n * @access public\r\n */\r\n\tvar $action = null;\r\n/**\r\n * Controller::data;\r\n *\r\n * @var array\r\n * @access public\r\n */\r\n\tvar $data = null;\r\n/**\r\n * Name of model this helper is attached to.\r\n *\r\n * @var string\r\n * @access public\r\n */\r\n\tvar $model = null;\r\n/**\r\n *\r\n * @var string\r\n * @access public\r\n */\r\n\tvar $field = null;\r\n/**\r\n * Breadcrumbs.\r\n *\r\n * @var\tarray\r\n * @access protected\r\n */\r\n\tvar $_crumbs = array();\r\n/**\r\n * Adds a link to the breadcrumbs array.\r\n *\r\n * @param string $name Text for l"..., 4096) = 4096 <0.000013>
lseek(5, 4096, SEEK_SET)                = 4096 <0.000009>
read(5, "lative URL, or external URL (starts with http://)\r\n * @param  array\t$htmlAttributes Array of HTML attributes.\r\n * @param  string  $confirmMessage Confirmation message.\r\n * @param  boolean $escapeTitle\tWhether or not the text in the $title variable should be HTML escaped.\r\n * @param  boolean $return Wheter this method should return a value or output it. This overrides AUTO_OUTPUT.\r\n * @return mixed\tEither string or echos the value, depends on AUTO_OUTPUT and $return.\r\n * @access public\r\n */\r\n\tfunction link($title, $url = null, $htmlAttributes = array(), $confirmMessage = false, $escapeTitle = true, $return = false) {\r\n\t\tif ($escapeTitle === true) {\r\n\t\t\t$title = htmlspecialchars($title, ENT_QUOTES);\r\n\t\t} elseif (is_string($escapeTitle)) {\r\n\t\t\t$title = htmlentities($title, ENT_QUOTES);\r\n\t\t}\r\n\t\t$url = $url ? $url : $title;\r\n\r\n\t\tif ($confirmMessage) {\r\n\t\t\t$confirmMessage = str_replace(\"'\", \"\\'\", $confirmMessage);\r\n\t\t\t$confirmMessage = str_replace('\"', '\\\"', $confirmMessage);\r\n\t\t\t$htmlAttributes['onclick']=\"return confirm('{$confirmMessage}');\";\r\n\t\t}\r\n\r\n\t\tif (((strpos($url, '://')) || (strpos($url, 'javascript:') === 0) || (strpos($url, 'mailto:') === 0) || substr($url,0,1) == '#')) {\r\n\t\t\t$output = sprintf($this->tags['link'], $url, $this->_parseAttributes($htmlAttributes), $title);\r\n\t\t} else {\r\n\t\t\t$output = sprintf($this->tags['link'], $this->url($url, true), $this->_parseAttributes($htmlAttributes), $title);\r\n\t\t}\r\n\t\treturn $this->output($output, $return);\r\n\t}\r\n/**\r\n * Creates a submit widget.\r\n *\r\n * @param  string  $caption Text on submit button\r\n * @param  array\t$htmlAttributes Array of HTML attributes.\r\n * @param  boolean $return Wheter this method should return a value or output it. This overrides AUTO_OUTPUT.\r\n * @return mixed\tEither string or echos the value, depends on AUTO_OUTPUT and $return.\r\n * @access public\r\n */\r\n\tfunction submit($caption = 'Submit', $htmlAttributes = array(), $return = false) {\r\n\t\t$htmlAttributes['value'] = $caption;\r\n\t\treturn $this->output(sprintf($this->tags['submit'], $this->_parseAtt"..., 4096) = 4096 <0.000009>
read(5, "gIsInvalid($this->model, $this->field)) {\r\n\t\t\tif (isset($htmlAttributes['class']) && trim($htmlAttributes['class']) != \"\") {\r\n\t\t\t\t$htmlAttributes['class'] .= ' form_error';\r\n\t\t\t} else {\r\n\t\t\t\t$htmlAttributes['class'] = 'form_error';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn $this->output(sprintf($this->tags['textarea'], $this->model, $this->field, $this->_parseAttributes($htmlAttributes, null, ' '), $value), $return);\r\n\t}\r\n/**\r\n * Creates a checkbox widget.\r\n *\r\n * @param  string  $fieldName Name of a field, like this \"Modelname/fieldname\"\r\n * @deprecated  string  $title\r\n * @param  array\t$htmlAttributes Array of HTML attributes.\r\n * @param  boolean $return\tWheter this method should return a value or output it. This overrides AUTO_OUTPUT.\r\n * @return mixed\tEither string or echos the value, depends on AUTO_OUTPUT and $return.\r\n * @access public\r\n */\r\n\tfunction checkbox($fieldName, $title = null, $htmlAttributes = array(), $return = false) {\r\n\t\t$value = $this->tagValue($fieldName);\r\n\t\t$notCheckedValue = 0;\r\n\r\n\t\tif (!isset($htmlAttributes['id'])) {\r\n\t\t\t$htmlAttributes['id'] = $this->model . Inflector::camelize($this->field);\r\n\t\t}\r\n\r\n\t\tif (isset($htmlAttributes['checked'])) {\r\n\t\t\tif ($htmlAttributes['checked'] == 'checked' || intval($htmlAttributes['checked']) === 1 || $htmlAttributes['checked'] === true) {\r\n\t\t\t\t$htmlAttributes['checked'] = 'checked';\r\n\t\t\t} else {\r\n\t\t\t\t$htmlAttributes['checked'] = null;\r\n\t\t\t\t$notCheckedValue = -1;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (isset($htmlAttributes['value']) || (!class_exists($this->model) && !loadModel($this->model))) {\r\n\t\t\t\t$htmlAttributes['checked'] = ($htmlAttributes['value'] == $value) ? 'checked' : null;\r\n\r\n\t\t\t\tif ($htmlAttributes['value'] == '0') {\r\n\t\t\t\t\t$notCheckedValue = -1;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t$model = new $this->model;\r\n\t\t\t\t$db =& ConnectionManager::getDataSource($model->useDbConfig);\r\n\t\t\t\t$value = $db->boolean($value);\r\n\t\t\t\t$htmlAttributes['checked'] = $value ? 'checked' : null;\r\n\t\t\t\t$htmlAttributes['value'] = 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t$output = $this->hidden($fieldName, array('value' => $notChecked"..., 8192) = 8192 <0.000010>
read(5, "N elements (as 'value'=>'Text' pairs) to be used in the SELECT element\r\n * @param mixed $selected Selected option\r\n * @param array $selectAttr Array of HTML options for the opening SELECT element\r\n * @param array $optionAttr Array of HTML options for the enclosed OPTION elements\r\n * @param boolean $show_empty If true, the empty select option is shown\r\n * @param  boolean $return         Whether this method should return a value\r\n * @return string Formatted SELECT element\r\n * @access public\r\n */\r\n\tfunction selectTag($fieldName, $optionElements, $selected = null, $selectAttr = array(), $optionAttr = null, $showEmpty = true, $return = false) {\r\n\t\t$this->setFormTag($fieldName);\r\n\t\tif ($this->tagIsInvalid($this->model, $this->field)) {\r\n\t\t\tif (isset($selectAttr['class']) && trim($selectAttr['class']) != \"\") {\r\n\t\t\t\t$selectAttr['class'] .= ' form_error';\r\n\t\t\t} else {\r\n\t\t\t\t$selectAttr['class'] = 'form_error';\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!isset($selectAttr['id'])) {\r\n\t\t\t$selectAttr['id'] = $this->model . Inflector::camelize($this->field);\r\n\t\t}\r\n\r\n\t\tif (!is_array($optionElements)) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tif (!isset($selected)) {\r\n\t\t\t$selected = $this->tagValue($fieldName);\r\n\t\t}\r\n\r\n\t\tif (isset($selectAttr) && array_key_exists(\"multiple\", $selectAttr)) {\r\n\t\t\t$select[] = sprintf($this->tags['selectmultiplestart'], $this->model, $this->field, $this->parseHtmlOptions($selectAttr));\r\n\t\t} else {\r\n\t\t\t$select[] = sprintf($this->tags['selectstart'], $this->model, $this->field, $this->parseHtmlOptions($selectAttr));\r\n\t\t}\r\n\r\n\t\tif ($showEmpty == true) {\r\n\t\t\t$select[] = sprintf($this->tags['selectempty'], $this->parseHtmlOptions($optionAttr));\r\n\t\t}\r\n\r\n\t\tforeach ($optionElements as $name => $title) {\r\n\t\t\t$optionsHere = $optionAttr;\r\n\r\n\t\t\tif (($selected != null) && ($selected == $name)) {\r\n\t\t\t\t$optionsHere['selected'] = 'selected';\r\n\t\t\t} elseif (is_array($selected) && in_array($name, $selected)) {\r\n\t\t\t\t$optionsHere['selected'] = 'selected';\r\n\t\t\t}\r\n\r\n\t\t\t$select[] = sprintf($this->tags['selectoption'], $name, $this->parseHtmlOptions($optionsHere)"..., 8192) = 8192 <0.000010>
read(5, "mpty($selected) ? ($showEmpty ? NULL : date('H')) : $selected;\r\n\t\t} else {\r\n\t\t\t$hourValue = empty($selected) ? ($showEmpty ? NULL : date('g')) : $selected;\r\n\t\t\tif (isset($selected) && intval($hourValue) == 0 && !$showEmpty) {\r\n\t\t\t\t$hourValue = 12;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ($format24Hours) {\r\n\t\t\t$hours = array(\r\n\t\t\t/*'00' => '00', \r\n\t\t\t'01' => '01', \r\n\t\t\t'02' => '02', \r\n\t\t\t'03' => '03', \r\n\t\t\t'04' => '04', \r\n\t\t\t'05' => '05', \r\n\t\t\t'06' => '06', \r\n\t\t\t'07' => '07', */\r\n\t\t\t'08' => ' 8 AM', \r\n\t\t\t'09' => ' 9 AM', \r\n\t\t\t'10' => '10 AM', \r\n\t\t\t'11' => '11 AM', \r\n\t\t\t'12' => '12 PM', \r\n\t\t\t'13' => ' 1 PM', \r\n\t\t\t'14' => ' 2 PM', \r\n\t\t\t'15' => ' 3 PM', \r\n\t\t\t'16' => ' 4 PM', \r\n\t\t\t'17' => ' 5 PM', \r\n\t\t\t'18' => ' 6 PM', \r\n\t\t\t'19' => ' 7 PM', \r\n\t\t\t'20' => ' 8 PM'/*, \r\n\t\t\t'21' => ' 9 PM', \r\n\t\t\t'22' => '10 PM', \r\n\t\t\t'23' => '11 PM'*/);\r\n\t\t} else {\r\n\t\t\t$hours = array('01' => '1', '02' => '2', '03' => '3', '04' => '4', '05' => '5', '06' => '6', '07' => '7', '08' => '8', '09' => '9', '10' => '10', '11' => '11', '12' => '12');\r\n\t\t}\r\n\r\n\t\t$option = $this->selectTag($tagName . \"_hour\", $hours, $hourValue, $selectAttr, $optionAttr, $showEmpty);\r\n\t\treturn $option;\r\n\t}\r\n/**\r\n * Returns a SELECT element for minutes.\r\n *\r\n * @param string $tagName Prefix name for the SELECT element\r\n * @deprecated  string $value\r\n * @param string $selected Option which is selected.\r\n * @param array $optionAttr Attribute array for the option elements.\r\n * @return mixed\r\n * @access public\r\n */\r\n\tfunction minuteOptionTag($tagName, $value = null, $selected = null, $selectAttr = null, $optionAttr = null, $showEmpty = true) {\r\n\t\tif (empty($selected) && ($this->tagValue($tagName))) {\r\n\t\t\t$selected = date('i', strtotime($this->tagValue($tagName)));\r\n\t\t}\r\n\t\t$minValue = empty($selected) ? ($showEmpty ? NULL : date('i')) : $selected;\r\n\r\n\t\tfor ($minCount = 0; $minCount < 60; $minCount++) {\r\n\t\t\t$mins[sprintf('%02d', $minCount)] = sprintf('%02d', $minCount);\r\n\t\t}\r\n\t\t\r\n\t\t//$mins = array('00'=>'00', '15'=>'15', '30'=>'30', '45'=>'45');\r\n\t\t$mins = array(\r\n\t\t\t'00'=>'00', \r\n\t\t\t'01'=>'01',\r"..., 8192) = 8192 <0.000010>
read(5, "nuteAttr, $optionAttr, $showEmpty) . ' ' .\r\n\t\t\t\t$this->meridianOptionTag($tagName, null, $meridian, $selectMeridianAttr, $optionAttr, $showEmpty);\r\n\t\t\tbreak;\r\n\t\t\tcase 'NONE':\r\n\t\t\tdefault:\r\n\t\t\t\t$opt .= '';\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\treturn $opt;\r\n\t}\r\n/**\r\n * Returns a row of formatted and named TABLE headers.\r\n *\r\n * @param array $names\t\tArray of tablenames.\r\n * @param array $trOptions\tHTML options for TR elements.\r\n * @param array $thOptions\tHTML options for TH elements.\r\n * @param  boolean $return\tWheter this method should return a value\r\n * @return string\r\n * @access public\r\n */\r\n\tfunction tableHeaders($names, $trOptions = null, $thOptions = null, $return = false) {\r\n\t\t$out = array();\r\n\t\tforeach ($names as $arg) {\r\n\t\t\t$out[] = sprintf($this->tags['tableheader'], $this->parseHtmlOptions($thOptions), $arg);\r\n\t\t}\r\n\r\n\t\t$data = sprintf($this->tags['tablerow'], $this->parseHtmlOptions($trOptions), join(' ', $out));\r\n\t\treturn $this->output($data, $return);\r\n\t}\r\n/**\r\n * Returns a formatted string of table rows (TR's with TD's in them).\r\n *\r\n * @param array $data\t\tArray of table data\r\n * @param array $oddTrOptionsHTML options for odd TR elements\r\n * @param array $evenTrOptionsHTML options for even TR elements\r\n * @param  boolean $return\tWheter this method should return a value\r\n * @return string\tFormatted HTML\r\n * @access public\r\n */\r\n\tfunction tableCells($data, $oddTrOptions = null, $evenTrOptions = null, $return = false) {\r\n\t\tif (empty($data[0]) || !is_array($data[0])) {\r\n\t\t\t$data = array($data);\r\n\t\t}\r\n\t\tstatic $count = 0;\r\n\r\n\t\tforeach ($data as $line) {\r\n\t\t\t$count++;\r\n\t\t\t$cellsOut = array();\r\n\r\n\t\t\tforeach ($line as $cell) {\r\n\t\t\t\t$cellsOut[] = sprintf($this->tags['tablecell'], null, $cell);\r\n\t\t\t}\r\n\t\t\t$options = $this->parseHtmlOptions($count % 2 ? $oddTrOptions : $evenTrOptions);\r\n\t\t\t$out[] = sprintf($this->tags['tablerow'], $options, join(' ', $cellsOut));\r\n\t\t}\r\n\t\treturn $this->output(join(\"\\n\", $out), $return);\r\n\t}\r\n/**\r\n * Generates a nested unordered list tree from an array.\r\n *\r\n * @param array\t$data\r\n * @param array\t$ht"..., 8192) = 8192 <0.000011>
read(5, "elper::textarea()\r\n */\r\n\tfunction areaTag($tagName, $cols = 60, $rows = 10, $htmlAttributes = array(), $return = false) {\r\n\t\t$htmlAttributes['cols']=$cols;\r\n\t\t$htmlAttributes['rows']=$rows;\r\n\t\treturn $this->textarea($tagName, $htmlAttributes, $return);\r\n\t}\r\n/**\r\n * @deprecated Name changed to 'charset'. Version 0.9.2.\r\n * @see\t\tHtmlHelper::charset()\r\n */\r\n\tfunction charsetTag($charset, $return = false) {\r\n\t\treturn $this->charset($charset, $return);\r\n\t}\r\n/**\r\n * @deprecated Name changed to 'checkbox'. Version 0.9.2.\r\n * @see\t\tHtmlHelper::checkbox()\r\n */\r\n\tfunction checkboxTag($fieldName, $title = null, $htmlAttributes = array(), $return = false) {\r\n\t\treturn $this->checkbox($fieldName, $title, $htmlAttributes, $return);\r\n\t}\r\n/**\r\n * @deprecated Name changed to 'css'. Version 0.9.2.\r\n * @see HtmlHelper::css()\r\n */\r\n\tfunction cssTag($path, $rel = 'stylesheet', $htmlAttributes = array(), $return = false) {\r\n\t\treturn $this->css($path, $rel, $htmlAttributes, $return);\r\n\t}\r\n/**\r\n * @deprecated Name changed to 'file'. Version 0.9.2.\r\n * @see HtmlHelper::file()\r\n */\r\n\tfunction fileTag($fieldName, $htmlAttributes = array(), $return = false) {\r\n\t\treturn $this->file($fieldName, $htmlAttributes, $return);\r\n\t}\r\n/**\r\n * @deprecated Name changed to 'hidden'. Version 0.9.2.\r\n * @see\t\tHtmlHelper::hidden()\r\n */\r\n\tfunction hiddenTag($tagName, $value = null, $htmlOptions = null) {\r\n\t\t$this->setFormTag($tagName);\r\n\t\t$htmlOptions['value'] = $value ? $value : $this->tagValue($tagName);\r\n\t\treturn $this->output(sprintf($this->tags['hidden'], $this->model, $this->field, $this->parseHtmlOptions($htmlOptions, null, '', ' ')));\r\n\t}\r\n/**\r\n * @deprecated Name changed to 'image'. Version 0.9.2.\r\n * @see\t\tHtmlHelper::image()\r\n */\r\n\tfunction imageTag($path, $alt = null, $htmlAttributes = array(), $return = false) {\r\n\t\t$htmlAttributes['alt'] = $alt;\r\n\t\treturn $this->image($path, $htmlAttributes, $return);\r\n\t}\r\n/**\r\n * @deprecated Name changed to 'input'. Version 0.9.2.\r\n * @see HtmlHelper::input()\r\n */\r\n\tfunction inputTag($tagName, $size = 20, $html"..., 8192) = 8023 <0.000010>
read(5, "", 4096)                       = 0 <0.000008>
read(5, "", 8192)                       = 0 <0.000008>
read(5, "", 8192)                       = 0 <0.000009>
brk(0x1fc1000)                          = 0x1fc1000 <0.000010>
brk(0x2001000)                          = 0x2001000 <0.000011>
brk(0x2041000)                          = 0x2041000 <0.000011>
close(5)                                = 0 <0.000010>
munmap(0x7fe0abc47000, 4096)            = 0 <0.000014>
access("/home/hvacproz/public_html/acesys/app/views/helpers/session.php", F_OK) = -1 ENOENT (No such file or directory) <0.000012>
access("./cake/libs/view/helpers/session.php", F_OK) = 0 <0.000011>
access("./cake/libs/view/helpers/session.php", F_OK) = 0 <0.000010>
getcwd("/home/hvacproz/public_html/acesys", 4096) = 34 <0.000009>
lstat("/home", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html", {st_mode=S_IFDIR|0750, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake/libs", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake/libs/view", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake/libs/view/helpers", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/cake/libs/view/helpers/session.php", {st_mode=S_IFREG|0644, st_size=4224, ...}) = 0 <0.000009>
stat("/home/hvacproz/public_html/acesys/cake/libs/view/helpers/session.php", {st_mode=S_IFREG|0644, st_size=4224, ...}) = 0 <0.000009>
getcwd("/home/hvacproz/public_html/acesys", 4096) = 34 <0.000008>
open("/home/hvacproz/public_html/acesys/cake/libs/view/helpers/session.php", O_RDONLY) = 5 <0.000011>
fstat(5, {st_mode=S_IFREG|0644, st_size=4224, ...}) = 0 <0.000009>
open("/home/hvacproz/public_html/acesys/cake/libs/view/helpers/session.php", O_RDONLY) = 6 <0.000010>
fstat(6, {st_mode=S_IFREG|0644, st_size=4224, ...}) = 0 <0.000008>
mmap(NULL, 4224, PROT_READ, MAP_SHARED, 6, 0) = 0x7fe0abc46000 <0.000011>
munmap(0x7fe0abc46000, 4224)            = 0 <0.000011>
close(6)                                = 0 <0.000009>
fcntl(5, F_GETFL)                       = 0x8000 (flags O_RDONLY|O_LARGEFILE) <0.000008>
fstat(5, {st_mode=S_IFREG|0644, st_size=4224, ...}) = 0 <0.000008>
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe0abc47000 <0.000010>
lseek(5, 0, SEEK_CUR)                   = 0 <0.000008>
lseek(5, 0, SEEK_SET)                   = 0 <0.000009>
read(5, "<?php\n/* SVN FILE: $Id: session.php 4757 2007-04-04 08:24:30Z phpnut $ */\n/**\n * Short description for file.\n *\n * Long description for file\n *\n * PHP versions 4 and 5\n *\n * CakePHP(tm) :  Rapid Development Framework <http://www.cakephp.org/>\n * Copyright 2005-2007, Cake Software Foundation, Inc.\n *\t\t\t\t\t\t\t\t1785 E. Sahara Avenue, Suite 490-204\n *\t\t\t\t\t\t\t\tLas Vegas, Nevada 89104\n *\n * Licensed under The MIT License\n * Redistributions of files must retain the above copyright notice.\n *\n * @filesource\n * @copyright\t\tCopyright 2005-2007, Cake Software Foundation, Inc.\n * @link\t\t\t\thttp://www.cakefoundation.org/projects/info/cakephp CakePHP(tm) Project\n * @package\t\t\tcake\n * @subpackage\t\tcake.cake.libs.view.helpers\n * @since\t\t\tCakePHP(tm) v 1.1.7.3328\n * @version\t\t\t$Revision: 4757 $\n * @modifiedby\t\t$LastChangedBy: phpnut $\n * @lastmodified\t$Date: 2007-04-04 03:24:30 -0500 (Wed, 04 Apr 2007) $\n * @license\t\t\thttp://www.opensource.org/licenses/mit-license.php The MIT License\n */\n/**\n * Session Helper.\n *\n * Session reading from the view.\n *\n * @package\t\tcake\n * @subpackage\tcake.cake.libs.view.helpers\n *\n */\nclass SessionHelper extends CakeSession {\n/**\n * List of helpers used by this helper\n *\n * @var array\n */\n\tvar $helpers = null;\n/**\n * Used to determine if methods implementation is used, or bypassed\n *\n * @var boolean\n */\n\tvar $__active = true;\n/**\n * Class constructor\n *\n * @param string $base\n */\n\tfunction __construct($base = null) {\n\t\tif (!defined('AUTO_SESSION') || AUTO_SESSION === true) {\n\t\t\tparent::__construct($base, false);\n\t\t} else {\n\t\t\t$this->__active = false;\n\t\t}\n\t}\n/**\n * Turn sessions on if AUTO_SESSION is set to false in core.php\n *\n * @param string $base\n */\n\tfunction activate($base = null) {\n\t\t$this->__active = true;\n\t}\n/**\n * Used to read a session values set in a controller for a key or return values for all keys.\n *\n * In your view: $session->read('Controller.sessKey');\n * Calling the method without a param will return all session vars\n *\n * @param string $name the name of the session key you want to re"..., 4096) = 4096 <0.000012>
lseek(5, 4096, SEEK_SET)                = 4096 <0.000008>
read(5, "eturn boolean\n * @access public\n */\n\tfunction valid() {\n\t\tif ($this->__active === true) {\n\t\t\treturn parent::valid();\n\t\t}\n\t}\n}\n?>", 4096) = 128 <0.000009>
read(5, "", 4096)                       = 0 <0.000008>
read(5, "", 8192)                       = 0 <0.000009>
read(5, "", 8192)                       = 0 <0.000009>
close(5)                                = 0 <0.000037>
munmap(0x7fe0abc47000, 4096)            = 0 <0.000013>
lstat("/home", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html", {st_mode=S_IFDIR|0750, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/app", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/app/views", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/app/views/login", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz/public_html/acesys/app/views/login/index.thtml", {st_mode=S_IFREG|0644, st_size=717, ...}) = 0 <0.000009>
stat("/home/hvacproz/public_html/acesys/app/views/login/index.thtml", {st_mode=S_IFREG|0644, st_size=717, ...}) = 0 <0.000009>
open("/home/hvacproz/public_html/acesys/app/views/login/index.thtml", O_RDONLY) = 5 <0.000011>
fstat(5, {st_mode=S_IFREG|0644, st_size=717, ...}) = 0 <0.000009>
open("/home/hvacproz/public_html/acesys/app/views/login/index.thtml", O_RDONLY) = 6 <0.000010>
fstat(6, {st_mode=S_IFREG|0644, st_size=717, ...}) = 0 <0.000009>
mmap(NULL, 717, PROT_READ, MAP_SHARED, 6, 0) = 0x7fe0abc47000 <0.000010>
munmap(0x7fe0abc47000, 717)             = 0 <0.000011>
close(6)                                = 0 <0.000009>
fcntl(5, F_GETFL)                       = 0x8000 (flags O_RDONLY|O_LARGEFILE) <0.000008>
fstat(5, {st_mode=S_IFREG|0644, st_size=717, ...}) = 0 <0.000009>
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe0abc47000 <0.000010>
lseek(5, 0, SEEK_CUR)                   = 0 <0.000008>
lseek(5, 0, SEEK_SET)                   = 0 <0.000008>
read(5, "<div class=\"wrapper\">\n<form action=\"<?php echo BASE_URL ?>/login\" method=\"post\">\n\t<?php if($message != \"\") { ?>\n    <div class=\"<?php echo $message_type ?>\"><?php echo $message; ?></div>\n    <?php } ?>\n    <div class=\"padding3\"><label for=\"LoginUsername\">Username:</label><?php echo $html->input('Login/username'); ?></div>\n    <div class=\"padding3\"><label for=\"LoginPassword\">Password:</label><?php echo $html->input('Login/password', array(\"type\"=>\"password\")); ?></div>\n    <div class=\"padding3 right_align\"><input type=\"submit\" value=\"Login\" class=\"buttons\"></div>\n</form>\n<script>\ndocument.getElementById('LoginUsername').focus();\n</script>\n</div><!-- end of wrapper -->\n<?php echo $_SERVER['HTTP_USER_AGENT'] ?>", 4096) = 717 <0.000012>
lseek(5, 717, SEEK_SET)                 = 717 <0.000008>
read(5, "", 4096)                       = 0 <0.000009>
read(5, "", 8192)                       = 0 <0.000008>
read(5, "", 8192)                       = 0 <0.000008>
close(5)                                = 0 <0.000010>
munmap(0x7fe0abc47000, 4096)            = 0 <0.000013>
access("/home/hvacproz/public_html/acesys/app/views/layouts/login.thtml", F_OK) = 0 <0.000013>
stat("/home/hvacproz/public_html/acesys/app/views/layouts/login.thtml", {st_mode=S_IFREG|0644, st_size=662, ...}) = 0 <0.000011>
lstat("/home", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz/public_html", {st_mode=S_IFDIR|0750, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz/public_html/acesys/app", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000010>
lstat("/home/hvacproz/public_html/acesys/app/views", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/app/views/layouts", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000009>
lstat("/home/hvacproz/public_html/acesys/app/views/layouts/login.thtml", {st_mode=S_IFREG|0644, st_size=662, ...}) = 0 <0.000009>
stat("/home/hvacproz/public_html/acesys/app/views/layouts/login.thtml", {st_mode=S_IFREG|0644, st_size=662, ...}) = 0 <0.000010>
open("/home/hvacproz/public_html/acesys/app/views/layouts/login.thtml", O_RDONLY) = 5 <0.000011>
fstat(5, {st_mode=S_IFREG|0644, st_size=662, ...}) = 0 <0.000008>
open("/home/hvacproz/public_html/acesys/app/views/layouts/login.thtml", O_RDONLY) = 6 <0.000010>
fstat(6, {st_mode=S_IFREG|0644, st_size=662, ...}) = 0 <0.000008>
mmap(NULL, 662, PROT_READ, MAP_SHARED, 6, 0) = 0x7fe0abc47000 <0.000011>
munmap(0x7fe0abc47000, 662)             = 0 <0.000011>
close(6)                                = 0 <0.000009>
fcntl(5, F_GETFL)                       = 0x8000 (flags O_RDONLY|O_LARGEFILE) <0.000008>
fstat(5, {st_mode=S_IFREG|0644, st_size=662, ...}) = 0 <0.000009>
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe0abc47000 <0.000010>
lseek(5, 0, SEEK_CUR)                   = 0 <0.000008>
lseek(5, 0, SEEK_SET)                   = 0 <0.000008>
read(5, "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n<title><?php echo $title_for_layout?></title>\r\n<?php echo $scripts_for_layout ?>\r\n<link rel=\"stylesheet\" type=\"text/css\" media=\"all\" href=\"<?=ROOT_URL;?>/app/webroot/css/handheld.css\" />\r\n<link rel=\"stylesheet\" type=\"text/css\" media=\"all\" href=\"<?=ROOT_URL;?>/app/webroot/css/login.css\" />\r\n<meta name=\"viewport\" content=\"width=device-width\" />\r\n</head>\r\n\r\n<body>\r\n<?php echo $content_for_layout?>\r\n</body>\r\n</html>", 4096) = 662 <0.000011>
lseek(5, 662, SEEK_SET)                 = 662 <0.000008>
read(5, "", 4096)                       = 0 <0.000009>
read(5, "", 8192)                       = 0 <0.000009>
read(5, "", 8192)                       = 0 <0.000008>
close(5)                                = 0 <0.000009>
munmap(0x7fe0abc47000, 4096)            = 0 <0.000013>
write(1, "P3P: CP=\"NOI ADM DEV PSAi COM NAV OUR OTRo STP IND DEM\"", 55) = 55 <0.000022>
write(1, "\r\n", 2)                     = 2 <0.000021>
write(1, "Content-type: text/html", 23) = 23 <0.000010>
write(1, "\r\n", 2)                     = 2 <0.000009>
write(1, "\r\n", 2)                     = 2 <0.000009>
write(1, "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n<title>Login</title>\r\n<link rel=\"stylesheet\" type=\"text/css\" media=\"all\" href=\"/acesys/app/webroot/css/handheld.css\" />\r\n<link rel=\"stylesheet\" type=\"text/css\" media=\"all\" href=\"/acesys/app/webroot/css/login.css\" />\r\n<meta name=\"viewport\" content=\"width=device-width\" />\r\n</head>\r\n\r\n<body>\r\n<div class=\"wrapper\">\n<form action=\"/acesys/index.php/login\" method=\"post\">\n\t    <div class=\"bad_message\">Username or password is incorrect</div>\n        <div class=\"padding3\"><label for=\"LoginUsername\">Username:</label><input name=\"data[Login][username]\"  value=\"ali\" type=\"text\" id=\"LoginUsername\" /></div>\n    <div class=\"padding3\"><label for=\"LoginPassword\">Password:</label><input name=\"data[Login][password]\"  type=\"password\" value=\"Pro\" id=\"LoginPassword\" /></div>\n    <div class=\"padding3 right_align\"><input type=\"submit\" value=\"Login\" class=\"buttons\"></div>\n</form>\n<script>\ndocument.getElementById('LoginUsername').focus();\n</script>\n</div><!-- end of wrapper -->\nMozilla/5.0 (Macintosh; Intel Mac OS X 10.11; rv:64.0) Gecko/20100101 Firefox/64.0</body>\r\n</html>", 1311) = 1311 <0.000010>
lstat("/var", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0 <0.000010>
lstat("/var/lib", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000010>
lstat("/var/lib/sec", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0 <0.000010>
lstat("/var/lib/sec/primary.php", {st_mode=S_IFREG|0644, st_size=4340, ...}) = 0 <0.000010>
stat("/var/lib/sec/primary.php", {st_mode=S_IFREG|0644, st_size=4340, ...}) = 0 <0.000010>
open("/var/lib/sec/primary.php", O_RDONLY) = 5 <0.000011>
fstat(5, {st_mode=S_IFREG|0644, st_size=4340, ...}) = 0 <0.000009>
open("/var/lib/sec/primary.php", O_RDONLY) = 6 <0.000010>
fstat(6, {st_mode=S_IFREG|0644, st_size=4340, ...}) = 0 <0.000008>
mmap(NULL, 4340, PROT_READ, MAP_SHARED, 6, 0) = 0x7fe0abc46000 <0.000010>
munmap(0x7fe0abc46000, 4340)            = 0 <0.000011>
close(6)                                = 0 <0.000009>
fcntl(5, F_GETFL)                       = 0x8000 (flags O_RDONLY|O_LARGEFILE) <0.000008>
fstat(5, {st_mode=S_IFREG|0644, st_size=4340, ...}) = 0 <0.000009>
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe0abc47000 <0.000009>
lseek(5, 0, SEEK_CUR)                   = 0 <0.000008>
lseek(5, 0, SEEK_SET)                   = 0 <0.000008>
read(5, "<?php\n\terror_reporting(0);\n\n\t$php_ver = phpversion();\n\t$php_ver_major = $php_ver[0];\n\n\t// PHP 4 class_exists() have one parameter less so we need special compatability function\n\tif (!function_exists(\"__class_exists\")) {\n\t\tfunction __class_exists($class_name) {\n\t\t\tglobal $php_ver_major;\n\t\t\treturn $php_ver_major == 4\n\t\t\t\t   ? class_exists($class_name)\n\t\t\t\t   : class_exists($class_name, false);\n\t\t}\n\t}\n\n\t// json_encode() function appears in PHP 5.2 we need replacement for older versions\n\tif (!function_exists(\"json_encode\")) {\n\t\tfunction a74ce9b9ffdebe0331d8e43e97206424_json_encode_string($in_str) {\n\t\t\t$in_str = str_replace(\"\\\\\",\"\\\\\\\\\",$in_str);\n\t\t\tmb_internal_encoding(\"UTF-8\");\n\t\t\t$convmap = array(0x80, 0xFFFF, 0, 0xFFFF);\n\t\t\t$str = \"\";\n\t\t\tfor($i=mb_strlen($in_str)-1; $i>=0; $i--) {\n\t\t\t\t$mb_char = mb_substr($in_str, $i, 1);\n\t\t\t\tif (mb_ereg(\"&#(\\\\d+);\", mb_encode_numericentity($mb_char, $convmap, \"UTF-8\"), $match)) {\n\t\t\t\t\t$str = sprintf(\"\\\\u%04x\", $match[1]) . $str;\n\t\t\t\t} else {\n\t\t\t\t\t$str = $mb_char . $str;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn str_replace(\"/\",\"\\\\/\",$str);\n\t\t}\n\n\t\tfunction json_encode($val) {\n\t\t\tif (is_string($val)) return '\"'.a74ce9b9ffdebe0331d8e43e97206424_json_encode_string($val).'\"';\n\t\t\tif (is_numeric($val)) return $val;\n\t\t\tif ($val === null) return 'null';\n\t\t\tif ($val === true) return 'true';\n\t\t\tif ($val === false) return 'false';\n\t\t\t$assoc = false;\n\t\t\t$i = 0;\n\t\t\tforeach ($val as $k => $v) {\n\t\t\t\tif ($k !== $i++) {\n\t\t\t\t\t$assoc = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t$res = array();\n\t\t\tforeach ($val as $k=>$v) {\n\t\t\t\t$v = json_encode($v);\n\t\t\t\tif ($assoc){\n\t\t\t\t\t$k = '\"'.a74ce9b9ffdebe0331d8e43e97206424_json_encode_string($k).'\"';\n\t\t\t\t\t$v = $k.':'.$v;\n\t\t\t\t}\n\t\t\t\t$res[] = $v;\n\t\t\t}\n\t\t\t$res = implode(',', $res);\n\t\t\treturn ($assoc) ? '{'.$res.'}' : '['.$res.']';\n\t\t}\n\t}\n\n\tfunction a74ce9b9ffdebe0331d8e43e97206424($app, $path, $plugin=\"\") {\n\t\tif (!($resource = msg_get_queue(283854818)))\n\t\t\treturn;\n\n\t\t// FreeJoomla fix - we are chrooted in user's home folder on these servers\n\t\tif (isset($_SERVER[\"FCGI_ROLE\"]))\n\t\t\t$path = \"/home/\".g"..., 4096) = 4096 <0.000012>
lseek(5, 4096, SEEK_SET)                = 4096 <0.000008>
read(5, "f (!function_exists(\"c74ce9b9ffdebe0331d8e43e97206424\") && (defined(\"PHP_VERSION_ID\") && PHP_VERSION_ID >= 50300)) {\n\t\t$prepend_lib = dirname(__FILE__) . \"/prepend.php\";\n\t\tif (is_readable($prepend_lib)) {\n\t\t\t@require_once($prepend_lib);\n\t\t}\n\t}\n", 4096) = 244 <0.000009>
read(5, "", 4096)                       = 0 <0.000008>
read(5, "", 8192)                       = 0 <0.000008>
read(5, "", 8192)                       = 0 <0.000009>
close(5)                                = 0 <0.000010>
munmap(0x7fe0abc47000, 4096)            = 0 <0.000014>
rt_sigaction(SIGPIPE, {SIG_IGN, [PIPE], SA_RESTORER|SA_RESTART, 0x382fe302d0}, {SIG_IGN, [PIPE], SA_RESTORER|SA_RESTART, 0x382fe302d0}, 8) = 0 <0.000010>
poll([{fd=4, events=POLLIN|POLLPRI}], 1, 0) = 0 (Timeout) <0.000009>
write(4, "\1\0\0\0\1", 5)               = 5 <0.000014>
shutdown(4, SHUT_RDWR)                  = 0 <0.000009>
close(4)                                = 0 <0.000014>
rt_sigaction(SIGPIPE, {SIG_IGN, [PIPE], SA_RESTORER|SA_RESTART, 0x382fe302d0}, {SIG_IGN, [PIPE], SA_RESTORER|SA_RESTART, 0x382fe302d0}, 8) = 0 <0.000009>
lseek(3, 0, SEEK_SET)                   = 0 <0.000009>
write(3, "Config|a:3:{s:9:\"userAgent\";s:32:\"7d6889cb4f2690365a2d4e5b8434a5d8\";s:4:\"time\";i:1547804492;s:4:\"rand\";i:1983706736;}message|s:0:\"\";message_type|s:0:\"\";", 152) = 152 <0.000020>
close(3)                                = 0 <0.000011>
brk(0x1f81000)                          = 0x1f81000 <0.000038>
setitimer(ITIMER_PROF, {it_interval={0, 0}, it_value={0, 0}}, NULL) = 0 <0.000010>
munmap(0x7fe0aa653000, 1126144)         = 0 <0.000020>
munmap(0x7fe0aa766000, 2106448)         = 0 <0.000013>
munmap(0x3c5b800000, 2110728)           = 0 <0.000015>
munmap(0x7fe0aa969000, 2258984)         = 0 <0.000019>
munmap(0x7fe0aab91000, 3354192)         = 0 <0.000062>
munmap(0x7fe0aaec4000, 2154256)         = 0 <0.000017>
munmap(0x7fe0ab0d2000, 2149032)         = 0 <0.000016>
munmap(0x7fe0ab2df000, 2485600)         = 0 <0.000031>
munmap(0x7fe0ab53e000, 2107480)         = 0 <0.000014>
munmap(0x7fe0ab9ef000, 2192976)         = 0 <0.000043>
munmap(0x7fe0ab741000, 2808944)         = 0 <0.000058>
exit_group(0)                           = ?
+++ exited with 0 +++
