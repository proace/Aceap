<script type="text/javascript" src="<?=ROOT_URL;?>/app/webroot/js/jquery-ui-1.8.4.custom.min.js"></script>
<script type="text/javascript" src="<?=ROOT_URL;?>/app/webroot/js/jquery-1.5.1.min.js"></script>
<script type="text/javascript" src="<?=ROOT_URL;?>/app/webroot/js/bria_api_constants.js"></script>
<script type="text/javascript" src="<?=ROOT_URL;?>/app/webroot/js/jquery-ui-1.8.21.custom.min.js"></script>
<script type="text/javascript" src="<?=ROOT_URL;?>/app/webroot/js/bria_api_js_sample.js"></script>
<link type="text/css" href="<?=ROOT_URL;?>/app/webroot/css/overcast/jquery-ui-1.8.4.custom.css" rel="stylesheet" />
<link rel="stylesheet" type="text/css" media="all" href="<?=ROOT_URL;?>/app/webroot/css/ui-smooth/jquery-ui-1.8.13.custom.css" />
<link href="<?=ROOT_URL;?>/app/webroot/new-dialler-css/font-awesome.css" rel="stylesheet" type="text/css">
<script language="JavaScript" src="<?=ROOT_URL;?>/app/webroot/js/tinymce/tinymce.min.js"></script>
<style type="text/css">
    .li_2 {
        border-left: 2px solid white;
    }
    
    .li_3 {
        border-left: 2px solid white;
    }
    
    .group:before,
    .group:after {
        content: "";
        display: table;
    }
    
    .group:after {
        clear: both;
    }
    
    .cell1 td {
        background: #e3e3e3;
    }
    
    .tabs {
        list-style: none;
        width: 660px;
    }
    
    .tabs li {
        /* Makes a horizontal row */
        float: left;
        /* So the psueudo elements can be
			   abs. positioned inside */
    }
    
    .tabs a {
        /* Make them block level
		     and only as wide as they need */
        float: left;
        padding: 10px 40px;
        text-decoration: none;
        /* Default colors */
        color: black;
        background: lightblue;
        /* Only round the top corners */
        -webkit-border-top-left-radius: 15px;
        -webkit-border-top-right-radius: 15px;
        -moz-border-radius-topleft: 15px;
        -moz-border-radius-topright: 15px;
        border-top-left-radius: 15px;
        border-top-right-radius: 15px;
    }
    
    .tabs .active {
        /* Highest, active tab is on top */
        z-index: 3;
    }
    
    .tabs .active a {
        /* Colors when tab is active */
        background: #065AB0;
        color: black;
    }
    
    .tabs li:before,
    .tabs li:after,
    .tabs li a:before,
    .tabs li a:after {
        /* All pseudo elements are 
		     abs. positioned and on bottom */
        bottom: 0;
    }
    
    .tabs .active:before,
    .tabs .active:after {
        background: white;
        /* Squares below circles */
        z-index: 1;
    }
    /* Squares */
    
    .tabs li:before,
    .tabs li:after {
        background: lightblue;
        width: 10px;
        height: 10px;
    }
    
    .tabs li:before {
        left: -10px;
    }
    
    .tabs li:after {
        right: -10px;
    }
    /* Circles */
    
    .tabs li a:after,
    .tabs li a:before {
        width: 20px;
        height: 20px;
        /* Circles are circular */
        -webkit-border-radius: 10px;
        -moz-border-radius: 10px;
        border-radius: 10px;
        background: #222;
        /* Circles over squares */
        z-index: 2;
    }
    
    .tabs .active a:after,
    .tabs .active a:before {
        background: lightblue;
    }
    /* First and last tabs have different
		   outside color needs */
    
    .tabs li:first-child.active a:before,
    .tabs li:last-child.active a:after {
        background: #222;
    }
    
    .tabs li a:before {
        left: -20px;
    }
    
    .tabs li a:after {
        right: -20px;
    }
    
    th {
        cursor: pointer;
    }
    
    .reminder_data_table {
        width: 100%;
        border: 1px solid black;
        border-collapse: collapse;
    }
    
    .reminder_data_table td {
        text-align: left;
        border: 1px solid black;
        border-collapse: collapse;
        background: #FFFF99;
    }
    
    .reminder_data_table th {
        text-align: left;
        border: 1px solid black;
        border-collapse: collapse;
        background: #666666;
        color: #ffffff;
    }
    
    .reminder-modal {
        display: none;
        /* Hidden by default */
        position: absolute;
        /* Stay in place */
        z-index: 1;
        /* Sit on top */
        padding-top: 100px;
        /* Location of the box */
        left: 0;
        top: 0;
        width: 100%;
        /* Full width */
        height: 100%;
        /* Full height */
        overflow: auto;
        /* Enable scroll if needed */
        background-color: rgb(0, 0, 0);
        /* Fallback color */
        background-color: rgba(0, 0, 0, 0.4);
        /* Black w/ opacity */
    }
    
    .modal-content {
        background-color: #fefefe;
        margin: auto;
        padding: 20px;
        border: 1px solid #888;
        width: 30%;
    }
    /* Modal Content */
    
    .reminder-modal-content {
        background-color: #fefefe;
        /*margin: auto;*/
        margin: 100px 200px 100px 200px;
        padding: 20px;
        border: 1px solid #888;
        width: 55%;
        /*height: 30%;*/
    }
    
    .estimate_ul li.active {
        background: gray;
    }
    
    .estimate_ul li {
        cussor: pointer;
    }
</style>
<script>
    function addTinyMCE(ele) {
        tinyMCE.init({
            selector: ele,
            // mode: 'textareas',
            file_picker_types: 'file image media',
            theme: "modern",
            browser_spellcheck: true,
            plugins: "code,safari,pagebreak,style,layer,table,save,advhr,advimage,advlink,emotions,iespell,inlinepopups,insertdatetime,preview,media,searchreplace,print,contextmenu,paste,directionality,fullscreen,visualchars,nonbreaking,xhtmlxtras,template,imagemanager,filemanager, nanospell, link unlink, anchor, image, media,textcolor",
            toolbar: "forecolor backcolor link image code bold italic formatselect numlist bullist indent outdent underline alignleft aligncenter alignright table ",
            external_plugins: {
                "nanospell": "plugins/nanospell/plugin.js"
            },
            nanospell_server: "php", // choose "php" "asp" "asp.net" or "java"
            // Theme options
            theme_advanced_buttons1: "save,newdocument,|,bold,italic,underline,strikethrough,|,justifyleft,justifycenter,justifyright,justifyfull,|,styleselect,formatselect,fontselect,fontsizeselect,|nanospell",
            theme_advanced_buttons2: "cut,copy,paste,pastetext,pasteword,|,search,replace,|,bullist,numlist,|,outdent,indent,blockquote,|,undo,redo,|,link,unlink,anchor,image,cleanup,help,code,|,insertdate,inserttime,preview,|,forecolor,backcolor",
            theme_advanced_buttons3: "tablecontrols,|,hr,removeformat,visualaid,|,sub,sup,|,charmap,emotions,iespell,media,advhr,|,print,|,ltr,rtl,|,fullscreen",
            theme_advanced_buttons4: "insertlayer,moveforward,movebackward,absolute,|,styleprops,spellchecker,|,cite,abbr,acronym,del,ins,attribs,|,visualchars,nonbreaking,template,blockquote,pagebreak,|,insertfile,insertimage",
            theme_advanced_toolbar_location: "top",
            theme_advanced_toolbar_align: "right",
            theme_advanced_statusbar_location: "bottom",
            theme_advanced_resizing: true,

            // Example content CSS (should be your site CSS)
            content_css: "css/example.css",
            toolbar_drawer: 'sliding',
            convert_urls: true,
            height: 250,
            template_external_list_url: "js/template_list.js",
            external_link_list_url: "js/link_list.js",
            external_image_list_url: "js/image_list.js",
            media_external_list_url: "js/media_list.js",
            gecko_spellcheck: true,
            browser_spellcheck: true
        });
    }
    $(document).ready(function() {

        var no_es = $('#estimateTab tbody').length;

        $('.no_of_es').html(no_es);

        // $("#myTable").makeSortable();
        // $('th').click(function(){
        //    	var table = $(this).parents('table').eq(0)
        //     var rows = table.find('tr:gt(0)').toArray().sort(comparer($(this).index()))
        //     this.asc = !this.asc
        //     if (!this.asc){rows = rows.reverse()}
        //     for (var i = 0; i < rows.length; i++){table.append(rows[i])}
        // });
        // $('th').click(function(){
        //    	var table = $(this).parents('table').eq(0)

        // });


        $('#save-reminder-email').live("click", function() {
            var orderId = $("#orderId").val();
            var reminderDate = $("#reminder-date").val();
            var remiderNote = $("#reminder-message").val();

            $.ajax({
                url: '<?=BASE_URL?>/reports/setReminderCallback',
                dataType: 'html',
                type: 'POST',
                cache: false,
                data: {
                    reminderDate: reminderDate,
                    remiderNote: remiderNote,
                    orderId: orderId
                },
                success: function(data) {
                    res = JSON.parse(data);
                    if (res.res == "OK") {
                        hideInvoiceReview();
                        document.forms['estimateForm'].submit();
                    }
                }
            });
        });

        $('#edit-reminder-email').live("click", function() {
            var callbackId = $("#callback_Id").val();
            //var reminderDate = $("#reminder-date").val();
            var remiderNote = $("#edit-reminder-message").val();

            $.ajax({
                url: '<?=BASE_URL?>/reports/editReminderCallback',
                dataType: 'html',
                type: 'POST',
                cache: false,
                data: {
                    remiderNote: remiderNote,
                    callbackId: callbackId
                },
                success: function(data) {
                    res = JSON.parse(data);
                    if (res.res == "OK") {
                        // $('#viewReminder').trigger('click');
                        $('#editReminder').dialog('close');
                        var orderId = $("#orderId").val();
                        var url = "<?=BASE_URL?>/reports/viewEstimateReminder";
                        $.ajax({
                            url: url,
                            dataType: 'html',
                            type: "POST",
                            data: {
                                orderId: orderId
                            },
                            success: function(data) {
                                $(".reminder_data_table tbody").html('');
                                $(".reminder_data_table tbody").append(data);
                                $('.reminder_data_box').dialog('open');
                            }
                        });
                    }
                }
            });
        });
        $(function() {
            $(".reminder_data_box").dialog({
                modal: true,
                autoOpen: false,
                title: "History",
                autoOpen: false,
                width: 700,
                height: 500,
                close: function(event, ui) {
                    location.reload();
                }
            });

            $(".reminder_data_box123").dialog({
                modal: true,
                autoOpen: false,
                title: "call History",
                autoOpen: false,
                width: 600,
                height: 500,
                close: function(event, ui) {
                    location.reload();
                }
            });
            $("#viewReminder").live("click", function() {
                var orderId = $(this).attr('orderId');
                $("#orderId").val(orderId);
                var url = "<?=BASE_URL?>/reports/viewEstimateReminder";
                $.ajax({
                    url: url,
                    dataType: 'html',
                    type: "POST",
                    data: {
                        orderId: orderId
                    },
                    success: function(data) {
                        $(".reminder_data_table tbody").html('');
                        $(".reminder_data_table tbody").append(data);
                        $('.reminder_data_box').dialog('open');
                    }
                });
            });


            $(".getcallhistory").live("click", function() {
                var orderId = $(this).attr('data-order');
                $("#orderId").val(orderId);
                var url = "<?=BASE_URL?>/reports/getcallhistory";
                $.ajax({
                    url: url,
                    dataType: 'html',
                    type: "POST",
                    data: {
                        orderId: orderId
                    },
                    success: function(data) {
                        $(".reminder_data_table123 tbody").html('');
                        $(".reminder_data_table123").append(data);
                        $('.reminder_data_box123').dialog('open');
                        console.log(data);
                    }
                });
            });

        });


        $(function() {
            $("#editReminder").dialog({
                modal: true,
                autoOpen: false,
                title: "History",
                autoOpen: false,
                width: 700,
                height: 500,
            });
            $("#editCallback").live("click", function() {
                var Id = $(this).attr('callbackId');
                var url = "<?=BASE_URL?>/reports/getEstimateReminder";
                $.ajax({
                    url: url,
                    dataType: 'html',
                    type: "POST",
                    data: {
                        Id: Id
                    },
                    success: function(data) {
                        res = JSON.parse(data);
                        $("#edit-reminder-message").val(res.notes);
                        //$("#edit-reminder-date").val(res.callback_date);
                        $("#callback_Id").val(Id);
                        $('#editReminder').dialog('open');
                    }
                });
            });
        });
        $("#deleteCallback").live("click", function() {
            var Id = $(this).attr('callbackId');
            var url = "<?=BASE_URL?>/reports/deleteCallback";
            $.ajax({
                url: url,
                dataType: 'html',
                type: "POST",
                data: {
                    callbackId: Id
                },
                success: function(data) {
                    res = JSON.parse(data);
                    if (res.res == "OK") {
                        var orderId = $("#orderId").val();
                        var url = "<?=BASE_URL?>/reports/viewEstimateReminder";
                        $.ajax({
                            url: url,
                            dataType: 'html',
                            type: "POST",
                            data: {
                                orderId: orderId
                            },
                            success: function(data) {
                                $(".reminder_data_table tbody").html('');
                                $(".reminder_data_table tbody").append(data);
                                $('.reminder_data_box').dialog('open');
                            }
                        });
                    }
                }
            });
        });

        // $(".estimator_header").live("click",function(){
        // 	var sortOrder = $(this).attr('order-by');
        // 	var sortField = $(this).attr('sort-by');
        // 	$("#sort_order").val(sortOrder);
        // 	 $("#sort_field").val(sortField);
        // 	document.forms['estimateForm'].submit();	
        // });
    });

    function sortTable(n) {
        var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
        table = document.getElementById("estimateTab");
        switching = true;
        //Set the sorting direction to ascending:
        dir = "asc";
        /*Make a loop that will continue until
        no switching has been done:*/
        while (switching) {
            //start by saying: no switching is done:
            switching = false;
            rows = table.rows;
            /*Loop through all table rows (except the
            first, which contains table headers):*/
            for (i = 1; i < (rows.length - 1); i++) {
                //start by saying there should be no switching:
                shouldSwitch = false;
                /*Get the two elements you want to compare,
                one from current row and one from the next:*/
                x = rows[i].getElementsByTagName("TD")[n];
                y = rows[i + 1].getElementsByTagName("TD")[n];
                /*check if the two rows should switch place,
                based on the direction, asc or desc:*/
                if (dir == "asc") {
                    if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                        //if so, mark as a switch and break the loop:
                        shouldSwitch = true;
                        break;
                    }
                } else if (dir == "desc") {
                    if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                        //if so, mark as a switch and break the loop:
                        shouldSwitch = true;
                        break;
                    }
                }
            }
            if (shouldSwitch) {
                /*If a switch has been marked, make the switch
                and mark that a switch has been done:*/
                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                switching = true;
                //Each time a switch is done, increase this count by 1:
                switchcount++;
            } else {
                /*If no switching has been done AND the direction is "asc",
                set the direction to "desc" and run the while loop again.*/
                if (switchcount == 0 && dir == "asc") {
                    dir = "desc";
                    switching = true;
                }
            }
        }
    }

    // function sortTable() {
    //   var table, rows, switching, i, x, y, shouldSwitch;
    //   table = document.getElementById("estimateTab");
    //   switching = true;
    //   /*Make a loop that will continue until
    //   no switching has been done:*/
    //   while (switching) {
    //     //start by saying: no switching is done:
    //     switching = false;
    //     rows = table.rows;
    //     /*Loop through all table rows (except the
    //     first, which contains table headers):*/
    //     for (i = 1; i < (rows.length - 1); i++) {
    //       //start by saying there should be no switching:
    //       shouldSwitch = false;
    //       Get the two elements you want to compare,
    //       one from current row and one from the next:
    //       x = rows[i].getElementsByTagName("TD")[8];
    //       console.log(x);
    //       y = rows[i + 1].getElementsByTagName("TD")[8];
    //       //check if the two rows should switch place:
    //       if (Number(x.innerHTML) > Number(y.innerHTML)) {
    //         //if so, mark as a switch and break the loop:
    //         shouldSwitch = true;
    //         break;
    //       }
    //     }
    //     if (shouldSwitch) {
    //       /*If a switch has been marked, make the switch
    //       and mark that a switch has been done:*/
    //       rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
    //       switching = true;
    //     }
    //   }
    // }
    function comparer(index) {
        return function(a, b) {
            var valA = getCellValue(a, index),
                valB = getCellValue(b, index)
            return isNaN(valA) && isNaN(valB) ? valA - valB : valA.toString().localeCompare(valB)
                // return $.isNumeric(valA) && $.isNumeric(valB) ? valA - valB : valA.toString().localeCompare(valB)
        }
    }

    function getCellValue(row, index) {
        return $(row).children('td').eq(index).text()
    }

    function call_cell_phone(phone_number) {
        bringToFront();
        placeCall(phone_number);
    }

    function hideEditEstimate() {
        $('#editReminder').dialog('close');
    }

    function ChangeActive(id, elem_chk) {
        if (elem_chk.checked) {
            $.get("<?=BASE_URL;?>/orders/changeActive", {
                    item_id: id,
                    is_active: 1
                },
                function(data) {
                    //document.forms['viewform'].submit();
                });
        } else {
            $.get("<?=BASE_URL;?>/orders/changeActive", {
                    item_id: id,
                    is_active: 0
                },
                function(data) {
                    //document.forms['viewform'].submit();
                });
        }
        elem_chk.closest('tr').remove();
    }

    function showEstimateReminder(e, oId) {
        var bodyRect = document.body.getBoundingClientRect(),
            elemRect = e.getBoundingClientRect(),
            offset = elemRect.top - bodyRect.top;

        console.log('Element is ' + offset + ' vertical pixels from <body>');
        var rect = e.getBoundingClientRect();
        console.log(rect.top, rect.right, rect.bottom, rect.left);
        var top = rect.top;
        if (offset > 800) {
            var offset1 = offset * .75;
        } else {
            var offset1 = offset * .95;
        }

        document.getElementById("orderId").value = oId;
        document.getElementById("reminderEmail").style.display = "block";
        $('#reminderEmail').css('marginTop', offset1 + 'px');
    }

    function hideInvoiceReview() {
        document.getElementById("reminderEmail").style.display = "none";
    }
</script>

<form method="GET" name="estimateForm" id="estimateForm" action="<?= $PHP_SELF?>" name="viewform1">
    <input type="hidden" name="action" value="view">
    <input type="hidden" name="order" value="<?=$_GET['order']?>">
    <input type="hidden" name="sort" value="<?=$_GET['sort']?>">
    <input type="hidden" name="currentPage" value="<?=$_GET['currentPage']?>">
    <input type="hidden" name="orderId" id="orderId">
    <input type="hidden" name="fromTech" value="<?=$fromTech;?>">
    <input type="hidden" name="sort_field" id="sort_field" value="<?=$sort_field;?>">
    <input type="hidden" name="sort_order" id="sort_order" value="<?=$sort_order;?>">


    <table border="0" cellspacing="10" cellpadding="0">
        <tr>
            <td class="sectionTitle" colspan="8">Estimates</td>
        </tr>
        <?php if($common->getLoggedUserRoleID() == 1) {?>
        <tr>
            <td colspan="7"><input type="button" class="buttons" name="Back" value="Back" onclick="window.location ='<?php echo BASE_URL;?>/orders/invoiceTablet';"></td>
        </tr>
        <?php } ?>
        <tr>
            <td align="right" style="visibility:hidden;">Search:</td>
            <td style="display:none;">
                <?php
			if(isset($_REQUEST['dateFilter'])){
			$dateFilter	= $_REQUEST['dateFilter'];
			}
			else {
			$dateFilter=2;	
			}
			
			?>
                    <input type="hidden" name="dateFilter" value="<?= $dateFilter ?>">
                    <select name="dateFilter11">
			<option value="1" <?php echo ( 1 == $dateFilter ? ' selected' : '');?> >Estimate</option>
			<option value="2" <?php echo ( 2 == $dateFilter ? ' selected' : '');?>>Callback</option>
			<option value="3" <?php echo ( 3 == $dateFilter ? ' selected' : '');?>>Missing Callback</option>
		</select>
            </td>
            <td align="right" style="display:none;"></td>
            <td>
                Date from:<input type="text" name="ffromdate" class="emboss" style="width: 85px; cursor: hand; cursor: pointer;" readonly="1" onclick="scwShow(this,event);" onkeydown="return false;" value="<?=$fdate?>"> Date to:<input type="text" name="ftodate"
                    class="emboss" style="width: 85px; cursor: hand; cursor: pointer;" readonly="1" onclick="scwShow(this,event);" onkeydown="return false;" value="<?=$tdate?>">
            </td>
            <!-- <td align="right">Date to:</td>	 -->
            <!-- <td>
			<input type="text" name="ftodate" class="emboss" style="width: 85px; cursor: hand; cursor: pointer;" readonly="1" onclick="scwShow(this,event);" onkeydown="return false;" value="<?=$tdate?>">
		</td> -->
            <td align="right">Show hidden:</td>
            <td colspan="3"><input type="checkbox" id="ShowInactive" <?php if ($ShowInactive) echo 'checked';?> name="ShowInactive"/></td>

        </tr>

        <tr>
            <?php if($_SESSION['user']['show_estimate'] != 1) {?>
            <td align="right">Estimator:</td>
            <td>
                <select name="estimator" <?=$disabled ?>>
				<option value="">Select Source</option>
				<? 
				foreach($booking_sources as $k => $v) {
					echo '<option value="'.$k.'"'.( $k == $booking_source_id ? ' selected' : '').'>'.$v.'</option>';
				}
				?>
			</select>
            </td>
            <?php } else {
			$estimate = $common->getLoggedUserID();
		?>
            <td></td>
            <td></td>
            <?php }?>
            <td align="right">Job Type:</td>
            <td>
                <select name="job_type">
				<option value="" >All</option>
				<? 
				foreach($job_types as $k => $v) {
					echo '<option value="'.$k.'"'.( $k === $job_type_id ? ' selected' : '').'>'.$v.'</option>';
				}
				?>
			</select>
            </td>
            <td align="right">Ref:</td>
            <td colspan="2"><input type="text" name="order_id" value="<?= $order_id ?>"></td>
        </tr>
        <tr>
            <td align="right">Phone:</td>
            <td><input type="text" name="phone" value="<?= $phone ?>"></td>
            <td colspan="5">
                <input type="submit" name="submit2" value="Update" class="buttons">
            </td>
        </tr>
    </table>
</form>
<?php
if(!isset($_REQUEST['dateFilter'])){
	$class1="";
	$class3="";
	$class2="active";
	$estimate="Callback";
	
}
else if($_REQUEST['dateFilter']==1){
	$class1="active";
	$class3="";
	$class2="";
	$estimate="Estimate";
}
else if($_REQUEST['dateFilter']==2){
	$class1="";
	$class3="";
	$class2="active";
	$estimate="Callback";
}
else if($_REQUEST['dateFilter']==3){
	$class1="";
	$class3="active";
	$class2="";
	$estimate="Missed calls";
}

$misssed_call=0;

foreach($records2 as $records4 ){
	
	  $call_back_date = $records4['last_estimate_details']['callback_date'];
			$last_call_date = $records4['last_estimate_details']['lastcall_date'];
					
			if(empty($last_call_date)){
				$curDateTime = strtotime(date("Y-m-d"));
				$myDate = strtotime($call_back_date);
				
				if($myDate > $curDateTime){
                   continue;
					
				}
				
			}
			else if (strtotime($last_call_date) == strtotime($call_back_date) ) {
					continue;
				}
			else if (strtotime($last_call_date) > strtotime($call_back_date) ) {
					continue;
				}

				$misssed_call++;
	
}


?>
    <p style="margin-left:60em;margin-bottom:-3em"><b>Estimate: <?= count($estimate1) ?></b> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
        <b>Callback: <?= count($records2) ?></b> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
        <b>Missed Callback: <?= $misssed_call ?></b>
    </p>
    <br>

    <ul class="tabs group" style="margin:0;padding:0">
        <li class="<?= $class2 ?> li_1"><a href="#one">Callback</a></li>
        <li class="<?= $class1 ?> li_2"><a href="#two">Estimate</a></li>
        <li class="<?= $class3 ?> li_3"><a href="#three">Missed callback</a></li>

    </ul>
    <table id="estimateTab" class="results" cellpadding="3" cellspacing="0" style="border-style: solid;border-width:1px;" width="900px">
        <thead>
            <tr>
                <th style='width:60px;'><a href="javascript:setOrder('order_number');">Ref #</a></th>
                <th style='width:80px;'><a href="javascript:setOrder('booking_date');">Estimate Date</a></th>
                <th style='width:80px;'><a href="javascript:setOrder('cell_phone');">Customer Phone</a></th>
                <th onclick="sortTable(3)" sort-by="estimator_name" order-by="<?=( ('estimator_name'==$sort_field && $sort_order=='asc') ? 'desc' : 'asc' )?>">Estimator</th>
                <th onclick="sortTable(4)" style='width:140px;' class="estimator_header" sort-by="agent_name" order-by="<?=( ('agent_name'==$sort_field && $sort_order=='asc') ? 'desc' : 'asc' )?>">Source</th>
                <th style='width:140px;'>Customer</th>
                <th style='width:140px;'>City</th>
                <th style='width:140px;'>Last Called</th>
                <th style='width:140px;' onclick="sortTable(8)" sort-by="agent_name" order-by="<?=( ('agent_name'==$sort_field && $sort_order=='asc') ? 'desc' : 'asc' )?>">Callback Date</th>

                <th style='width:140px;'>Notes</th>
                <!-- <th style='width:140px;'>Last Call History</th> -->
                <th style='width:120px;'><a href="javascript:setOrder('order_type');">Job Type</a></th>
                <th style='width:140px;'>Preview</th>
                <th>Reminder</th>
                <th>View</th>
                <th width="10"><a href="javascript:setOrder('flagactive');">Hide</a></th>
                <th style='width:8%;'>Date</th>
            </tr>
        </thead>
        <?php $r=1;
$count=0;
//echo "<pre>";
//print_r($items);
//die();
date_default_timezone_set('America/Vancouver');
	foreach ($items as $obj): 
		$class = 'cell'.(++$r%2);
		$timestamp = strtotime($obj['booking_date']);
		$date = date('d-m-Y', $timestamp);
		if ($fdetails) $extra = 'style="font-weight:bold;"';
		$id=$obj['id'];
		if($_REQUEST['dateFilter']==3){
	
			$call_back_date = $obj['last_estimate_details']['callback_date'];
			$last_call_date = $obj['last_estimate_details']['lastcall_date'];
					
			if(empty($last_call_date)){
				$curDateTime = strtotime(date("Y-m-d"));
				$myDate = strtotime($call_back_date);
				
				if($myDate > $curDateTime){
                   continue;
					
				}
				


				
			}
			else if (strtotime($last_call_date) == strtotime($call_back_date) ) {
					continue;
				}
			else if (strtotime($last_call_date) > strtotime($call_back_date) ) {
					continue;
				}
		}
?>
        <tbody>
            <tr class="<?= $class ?>" style="cursor:pointer;">
                <td onclick="document.location.href='<?=BASE_URL?>/orders/editBooking?order_id=<?=$obj['id']?>';">&nbsp;
                    <?php echo $obj['order_number']; ?>
                </td>
                <td>&nbsp;
                    <?php echo $date; ?>
                </td>
                <td>&nbsp;
                    <a href="#" onclick="call_cell_phone('<?=$obj[" cell_phone "]; ?>');">
                        <?php echo $obj['cell_phone']; ?>
                    </a>
                    <span class="fa fa-comments" style="font-size: 17px; color:green;" onclick="showSmsBox(<?= $obj['cell_phone']; ?>,<?= $obj['customer_id']; ?>);" aria-hidden="true"></span>
                    <span class="fa fa-envelope" onclick="showemailBox('<?= $obj['customer_email']; ?>',<?= $obj['cell_phone']; ?>,<?= $obj['customer_id']; ?>);" style="font-size: 15px; color:#3c8dbc;" aria-hidden="true"></span>
                </td>
                <td>&nbsp;
                    <?php echo $obj['estimator_name']; ?>
                </td>
                <td>&nbsp;
                    <?php echo $obj['agent_name']; ?>
                </td>
                <td>&nbsp;
                    <?php echo $obj['customer_name']; ?>
                </td>
                <td>&nbsp;
                    <?php echo $obj['city']; ?>
                </td>
                <td>&nbsp;
                    <?php echo $obj['last_estimate_details']['lastcall_date']; ?>
                </td>
                <td>&nbsp;<span class="getcallhistory" data-order="<?= $obj['id']; ?>"><?php echo $obj['last_estimate_details']['callback_date']; ?></span></td>
                <td>&nbsp;
                    <?php echo substr($obj['last_estimate_details']['notes'], 0, 20); ?>
                </td>
                <!-- <td>&nbsp;<?php echo $obj['last_call_history']; ?></td> -->
                <td>&nbsp;
                    <?php echo $obj['order_type']; ?>
                </td>
                <td>&nbsp;<a target="_blank" href="http://hvacproz.ca/acesys/index.php/orders/editBooking?order_id=<?php echo $obj['id'] ?>&get_preview=1"><button style="font-size:12px;">Preview</button></a></td>
                <td><input type="button" value="Reminder" name="setReminder" id="setReminder" onclick="showEstimateReminder(this,<?= $obj['order_number']?>);"></td>
                <td><input type="button" value="Calls" name="viewReminder" id="viewReminder" orderId="<?=$obj['order_number'];?>"></td>
                <td><input type="checkbox" <?php if ($obj[ 'flagactive']) echo 'checked'; ?> onclick="ChangeActive(
                    <?=$obj['id']?>,this)"/></td>
                <td>
                    <?php echo date("d-m-Y", strtotime($obj['modified'])); ?>
                </td>
            </tr>
        </tbody>
        <?php
$count++;
endforeach; ?>
    </table>

    <div id="reminderEmail" class="reminder-modal">
        <div class="reminder-modal-content">
            <input type="hidden" id="reminder-type-val" name="reminderType">
            <input type="hidden" id="hide_modal" name="hide_modal">
            <h3>Reminder Estimate</h3>
            <table class="reminder-email-table">
                <tr>
                    <td>
                        <span>Callback Date:</span><input class="emboss" type="text" id="reminder-date" name="reminderDate" style="width: 85px; cursor: hand; cursor: pointer;" onclick="scwShow(this,event);" onkeydown="return false;" value="<?=date('d M Y')?>">
                    </td>
                </tr>
                <tr>
                    <td>
                        <span>Note:</span><textarea class="reminder-message" id="reminder-message" name="message" rows="4" cols="30"></textarea>
                    </td>
                </tr>
            </table>
            <input type="button" class="reminder-button" id="save-reminder-email" name="OK" value="OK">
            <input type="button" class="reminder-button" name="cancel" value="Cancel" onclick="hideInvoiceReview();">
        </div>
    </div>

    <div id="editReminder">
        <!-- <body> -->
        <div>
            <h3>Edit Reminder</h3>
            <table class="reminder-email-table">
                <tr>
                    <td>
                        <span><b>Note:</b></span><textarea class="reminder-message" id="edit-reminder-message" name="message" rows="10" cols="50"></textarea>
                        <input type="hidden" name="callback_Id" id="callback_Id">
                    </td>
                </tr>
            </table>
            <input type="button" class="reminder-button" id="edit-reminder-email" name="OK" value="OK">
            <input type="button" class="reminder-button" name="cancel" value="Cancel" onclick="hideEditEstimate();">
        </div>
        <!-- </body> -->
    </div>
    <div class="reminder_data_box">
        <table class="reminder_data_table">
            <thead>
                <tr>
                    <th></th>
                    <th>Call Date</th>
                    <th>CallBack Date</th>
                    <th>Commented By</th>
                    <th>Notes</th>
                </tr>
            </thead>
            <tbody>
            </tbody>
        </table>
    </div>


    <div class="reminder_data_box123">
        <table class="reminder_data_table123">

        </table>
    </div>

    <div id="reminderSms" style="display: none">

        <table>
            <tr>
                <td>
                    <!-- <input type="text" name="sms"> -->
                    <textarea id="messageVal" style="width: 300px;height: 100px;"></textarea>
                </td>
            </tr>
        </table>
        <input type="button" name="OK" value="Send" style="padding: 5px;margin-top: 5px;" onclick="SendSms()">
        <input type="button" name="cancel" value="Cancel" onclick="hideSmsBox();" style="padding: 5px;margin-top: 5px;">
    </div>

    <div id="sendSeparateEmail" style="display: none;">
        <textarea class="emailVal" id="emailVal2" style="width: 500px;height: 300px;display: block;"></textarea>
        <input type="button" name="OK" value="Send" style="padding: 5px;margin-top: 5px;" onclick="sendSeparateEmail()">
        <input type="button" name="cancel" value="Cancel" onclick="hideEmailBox();" style="padding: 5px;margin-top: 5px;">
    </div>

    <script>
        $('.li_1').live('click', function() {
            $(this).addClass('active');
            $('.li_2').removeClass('active');
            $('.li_3').removeClass('active');
            $('input[name="dateFilter"]').val('2');
            $('#estimateForm').submit();

        });

        $('.li_2').live('click', function() {
            $(this).addClass('active');
            $('.li_1').removeClass('active');
            $('.li_3').removeClass('active');
            $('input[name="dateFilter"]').val('1');
            $('#estimateForm').submit();

        });

        $('.li_3').live('click', function() {
            $(this).addClass('active');
            $('.li_1').removeClass('active');
            $('.li_2').removeClass('active');
            $('input[name="dateFilter"]').val('3');
            $('#estimateForm').submit();


        });

        function sendSeparateEmail() {

            var email = localStorage.getItem('email_sent_id');
            var phone = localStorage.getItem('email_phone');
            var customerId = localStorage.getItem('email_id');
            // var message = $('#emailVal').val();
            var message = tinyMCE.activeEditor.getContent();
            //var message  = $('#emailVal2').val();
            $.ajax({
                url: '<?=BASE_URL?>/orders/sendSeparateEmail',
                dataType: 'html',
                type: 'POST',
                cache: false,
                data: {
                    email: email,
                    cusId: customerId,
                    message: message
                },
                success: function(data) {
                    res = JSON.parse(data);
                    if (res.res == "OK") {
                        window.location.reload();
                    }
                }
            });
        }

        function SendSms() {
            var phone_number = localStorage.getItem('sms_phone');
            var customerId = localStorage.getItem('sms_id');
            var message = $('#messageVal').val();
            $.ajax({
                url: '<?=BASE_URL?>/orders/SendSms',
                dataType: 'html',
                type: 'POST',
                cache: false,
                data: {
                    phone: phone_number,
                    cusId: customerId,
                    message: message
                },
                success: function(data) {
                    res = JSON.parse(data);
                    if (res.res == "OK") {
                        hideSmsBox();
                        //window.location.reload();
                    }
                }
            });
        }

        function hideEmailBox() {
            $("#sendSeparateEmail").dialog("close");
        }

        function showSmsBox(phone, cus_id) {
            localStorage.setItem('sms_phone', phone);
            localStorage.setItem('sms_id', cus_id);

            $("#reminderSms").dialog("open");
        }

        function showemailBox(email1, phone1, cus_id1) {
            if (tinymce.get("emailVal2")) {
                tinymce.remove('#emailVal2');
            }
            $('#emailVal2').val('message');
            setTimeout(() => {
                addTinyMCE("#emailVal2");
            }, 10);
            $("#sendSeparateEmail").dialog("open");
            localStorage.setItem('email_phone', phone1);
            localStorage.setItem('email_id', cus_id1);
            localStorage.setItem('email_sent_id', email1);
            localStorage.setItem('sms_id', cus_id1);
            $("#sendSeparateEmail").dialog("open");
        }




        function hideSmsBox() {
            $("#reminderSms").dialog("close");

        }

        $(function() {

            $("#sendSeparateEmail").dialog({
                modal: true,
                autoOpen: false,
                title: "Send Email",
                width: 700,
                height: 500,
            });

            $('.openMailBox').live('click', function() {
                console.log('111');

            });


            $("#reminderSms").dialog({
                modal: true,
                autoOpen: false,
                title: "Send SMS",
                width: 350,
                height: 200,
            });
        });
    </script>